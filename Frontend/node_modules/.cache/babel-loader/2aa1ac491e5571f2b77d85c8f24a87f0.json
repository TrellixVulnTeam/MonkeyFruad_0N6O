{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\PROJECT ALL\\\\MonkeyFruad\\\\Frontend\\\\src\\\\user\\\\components\\\\Listcomment2.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from \"react\";\nimport Axios from \"axios\";\nimport usercontext from \"../context/usercontext\";\nimport \"./Listcomment2.css\";\nimport * as moment from \"moment\";\nimport \"moment/locale/th\";\nimport _ from \"lodash\";\nimport ClipLoader from \"./clipLoader\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Modalimage from \"./Modalimage\";\n\nconst Listcomment2 = ({\n  commentmore,\n  handledeletetorerender,\n  handleedittorerender\n}) => {\n  _s();\n\n  const [imagesFile, setImagesFile] = useState(); //สร้าง State เพื่อเก็บไฟล์ที่อัพโหลด\n\n  const [files, Setfiles] = useState();\n  const [error, Seterror] = useState();\n  const [isActive, setIsActive] = useState(false);\n\n  const onClick = () => setIsActive(!isActive);\n\n  const [item, Setitem] = useState([]);\n  const [checkedittext, Setcheckedittext] = useState(false);\n  const [textcomment, Settextcomment] = useState();\n  const [edittextcomment, Setedittextcomment] = useState();\n  const [imagecomment, Setimagecomment] = useState();\n  const [loading, Setloading] = useState();\n  const [fuck, Setfuck] = useState([]);\n  const [isopen, Setisopen] = useState(false);\n  const [imagemodal, Setimagemodal] = useState();\n  let {\n    user,\n    setUser\n  } = useContext(usercontext);\n\n  const handleopenmodal = async () => {\n    Setisopen(true);\n  };\n\n  const handleclosemodal = async () => {\n    Setisopen(false);\n  };\n\n  const FileUpload = event => {\n    event.preventDefault(); // ใส่ไว้ไม่ให้ refresh หน้าเว็บ\n\n    setImagesFile([]);\n    var myfuck = [];\n    var files = [];\n    let date = new Date();\n\n    if (imagecomment) {\n      imagecomment.map(async doc => {\n        const response = await Axios({\n          method: \"get\",\n          url: doc.url,\n          responseType: \"blob\"\n        });\n        await myfuck.push(new File([response.data], `filename${uuidv4()}.png`, {\n          type: response.data.type,\n          lastModified: date\n        }));\n      });\n    }\n\n    setTimeout(() => {\n      if (myfuck) {\n        myfuck.forEach(doc => {\n          files.push(doc);\n        });\n      }\n\n      console.log(files);\n      let filesnew = [...files, ...fuck, ...event.target.files];\n      Setfiles([...files, ...fuck, ...event.target.files]);\n      Setfuck(prevState => [...prevState, ...event.target.files]);\n      Seterror();\n\n      for (var i = 0; i < filesnew.length; i++) {\n        let reader = new FileReader(); //ใช้ Class  FileReader เป็นตัวอ่านไฟล์\n\n        reader.readAsDataURL(filesnew[i]); //เป็นคำสั่งสำหรับการแปลง url มาเป็น file\n\n        reader.onloadend = () => {\n          // ใส่ข้อมูลเข้าไปยัง state ผาน  setimagesPreviewUrls\n          setImagesFile(prevState => [...prevState, reader.result]); //  PrevState เป็น Parameter ในการเรียก State ก่อนหน้ามาแล้วรวม Array กับ fileที่อัพโหลดเข้ามา\n        };\n      }\n    }, 50);\n  };\n\n  const handledeleteimage = async index => {\n    try {\n      if (imagecomment) {\n        console.log(\"a\");\n        imagecomment.splice(index, 1);\n        Setimagecomment([...imagecomment]);\n      }\n\n      if (imagesFile) {\n        console.log(\"b\");\n        imagesFile.splice(index, 1);\n        setImagesFile([...imagesFile]);\n      }\n\n      if (imagesFile && imagesFile.length === 0) {\n        setImagesFile();\n      }\n\n      if (fuck) {\n        console.log(\"c\");\n        fuck.splice(index, 1);\n        Setfuck([...fuck]);\n      }\n\n      let date = new Date();\n      var myFile = [];\n\n      if (imagecomment) {\n        imagecomment.forEach(async doc => {\n          const response = await fetch(doc.url);\n          const data = await response.blob();\n          myFile.push(new File([data], `filename${uuidv4()}.png`, {\n            type: \"image/png\",\n            lastModified: date\n          }));\n        });\n        Setfiles(myFile);\n      }\n\n      console.log(myFile);\n\n      if (files) {\n        console.log(\"d\");\n        files.splice(index, 1);\n        Setfiles([...files]);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const deleted = async (commentid, commentmore) => {\n    const postdelete = await Axios.post(`http://localhost:7000/post/delete/comment/${commentid}`, commentmore);\n    setIsActive(false);\n    Setfuck([]);\n    setImagesFile();\n    Setfiles();\n    handledeletetorerender();\n  };\n\n  const edit = async () => {\n    Setcheckedittext(true);\n    setIsActive(false);\n    var myfuck = [];\n    let date = new Date();\n\n    if (imagecomment) {\n      imagecomment.map(async doc => {\n        const response = await Axios({\n          method: \"get\",\n          url: doc.url,\n          responseType: \"blob\"\n        });\n        await myfuck.push(new File([response.data], `filename${uuidv4()}.png`, {\n          type: response.data.type,\n          lastModified: date\n        }));\n      });\n    }\n\n    setTimeout(() => {\n      Setfiles([...myfuck]);\n    }, 50);\n  };\n\n  const handleedit = async commentid => {\n    try {\n      let formdata = new FormData();\n\n      _.forEach(files, file => {\n        formdata.append(\"photocomment\", file);\n      });\n\n      formdata.append(\"edittextcomment\", edittextcomment);\n      formdata.append(\"photocomment\", imagecomment);\n      Setloading(true);\n      const editcomment = await Axios.post(`http://localhost:7000/post/edit/comment/${commentid}`, formdata);\n      handleedittorerender();\n      Setfuck([]);\n      setImagesFile();\n      Setfiles();\n      Setcheckedittext(false);\n      Setloading(false);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const gg = async () => {\n    try {\n      if (commentmore) {\n        Setedittextcomment(commentmore.textcomment);\n        Setimagecomment(commentmore.photocomment);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    gg();\n  }, [commentmore]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: commentmore ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row mypostcommentrow\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column1 mypostcommentrow1\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"vl\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mypost-comment-img1\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mypost-profilecomment-img1\",\n            children: commentmore.photoURL ? /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"img-circle\",\n              src: `${commentmore.photoURL.url}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"img-circle\",\n              src: \"/img/profile.png\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mypost-comment-name1\",\n            children: [commentmore ? \"@\" : null, commentmore.username, /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"mypost-comment-time1\",\n              children: [\" \", moment(new Date(commentmore.datetime.seconds * 1000)).format(\"LTS\"), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 15\n          }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-lg-10 col-4\",\n            children: /*#__PURE__*/_jsxDEV(ClipLoader, {\n              loading: loading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 17\n          }, this) : checkedittext ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row commentmypost\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"commenttextareamypost\",\n              children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n                value: edittextcomment,\n                onChange: e => {\n                  Setedittextcomment(e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"buttoncommentmypostsave1\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"buttoncommentmypostsave2\",\n                onClick: () => handleedit(commentmore.commentid),\n                children: \"\\u0E1A\\u0E31\\u0E19\\u0E17\\u0E36\\u0E01\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"container-img-holder-imgpreview1\",\n              children: !imagecomment && !imagesFile ? /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    className: \"uploadprovepost1\",\n                    src: \"/img/addphoto.png\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 271,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    id: \"FileInput\",\n                    className: \"uploadspostcomment\",\n                    type: \"file\",\n                    onChange: FileUpload,\n                    multiple: true,\n                    accept: \"image/png, image/jpeg , image/jpg\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 275,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 55\n              }, this) : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row imgcommentitemmypost\",\n              children: [imagesFile ? imagesFile.map((imagePreviewUrl, index) => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  clsssName: \"imagecommentmypost1 col-6\",\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    className: \"imgpreviewmypost1\",\n                    alt: \"previewImg\",\n                    src: imagePreviewUrl,\n                    style: {\n                      overflow: \"hidden\"\n                    },\n                    onMouseOver: e => e.currentTarget.style = {\n                      transform: \"scale(1.25)\",\n                      overflow: \"hidden\"\n                    },\n                    onMouseOut: e => e.currentTarget.style = {\n                      transform: \"scale(1)\",\n                      overflow: \"hidden\"\n                    },\n                    onClick: () => (Setimagemodal(imagePreviewUrl), handleopenmodal())\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 292,\n                    columnNumber: 31\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"deleteimgmyposts1\",\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      className: \"deleteimgmyposts2\",\n                      src: \"/img/delete2.png\",\n                      onClick: () => handledeleteimage(index)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 314,\n                      columnNumber: 33\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 313,\n                    columnNumber: 31\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 291,\n                  columnNumber: 29\n                }, this);\n              }) : imagecomment ? imagecomment ? imagecomment.map((doc, index) => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    className: \"imgpreviewmypost1\",\n                    src: doc.url,\n                    onClick: () => (Setimagemodal(doc.url), handleopenmodal())\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 328,\n                    columnNumber: 31\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"deleteimgmyposts1\",\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      className: \"deleteimgposts2\",\n                      src: \"/img/delete2.png\",\n                      onClick: () => handledeleteimage(index)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 335,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 334,\n                    columnNumber: 31\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 327,\n                  columnNumber: 31\n                }, this);\n              }) : null : null, /*#__PURE__*/_jsxDEV(Modalimage, {\n                isopen: isopen,\n                handleopenmodal: handleopenmodal,\n                handleclosemodal: handleclosemodal,\n                imagemodal: imagemodal\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 45\n              }, this), imagecomment || imagesFile ? /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    // className=\"uploadprovepost1\"\n                    src: \"/img/addphoto.png\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 351,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    id: \"FileInput\",\n                    className: \"uploadspostcomment\",\n                    type: \"file\",\n                    onChange: FileUpload,\n                    multiple: true,\n                    accept: \"image/png, image/jpeg , image/jpg\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 356,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 350,\n                  columnNumber: 27\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 25\n              }, this) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mypost-comment-comments1\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mypostcomment1\",\n              children: commentmore.textcomment\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row imglistcommentmypost\",\n              children: imagecomment ? imagecomment.map(doc => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"imglistcommentmypost1 col-6\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    className: \"listcommentmypost2\",\n                    src: `${doc.url}`,\n                    onClick: () => (Setimagemodal(doc.url), handleopenmodal())\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 381,\n                    columnNumber: 31\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 380,\n                  columnNumber: 29\n                }, this);\n              }) : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }, this), user && commentmore.userid == user.uid ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column2 mypostcommentrow2\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"menu-containermypostcommentsetting\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: onClick,\n            className: \"mypostcommentbuttonsetting\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"mypostcommentimg-setting\",\n              src: \"/img/setting.png\",\n              alt: \"avatar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `mypostcommentmenusetting ${isActive ? \"active\" : \"inactive\"}`,\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"ul-mypostcommentmenusetting\",\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"li-mypostcommentmenusetting\",\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  className: \"a-mypostcommentmenusetting\",\n                  onClick: () => edit(commentmore.commentid),\n                  children: \"\\u0E41\\u0E01\\u0E49\\u0E44\\u0E02\\u0E04\\u0E2D\\u0E21\\u0E40\\u0E21\\u0E19\\u0E15\\u0E4C\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 414,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 413,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"li-mypostcommentmenusetting\",\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  className: \"a-mypostcommentmenusetting\",\n                  onClick: () => deleted(commentmore.commentid, commentmore),\n                  children: [\" \", \"\\u0E25\\u0E1A\\u0E04\\u0E2D\\u0E21\\u0E40\\u0E21\\u0E19\\u0E15\\u0E4C\", \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 422,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 421,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 13\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 9\n    }, this) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 218,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Listcomment2, \"yxldaXwucCO1liE5FNgHC4PKtiI=\");\n\n_c = Listcomment2;\nexport default Listcomment2;\n\nvar _c;\n\n$RefreshReg$(_c, \"Listcomment2\");","map":{"version":3,"sources":["D:/PROJECT ALL/MonkeyFruad/Frontend/src/user/components/Listcomment2.js"],"names":["React","useEffect","useState","useContext","Axios","usercontext","moment","_","ClipLoader","v4","uuidv4","Modalimage","Listcomment2","commentmore","handledeletetorerender","handleedittorerender","imagesFile","setImagesFile","files","Setfiles","error","Seterror","isActive","setIsActive","onClick","item","Setitem","checkedittext","Setcheckedittext","textcomment","Settextcomment","edittextcomment","Setedittextcomment","imagecomment","Setimagecomment","loading","Setloading","fuck","Setfuck","isopen","Setisopen","imagemodal","Setimagemodal","user","setUser","handleopenmodal","handleclosemodal","FileUpload","event","preventDefault","myfuck","date","Date","map","doc","response","method","url","responseType","push","File","data","type","lastModified","setTimeout","forEach","console","log","filesnew","target","prevState","i","length","reader","FileReader","readAsDataURL","onloadend","result","handledeleteimage","index","splice","myFile","fetch","blob","err","deleted","commentid","postdelete","post","edit","handleedit","formdata","FormData","file","append","editcomment","gg","photocomment","photoURL","username","datetime","seconds","format","e","value","imagePreviewUrl","overflow","currentTarget","style","transform","userid","uid"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAO,oBAAP;AACA,OAAO,KAAKC,MAAZ,MAAwB,QAAxB;AACA,OAAO,kBAAP;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAGA,MAAMC,YAAY,GAAG,CAAC;AACpBC,EAAAA,WADoB;AAEpBC,EAAAA,sBAFoB;AAGpBC,EAAAA;AAHoB,CAAD,KAIf;AAAA;;AACJ,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8Bf,QAAQ,EAA5C,CADI,CAC4C;;AAChD,QAAM,CAACgB,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,EAAlC;AACA,QAAM,CAACkB,KAAD,EAAQC,QAAR,IAAoBnB,QAAQ,EAAlC;AACA,QAAM,CAACoB,QAAD,EAAWC,WAAX,IAA0BrB,QAAQ,CAAC,KAAD,CAAxC;;AACA,QAAMsB,OAAO,GAAG,MAAMD,WAAW,CAAC,CAACD,QAAF,CAAjC;;AACA,QAAM,CAACG,IAAD,EAAOC,OAAP,IAAkBxB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACyB,aAAD,EAAgBC,gBAAhB,IAAoC1B,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAAC2B,WAAD,EAAcC,cAAd,IAAgC5B,QAAQ,EAA9C;AACA,QAAM,CAAC6B,eAAD,EAAkBC,kBAAlB,IAAwC9B,QAAQ,EAAtD;AACA,QAAM,CAAC+B,YAAD,EAAeC,eAAf,IAAkChC,QAAQ,EAAhD;AACA,QAAM,CAACiC,OAAD,EAAUC,UAAV,IAAwBlC,QAAQ,EAAtC;AACA,QAAM,CAACmC,IAAD,EAAOC,OAAP,IAAkBpC,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACqC,MAAD,EAASC,SAAT,IAAsBtC,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACuC,UAAD,EAAaC,aAAb,IAA8BxC,QAAQ,EAA5C;AAEA,MAAI;AAAEyC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBzC,UAAU,CAACE,WAAD,CAAlC;;AAEA,QAAMwC,eAAe,GAAG,YAAU;AAChCL,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD,GAFD;;AAGA,QAAMM,gBAAgB,GAAG,YAAU;AACjCN,IAAAA,SAAS,CAAC,KAAD,CAAT;AACD,GAFD;;AAIA,QAAMO,UAAU,GAAIC,KAAD,IAAW;AAC5BA,IAAAA,KAAK,CAACC,cAAN,GAD4B,CACJ;;AAExBhC,IAAAA,aAAa,CAAC,EAAD,CAAb;AACA,QAAIiC,MAAM,GAAG,EAAb;AACA,QAAIhC,KAAK,GAAG,EAAZ;AACA,QAAIiC,IAAI,GAAG,IAAIC,IAAJ,EAAX;;AACA,QAAInB,YAAJ,EAAkB;AAChBA,MAAAA,YAAY,CAACoB,GAAb,CAAiB,MAAOC,GAAP,IAAe;AAC9B,cAAMC,QAAQ,GAAG,MAAMnD,KAAK,CAAC;AAC3BoD,UAAAA,MAAM,EAAE,KADmB;AAE3BC,UAAAA,GAAG,EAAEH,GAAG,CAACG,GAFkB;AAG3BC,UAAAA,YAAY,EAAE;AAHa,SAAD,CAA5B;AAKA,cAAMR,MAAM,CAACS,IAAP,CACJ,IAAIC,IAAJ,CAAS,CAACL,QAAQ,CAACM,IAAV,CAAT,EAA2B,WAAUnD,MAAM,EAAG,MAA9C,EAAqD;AACnDoD,UAAAA,IAAI,EAAEP,QAAQ,CAACM,IAAT,CAAcC,IAD+B;AAEnDC,UAAAA,YAAY,EAAEZ;AAFqC,SAArD,CADI,CAAN;AAMD,OAZD;AAaD;;AAEDa,IAAAA,UAAU,CAAC,MAAM;AACf,UAAId,MAAJ,EAAY;AACVA,QAAAA,MAAM,CAACe,OAAP,CAAgBX,GAAD,IAAS;AACtBpC,UAAAA,KAAK,CAACyC,IAAN,CAAWL,GAAX;AACD,SAFD;AAGD;;AACDY,MAAAA,OAAO,CAACC,GAAR,CAAYjD,KAAZ;AAEA,UAAIkD,QAAQ,GAAG,CAAC,GAAGlD,KAAJ,EAAW,GAAGmB,IAAd,EAAoB,GAAGW,KAAK,CAACqB,MAAN,CAAanD,KAApC,CAAf;AAEAC,MAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAW,GAAGmB,IAAd,EAAoB,GAAGW,KAAK,CAACqB,MAAN,CAAanD,KAApC,CAAD,CAAR;AACAoB,MAAAA,OAAO,CAAEgC,SAAD,IAAe,CAAC,GAAGA,SAAJ,EAAe,GAAGtB,KAAK,CAACqB,MAAN,CAAanD,KAA/B,CAAhB,CAAP;AACAG,MAAAA,QAAQ;;AAER,WAAK,IAAIkD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,QAAQ,CAACI,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACxC,YAAIE,MAAM,GAAG,IAAIC,UAAJ,EAAb,CADwC,CACT;;AAC/BD,QAAAA,MAAM,CAACE,aAAP,CAAqBP,QAAQ,CAACG,CAAD,CAA7B,EAFwC,CAEL;;AACnCE,QAAAA,MAAM,CAACG,SAAP,GAAmB,MAAM;AACvB;AACA3D,UAAAA,aAAa,CAAEqD,SAAD,IAAe,CAAC,GAAGA,SAAJ,EAAeG,MAAM,CAACI,MAAtB,CAAhB,CAAb,CAFuB,CAGvB;AACD,SAJD;AAKD;AACF,KAvBS,EAuBP,EAvBO,CAAV;AAwBD,GA/CD;;AAiDA,QAAMC,iBAAiB,GAAG,MAAOC,KAAP,IAAiB;AACzC,QAAI;AACF,UAAI9C,YAAJ,EAAkB;AAChBiC,QAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACAlC,QAAAA,YAAY,CAAC+C,MAAb,CAAoBD,KAApB,EAA2B,CAA3B;AACA7C,QAAAA,eAAe,CAAC,CAAC,GAAGD,YAAJ,CAAD,CAAf;AACD;;AACD,UAAIjB,UAAJ,EAAgB;AACdkD,QAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACAnD,QAAAA,UAAU,CAACgE,MAAX,CAAkBD,KAAlB,EAAyB,CAAzB;AACA9D,QAAAA,aAAa,CAAC,CAAC,GAAGD,UAAJ,CAAD,CAAb;AACD;;AACD,UAAGA,UAAU,IAAIA,UAAU,CAACwD,MAAX,KAAsB,CAAvC,EAAyC;AACvCvD,QAAAA,aAAa;AACd;;AAED,UAAIoB,IAAJ,EAAU;AACR6B,QAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACA9B,QAAAA,IAAI,CAAC2C,MAAL,CAAYD,KAAZ,EAAmB,CAAnB;AACAzC,QAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,CAAD,CAAP;AACD;;AAED,UAAIc,IAAI,GAAG,IAAIC,IAAJ,EAAX;AACA,UAAI6B,MAAM,GAAG,EAAb;;AACA,UAAIhD,YAAJ,EAAkB;AAChBA,QAAAA,YAAY,CAACgC,OAAb,CAAqB,MAAOX,GAAP,IAAe;AAClC,gBAAMC,QAAQ,GAAG,MAAM2B,KAAK,CAAC5B,GAAG,CAACG,GAAL,CAA5B;AACA,gBAAMI,IAAI,GAAG,MAAMN,QAAQ,CAAC4B,IAAT,EAAnB;AACAF,UAAAA,MAAM,CAACtB,IAAP,CACE,IAAIC,IAAJ,CAAS,CAACC,IAAD,CAAT,EAAkB,WAAUnD,MAAM,EAAG,MAArC,EAA4C;AAC1CoD,YAAAA,IAAI,EAAE,WADoC;AAE1CC,YAAAA,YAAY,EAAEZ;AAF4B,WAA5C,CADF;AAMD,SATD;AAUAhC,QAAAA,QAAQ,CAAC8D,MAAD,CAAR;AACD;;AACDf,MAAAA,OAAO,CAACC,GAAR,CAAYc,MAAZ;;AACA,UAAI/D,KAAJ,EAAW;AACTgD,QAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACAjD,QAAAA,KAAK,CAAC8D,MAAN,CAAaD,KAAb,EAAoB,CAApB;AACA5D,QAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,CAAD,CAAR;AACD;AACF,KA1CD,CA0CE,OAAOkE,GAAP,EAAY;AACZlB,MAAAA,OAAO,CAACC,GAAR,CAAYiB,GAAZ;AACD;AACF,GA9CD;;AAiDA,QAAMC,OAAO,GAAG,OAAOC,SAAP,EAAiBzE,WAAjB,KAAiC;AAC/C,UAAM0E,UAAU,GAAG,MAAMnF,KAAK,CAACoF,IAAN,CACtB,6CAA4CF,SAAU,EADhC,EACkCzE,WADlC,CAAzB;AAGAU,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAe,IAAAA,OAAO,CAAC,EAAD,CAAP;AACArB,IAAAA,aAAa;AACbE,IAAAA,QAAQ;AACRL,IAAAA,sBAAsB;AACvB,GATD;;AAWA,QAAM2E,IAAI,GAAG,YAAY;AAEvB7D,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAL,IAAAA,WAAW,CAAC,KAAD,CAAX;AACA,QAAI2B,MAAM,GAAG,EAAb;AACA,QAAIC,IAAI,GAAG,IAAIC,IAAJ,EAAX;;AACA,QAAInB,YAAJ,EAAkB;AAChBA,MAAAA,YAAY,CAACoB,GAAb,CAAiB,MAAOC,GAAP,IAAe;AAC9B,cAAMC,QAAQ,GAAG,MAAMnD,KAAK,CAAC;AAC3BoD,UAAAA,MAAM,EAAE,KADmB;AAE3BC,UAAAA,GAAG,EAAEH,GAAG,CAACG,GAFkB;AAG3BC,UAAAA,YAAY,EAAE;AAHa,SAAD,CAA5B;AAKA,cAAMR,MAAM,CAACS,IAAP,CACJ,IAAIC,IAAJ,CAAS,CAACL,QAAQ,CAACM,IAAV,CAAT,EAA2B,WAAUnD,MAAM,EAAG,MAA9C,EAAqD;AACnDoD,UAAAA,IAAI,EAAEP,QAAQ,CAACM,IAAT,CAAcC,IAD+B;AAEnDC,UAAAA,YAAY,EAAEZ;AAFqC,SAArD,CADI,CAAN;AAMD,OAZD;AAaD;;AACDa,IAAAA,UAAU,CAAC,MAAM;AACf7C,MAAAA,QAAQ,CAAC,CAAC,GAAG+B,MAAJ,CAAD,CAAR;AACD,KAFS,EAER,EAFQ,CAAV;AAGD,GAxBD;;AA0BA,QAAMwC,UAAU,GAAG,MAAOJ,SAAP,IAAqB;AACtC,QAAI;AACF,UAAIK,QAAQ,GAAG,IAAIC,QAAJ,EAAf;;AACArF,MAAAA,CAAC,CAAC0D,OAAF,CAAU/C,KAAV,EAAkB2E,IAAD,IAAU;AACzBF,QAAAA,QAAQ,CAACG,MAAT,CAAgB,cAAhB,EAAgCD,IAAhC;AACD,OAFD;;AAGAF,MAAAA,QAAQ,CAACG,MAAT,CAAgB,iBAAhB,EAAmC/D,eAAnC;AACA4D,MAAAA,QAAQ,CAACG,MAAT,CAAgB,cAAhB,EAAgC7D,YAAhC;AAEAG,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAM2D,WAAW,GAAG,MAAM3F,KAAK,CAACoF,IAAN,CACvB,2CAA0CF,SAAU,EAD7B,EAExBK,QAFwB,CAA1B;AAKA5E,MAAAA,oBAAoB;AACpBuB,MAAAA,OAAO,CAAC,EAAD,CAAP;AACArB,MAAAA,aAAa;AACbE,MAAAA,QAAQ;AACRS,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACAQ,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KApBD,CAoBE,OAAOgD,GAAP,EAAY;AACZlB,MAAAA,OAAO,CAACC,GAAR,CAAYiB,GAAZ;AACD;AACF,GAxBD;;AA0BA,QAAMY,EAAE,GAAG,YAAY;AACrB,QAAI;AACF,UAAInF,WAAJ,EAAiB;AACfmB,QAAAA,kBAAkB,CAACnB,WAAW,CAACgB,WAAb,CAAlB;AACAK,QAAAA,eAAe,CAACrB,WAAW,CAACoF,YAAb,CAAf;AACD;AACF,KALD,CAKE,OAAOb,GAAP,EAAY;AACZlB,MAAAA,OAAO,CAACC,GAAR,CAAYiB,GAAZ;AACD;AACF,GATD;;AAUAnF,EAAAA,SAAS,CAAC,MAAM;AACd+F,IAAAA,EAAE;AACH,GAFQ,EAEN,CAACnF,WAAD,CAFM,CAAT;AAIA,sBACE;AAAA,cACGA,WAAW,gBACV;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,2BAAf;AAAA,gCACE;AAAK,UAAA,KAAK,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,qBAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,4BAAf;AAAA,sBACGA,WAAW,CAACqF,QAAZ,gBACC;AACE,cAAA,SAAS,EAAC,YADZ;AAEE,cAAA,GAAG,EAAG,GAAErF,WAAW,CAACqF,QAAZ,CAAqBzC,GAAI;AAFnC;AAAA;AAAA;AAAA;AAAA,oBADD,gBAMC;AAAK,cAAA,SAAS,EAAC,YAAf;AAA4B,cAAA,GAAG,EAAC;AAAhC;AAAA;AAAA;AAAA;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA,kBADF,eAWE;AAAK,YAAA,SAAS,EAAC,sBAAf;AAAA,uBACG5C,WAAW,GAAG,GAAH,GAAS,IADvB,EAEGA,WAAW,CAACsF,QAFf,eAGE;AAAM,cAAA,SAAS,EAAC,sBAAhB;AAAA,yBACG,GADH,EAEG7F,MAAM,CAAC,IAAI8C,IAAJ,CAASvC,WAAW,CAACuF,QAAZ,CAAqBC,OAArB,GAA+B,IAAxC,CAAD,CAAN,CAAsDC,MAAtD,CACC,KADD,CAFH,EAIK,GAJL;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAXF,eAqBE;AAAA;AAAA;AAAA;AAAA,kBArBF,EAsBGnE,OAAO,gBACN;AAAK,YAAA,SAAS,EAAC,iBAAf;AAAA,mCACE,QAAC,UAAD;AAAY,cAAA,OAAO,EAAEA;AAArB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADM,GAIJR,aAAa,gBACf;AAAK,YAAA,SAAS,EAAC,mBAAf;AAAA,oCACE;AAAK,cAAA,SAAS,EAAC,uBAAf;AAAA,qCACE;AACE,gBAAA,KAAK,EAAEI,eADT;AAEE,gBAAA,QAAQ,EAAGwE,CAAD,IAAO;AACfvE,kBAAAA,kBAAkB,CAACuE,CAAC,CAAClC,MAAF,CAASmC,KAAV,CAAlB;AACD;AAJH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eASE;AAAK,cAAA,SAAS,EAAC,0BAAf;AAAA,qCACE;AACE,gBAAA,SAAS,EAAC,0BADZ;AAEE,gBAAA,OAAO,EAAE,MAAMd,UAAU,CAAC7E,WAAW,CAACyE,SAAb,CAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBATF,eAkBE;AAAK,cAAA,SAAS,EAAC,kCAAf;AAAA,wBACE,CAACrD,YAAD,IAAiB,CAACjB,UAAnB,gBAAmC;AAAA,uCAC5B;AAAA,0CACE;AACE,oBAAA,SAAS,EAAC,kBADZ;AAEE,oBAAA,GAAG,EAAC;AAFN;AAAA;AAAA;AAAA;AAAA,0BADF,eAKE;AACE,oBAAA,EAAE,EAAC,WADL;AAEE,oBAAA,SAAS,EAAC,oBAFZ;AAGE,oBAAA,IAAI,EAAC,MAHP;AAIE,oBAAA,QAAQ,EAAE+B,UAJZ;AAKE,oBAAA,QAAQ,MALV;AAME,oBAAA,MAAM,EAAC;AANT;AAAA;AAAA;AAAA;AAAA,0BALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAD4B;AAAA;AAAA;AAAA;AAAA,sBAAnC,GAea;AAhBd;AAAA;AAAA;AAAA;AAAA,oBAlBF,eAqCE;AAAK,cAAA,SAAS,EAAC,0BAAf;AAAA,yBACG/B,UAAU,GACPA,UAAU,CAACqC,GAAX,CAAe,CAACoD,eAAD,EAAkB1B,KAAlB,KAA4B;AACzC,oCACE;AAAK,kBAAA,SAAS,EAAC,2BAAf;AAAA,0CACE;AAEE,oBAAA,SAAS,EAAC,mBAFZ;AAGE,oBAAA,GAAG,EAAC,YAHN;AAIE,oBAAA,GAAG,EAAE0B,eAJP;AAKE,oBAAA,KAAK,EAAE;AAAEC,sBAAAA,QAAQ,EAAE;AAAZ,qBALT;AAME,oBAAA,WAAW,EAAGH,CAAD,IACVA,CAAC,CAACI,aAAF,CAAgBC,KAAhB,GAAwB;AACvBC,sBAAAA,SAAS,EAAE,aADY;AAEvBH,sBAAAA,QAAQ,EAAE;AAFa,qBAP7B;AAYE,oBAAA,UAAU,EAAGH,CAAD,IACTA,CAAC,CAACI,aAAF,CAAgBC,KAAhB,GAAwB;AACvBC,sBAAAA,SAAS,EAAE,UADY;AAEvBH,sBAAAA,QAAQ,EAAE;AAFa,qBAb7B;AAkBE,oBAAA,OAAO,EAAI,OAAOhE,aAAa,CAAC+D,eAAD,CAAb,EAA+B5D,eAAe,EAArD;AAlBb,qBACOkC,KADP;AAAA;AAAA;AAAA;AAAA,0BADF,eAsBE;AAAK,oBAAA,SAAS,EAAC,mBAAf;AAAA,2CACE;AACE,sBAAA,SAAS,EAAC,mBADZ;AAEE,sBAAA,GAAG,EAAC,kBAFN;AAGE,sBAAA,OAAO,EAAE,MAAMD,iBAAiB,CAACC,KAAD;AAHlC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,0BAtBF;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF;AAgCD,eAjCD,CADO,GAmCP9C,YAAY,GACZA,YAAY,GACVA,YAAY,CAACoB,GAAb,CAAiB,CAACC,GAAD,EAAOyB,KAAP,KAAiB;AAChC,oCACE;AAAA,0CACA;AACE,oBAAA,SAAS,EAAC,mBADZ;AAEE,oBAAA,GAAG,EAAEzB,GAAG,CAACG,GAFX;AAGE,oBAAA,OAAO,EAAI,OAAOf,aAAa,CAACY,GAAG,CAACG,GAAL,CAAb,EAAuBZ,eAAe,EAA7C;AAHb;AAAA;AAAA;AAAA;AAAA,0BADA,eAOA;AAAK,oBAAA,SAAS,EAAC,mBAAf;AAAA,2CACA;AACE,sBAAA,SAAS,EAAC,iBADZ;AAEE,sBAAA,GAAG,EAAC,kBAFN;AAGE,sBAAA,OAAO,EAAE,MAAMiC,iBAAiB,CAACC,KAAD;AAHlC;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,0BAPA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF;AAiBD,eAlBD,CADU,GAoBV,IArBU,GAsBZ,IA1DN,eA2D0B,QAAC,UAAD;AAAY,gBAAA,MAAM,EAAExC,MAApB;AAA4B,gBAAA,eAAe,EAAEM,eAA7C;AAA8D,gBAAA,gBAAgB,EAAEC,gBAAhF;AAAkG,gBAAA,UAAU,EAAEL;AAA9G;AAAA;AAAA;AAAA;AAAA,sBA3D1B,EA6DMR,YAAY,IAAIjB,UAAjB,gBACC;AAAA,wCACE;AAAA,0CACE;AACE;AACA,oBAAA,GAAG,EAAC;AAFN;AAAA;AAAA;AAAA;AAAA,0BADF,eAME;AACE,oBAAA,EAAE,EAAC,WADL;AAEE,oBAAA,SAAS,EAAC,oBAFZ;AAGE,oBAAA,IAAI,EAAC,MAHP;AAIE,oBAAA,QAAQ,EAAE+B,UAJZ;AAKE,oBAAA,QAAQ,MALV;AAME,oBAAA,MAAM,EAAC;AANT;AAAA;AAAA;AAAA;AAAA,0BANF;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAeW,GAfX;AAAA;AAAA;AAAA;AAAA;AAAA,sBADD,GAkBE,IA/EP;AAAA;AAAA;AAAA;AAAA;AAAA,oBArCF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADe,gBA0Hf;AAAK,YAAA,SAAS,EAAC,0BAAf;AAAA,oCACE;AAAK,cAAA,SAAS,EAAC,gBAAf;AAAA,wBACGlC,WAAW,CAACgB;AADf;AAAA;AAAA;AAAA;AAAA,oBADF,eAKE;AAAK,cAAA,SAAS,EAAC,0BAAf;AAAA,wBACGI,YAAY,GACTA,YAAY,CAACoB,GAAb,CAAkBC,GAAD,IAAS;AACxB,oCACE;AAAK,kBAAA,SAAS,EAAC,6BAAf;AAAA,yCACE;AACE,oBAAA,SAAS,EAAC,oBADZ;AAEE,oBAAA,GAAG,EAAG,GAAEA,GAAG,CAACG,GAAI,EAFlB;AAGE,oBAAA,OAAO,EAAI,OAAOf,aAAa,CAACY,GAAG,CAACG,GAAL,CAAb,EAAuBZ,eAAe,EAA7C;AAHb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBADF;AASD,eAVD,CADS,GAYT;AAbN;AAAA;AAAA;AAAA;AAAA,oBALF;AAAA;AAAA;AAAA;AAAA;AAAA,kBApJJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAgLGF,IAAI,IAAI9B,WAAW,CAACiG,MAAZ,IAAsBnE,IAAI,CAACoE,GAAnC,gBACC;AAAK,QAAA,SAAS,EAAC,2BAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,oCAAf;AAAA,kCACE;AAAK,YAAA,OAAO,EAAEvF,OAAd;AAAuB,YAAA,SAAS,EAAC,4BAAjC;AAAA,mCACE;AACE,cAAA,SAAS,EAAC,0BADZ;AAEE,cAAA,GAAG,EAAC,kBAFN;AAGE,cAAA,GAAG,EAAC;AAHN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eASE;AACE,YAAA,SAAS,EAAG,4BACVF,QAAQ,GAAG,QAAH,GAAc,UACvB,EAHH;AAAA,mCAKE;AAAI,cAAA,SAAS,EAAC,6BAAd;AAAA,sCACE;AAAI,gBAAA,SAAS,EAAC,6BAAd;AAAA,uCACE;AACE,kBAAA,SAAS,EAAC,4BADZ;AAEE,kBAAA,OAAO,EAAE,MAAMmE,IAAI,CAAC5E,WAAW,CAACyE,SAAb,CAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBADF,eASE;AAAI,gBAAA,SAAS,EAAC,6BAAd;AAAA,uCACE;AACE,kBAAA,SAAS,EAAC,4BADZ;AAEE,kBAAA,OAAO,EAAE,MAAMD,OAAO,CAACxE,WAAW,CAACyE,SAAb,EAAuBzE,WAAvB,CAFxB;AAAA,6BAIG,GAJH,kEAKa,GALb;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBATF;AAAA;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,kBATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADD,GAsCG,IAtNN;AAAA;AAAA;AAAA;AAAA;AAAA,YADU,GA0NR;AA3NN;AAAA;AAAA;AAAA;AAAA,UADF;AA+ND,CA3aD;;GAAMD,Y;;KAAAA,Y;AA4aN,eAAeA,YAAf","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport Axios from \"axios\";\r\nimport usercontext from \"../context/usercontext\";\r\nimport \"./Listcomment2.css\";\r\nimport * as moment from \"moment\";\r\nimport \"moment/locale/th\";\r\nimport _ from \"lodash\";\r\nimport ClipLoader from \"./clipLoader\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport Modalimage from \"./Modalimage\"\r\n\r\n\r\nconst Listcomment2 = ({\r\n  commentmore,\r\n  handledeletetorerender,\r\n  handleedittorerender,\r\n}) => {\r\n  const [imagesFile, setImagesFile] = useState(); //สร้าง State เพื่อเก็บไฟล์ที่อัพโหลด\r\n  const [files, Setfiles] = useState();\r\n  const [error, Seterror] = useState();\r\n  const [isActive, setIsActive] = useState(false);\r\n  const onClick = () => setIsActive(!isActive);\r\n  const [item, Setitem] = useState([]);\r\n  const [checkedittext, Setcheckedittext] = useState(false);\r\n  const [textcomment, Settextcomment] = useState();\r\n  const [edittextcomment, Setedittextcomment] = useState();\r\n  const [imagecomment, Setimagecomment] = useState();\r\n  const [loading, Setloading] = useState();\r\n  const [fuck, Setfuck] = useState([]);\r\n  const [isopen, Setisopen] = useState(false);\r\n  const [imagemodal, Setimagemodal] = useState();\r\n\r\n  let { user, setUser } = useContext(usercontext);\r\n\r\n  const handleopenmodal = async() =>{\r\n    Setisopen(true)\r\n  }\r\n  const handleclosemodal = async() =>{\r\n    Setisopen(false)\r\n  }\r\n\r\n  const FileUpload = (event) => {\r\n    event.preventDefault(); // ใส่ไว้ไม่ให้ refresh หน้าเว็บ\r\n\r\n    setImagesFile([]);\r\n    var myfuck = [];\r\n    var files = [];\r\n    let date = new Date();\r\n    if (imagecomment) {\r\n      imagecomment.map(async (doc) => {\r\n        const response = await Axios({\r\n          method: \"get\",\r\n          url: doc.url,\r\n          responseType: \"blob\",\r\n        });\r\n        await myfuck.push(\r\n          new File([response.data], `filename${uuidv4()}.png`, {\r\n            type: response.data.type,\r\n            lastModified: date,\r\n          })\r\n        );\r\n      });\r\n    }\r\n\r\n    setTimeout(() => {\r\n      if (myfuck) {\r\n        myfuck.forEach((doc) => {\r\n          files.push(doc);\r\n        });\r\n      }\r\n      console.log(files);\r\n\r\n      let filesnew = [...files, ...fuck, ...event.target.files];\r\n\r\n      Setfiles([...files, ...fuck, ...event.target.files]);\r\n      Setfuck((prevState) => [...prevState, ...event.target.files]);\r\n      Seterror();\r\n\r\n      for (var i = 0; i < filesnew.length; i++) {\r\n        let reader = new FileReader(); //ใช้ Class  FileReader เป็นตัวอ่านไฟล์\r\n        reader.readAsDataURL(filesnew[i]); //เป็นคำสั่งสำหรับการแปลง url มาเป็น file\r\n        reader.onloadend = () => {\r\n          // ใส่ข้อมูลเข้าไปยัง state ผาน  setimagesPreviewUrls\r\n          setImagesFile((prevState) => [...prevState, reader.result]);\r\n          //  PrevState เป็น Parameter ในการเรียก State ก่อนหน้ามาแล้วรวม Array กับ fileที่อัพโหลดเข้ามา\r\n        };\r\n      }\r\n    }, 50);\r\n  };\r\n\r\n  const handledeleteimage = async (index) => {\r\n    try {\r\n      if (imagecomment) {\r\n        console.log(\"a\");\r\n        imagecomment.splice(index, 1);\r\n        Setimagecomment([...imagecomment]);\r\n      }\r\n      if (imagesFile) {\r\n        console.log(\"b\");\r\n        imagesFile.splice(index, 1);\r\n        setImagesFile([...imagesFile]);\r\n      }\r\n      if(imagesFile && imagesFile.length === 0){\r\n        setImagesFile()\r\n      }\r\n\r\n      if (fuck) {\r\n        console.log(\"c\");\r\n        fuck.splice(index, 1);\r\n        Setfuck([...fuck]);\r\n      }\r\n\r\n      let date = new Date();\r\n      var myFile = [];\r\n      if (imagecomment) {\r\n        imagecomment.forEach(async (doc) => {\r\n          const response = await fetch(doc.url);\r\n          const data = await response.blob();\r\n          myFile.push(\r\n            new File([data], `filename${uuidv4()}.png`, {\r\n              type: \"image/png\",\r\n              lastModified: date,\r\n            })\r\n          );\r\n        });\r\n        Setfiles(myFile);\r\n      }\r\n      console.log(myFile);\r\n      if (files) {\r\n        console.log(\"d\");\r\n        files.splice(index, 1);\r\n        Setfiles([...files]);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n\r\n  const deleted = async (commentid,commentmore) => {\r\n    const postdelete = await Axios.post(\r\n      `http://localhost:7000/post/delete/comment/${commentid}`,commentmore\r\n    );\r\n    setIsActive(false);\r\n    Setfuck([]);\r\n    setImagesFile();\r\n    Setfiles();\r\n    handledeletetorerender();\r\n  };\r\n\r\n  const edit = async () => {\r\n    \r\n    Setcheckedittext(true);\r\n    setIsActive(false);\r\n    var myfuck = []\r\n    let date = new Date();\r\n    if (imagecomment) {\r\n      imagecomment.map(async (doc) => {\r\n        const response = await Axios({\r\n          method: \"get\",\r\n          url: doc.url,\r\n          responseType: \"blob\",\r\n        });\r\n        await myfuck.push(\r\n          new File([response.data], `filename${uuidv4()}.png`, {\r\n            type: response.data.type,\r\n            lastModified: date,\r\n          })\r\n        );\r\n      });\r\n    }\r\n    setTimeout(() => {\r\n      Setfiles([...myfuck])\r\n    },50)\r\n  };\r\n\r\n  const handleedit = async (commentid) => {\r\n    try {\r\n      let formdata = new FormData();\r\n      _.forEach(files, (file) => {\r\n        formdata.append(\"photocomment\", file);\r\n      });\r\n      formdata.append(\"edittextcomment\", edittextcomment);\r\n      formdata.append(\"photocomment\", imagecomment);\r\n\r\n      Setloading(true);\r\n      const editcomment = await Axios.post(\r\n        `http://localhost:7000/post/edit/comment/${commentid}`,\r\n        formdata\r\n      );\r\n\r\n      handleedittorerender();\r\n      Setfuck([]);\r\n      setImagesFile();\r\n      Setfiles();\r\n      Setcheckedittext(false);\r\n      Setloading(false);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const gg = async () => {\r\n    try {\r\n      if (commentmore) {\r\n        Setedittextcomment(commentmore.textcomment);\r\n        Setimagecomment(commentmore.photocomment);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    gg();\r\n  }, [commentmore]);\r\n\r\n  return (\r\n    <div>\r\n      {commentmore ? (\r\n        <div className=\"row mypostcommentrow\">\r\n          <div className=\"column1 mypostcommentrow1\">\r\n            <div class=\"vl\"></div>\r\n            <div className=\"mypost-comment-img1\">\r\n              <div className=\"mypost-profilecomment-img1\">\r\n                {commentmore.photoURL ? (\r\n                  <img\r\n                    className=\"img-circle\"\r\n                    src={`${commentmore.photoURL.url}`}\r\n                  />\r\n                ) : (\r\n                  <img className=\"img-circle\" src=\"/img/profile.png\" />\r\n                )}\r\n              </div>\r\n              <div className=\"mypost-comment-name1\">\r\n                {commentmore ? \"@\" : null}\r\n                {commentmore.username}\r\n                <span className=\"mypost-comment-time1\">\r\n                  {\" \"}\r\n                  {moment(new Date(commentmore.datetime.seconds * 1000)).format(\r\n                    \"LTS\"\r\n                  )}{\" \"}\r\n                </span>\r\n              </div>\r\n              <br />\r\n              {loading ? (\r\n                <div className=\"col-lg-10 col-4\">\r\n                  <ClipLoader loading={loading} />\r\n                </div>\r\n              ) : checkedittext ? (\r\n                <div className=\"row commentmypost\">\r\n                  <div className=\"commenttextareamypost\">\r\n                    <textarea\r\n                      value={edittextcomment}\r\n                      onChange={(e) => {\r\n                        Setedittextcomment(e.target.value);\r\n                      }}\r\n                    ></textarea>\r\n                  </div>\r\n                  <div className=\"buttoncommentmypostsave1\">\r\n                    <button\r\n                      className=\"buttoncommentmypostsave2\"\r\n                      onClick={() => handleedit(commentmore.commentid)}\r\n                    >\r\n                      บันทึก\r\n                    </button>\r\n                  </div>\r\n\r\n                  <div className=\"container-img-holder-imgpreview1\">\r\n                  {(!imagecomment && !imagesFile) ?   <div>\r\n                          <label>\r\n                            <img\r\n                              className=\"uploadprovepost1\"\r\n                              src=\"/img/addphoto.png\"\r\n                            />\r\n                            <input\r\n                              id=\"FileInput\"\r\n                              className=\"uploadspostcomment\"\r\n                              type=\"file\"\r\n                              onChange={FileUpload}\r\n                              multiple\r\n                              accept=\"image/png, image/jpeg , image/jpg\"\r\n                            />\r\n                          </label>\r\n                        </div> :null \r\n                      }\r\n                  </div>\r\n                  <div className=\"row imgcommentitemmypost\">\r\n                    {imagesFile\r\n                      ? imagesFile.map((imagePreviewUrl, index) => {\r\n                          return (\r\n                            <div clsssName=\"imagecommentmypost1 col-6\">\r\n                              <img\r\n                                key={index}\r\n                                className=\"imgpreviewmypost1\"\r\n                                alt=\"previewImg\"\r\n                                src={imagePreviewUrl}\r\n                                style={{ overflow: \"hidden\" }}\r\n                                onMouseOver={(e) =>\r\n                                  (e.currentTarget.style = {\r\n                                    transform: \"scale(1.25)\",\r\n                                    overflow: \"hidden\",\r\n                                  })\r\n                                }\r\n                                onMouseOut={(e) =>\r\n                                  (e.currentTarget.style = {\r\n                                    transform: \"scale(1)\",\r\n                                    overflow: \"hidden\",\r\n                                  })\r\n                                }\r\n                                onClick = {() => (Setimagemodal(imagePreviewUrl),handleopenmodal())}\r\n\r\n                              />\r\n                              <div className=\"deleteimgmyposts1\">\r\n                                <img\r\n                                  className=\"deleteimgmyposts2\"\r\n                                  src=\"/img/delete2.png\"\r\n                                  onClick={() => handledeleteimage(index)}\r\n                                />\r\n                              </div>\r\n                            </div>\r\n                          );\r\n                        })\r\n                      : imagecomment\r\n                      ? imagecomment\r\n                        ? imagecomment.map((doc , index) => {\r\n                            return (\r\n                              <div >\r\n                              <img\r\n                                className=\"imgpreviewmypost1\"\r\n                                src={doc.url}\r\n                                onClick = {() => (Setimagemodal(doc.url),handleopenmodal())}\r\n\r\n                              />\r\n                              <div className=\"deleteimgmyposts1\">\r\n                              <img\r\n                                className=\"deleteimgposts2\"\r\n                                src=\"/img/delete2.png\"\r\n                                onClick={() => handledeleteimage(index)}\r\n                              />\r\n                            </div>\r\n                            </div>\r\n                            );\r\n                          })\r\n                        : null\r\n                      : null}\r\n                                            <Modalimage isopen={isopen} handleopenmodal={handleopenmodal} handleclosemodal={handleclosemodal} imagemodal={imagemodal}/>\r\n\r\n                      {(imagecomment || imagesFile) ? (\r\n                        <div>\r\n                          <label>\r\n                            <img\r\n                              // className=\"uploadprovepost1\"\r\n                              src=\"/img/addphoto.png\"\r\n                            />\r\n                            \r\n                            <input\r\n                              id=\"FileInput\"\r\n                              className=\"uploadspostcomment\"\r\n                              type=\"file\"\r\n                              onChange={FileUpload}\r\n                              multiple\r\n                              accept=\"image/png, image/jpeg , image/jpg\"\r\n                            />\r\n                          </label>{\" \"}\r\n                        </div>\r\n                      ) :null\r\n                      }\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <div className=\"mypost-comment-comments1\">\r\n                  <div className=\"mypostcomment1\">\r\n                    {commentmore.textcomment}\r\n                  </div>\r\n\r\n                  <div className=\"row imglistcommentmypost\">\r\n                    {imagecomment\r\n                      ? imagecomment.map((doc) => {\r\n                          return (\r\n                            <div className=\"imglistcommentmypost1 col-6\">\r\n                              <img\r\n                                className=\"listcommentmypost2\"\r\n                                src={`${doc.url}`}\r\n                                onClick = {() => (Setimagemodal(doc.url),handleopenmodal())}\r\n                              />\r\n                            </div>\r\n                          );\r\n                        })\r\n                      : null}\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {user && commentmore.userid == user.uid ? (\r\n            <div className=\"column2 mypostcommentrow2\">\r\n              <div className=\"menu-containermypostcommentsetting\">\r\n                <div onClick={onClick} className=\"mypostcommentbuttonsetting\">\r\n                  <img\r\n                    className=\"mypostcommentimg-setting\"\r\n                    src=\"/img/setting.png\"\r\n                    alt=\"avatar\"\r\n                  />\r\n                </div>\r\n\r\n                <div\r\n                  className={`mypostcommentmenusetting ${\r\n                    isActive ? \"active\" : \"inactive\"\r\n                  }`}\r\n                >\r\n                  <ul className=\"ul-mypostcommentmenusetting\">\r\n                    <li className=\"li-mypostcommentmenusetting\">\r\n                      <a\r\n                        className=\"a-mypostcommentmenusetting\"\r\n                        onClick={() => edit(commentmore.commentid)}\r\n                      >\r\n                        แก้ไขคอมเมนต์\r\n                      </a>\r\n                    </li>\r\n                    <li className=\"li-mypostcommentmenusetting\">\r\n                      <a\r\n                        className=\"a-mypostcommentmenusetting\"\r\n                        onClick={() => deleted(commentmore.commentid,commentmore)}\r\n                      >\r\n                        {\" \"}\r\n                        ลบคอมเมนต์{\" \"}\r\n                      </a>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n          \r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\nexport default Listcomment2;\r\n"]},"metadata":{},"sourceType":"module"}