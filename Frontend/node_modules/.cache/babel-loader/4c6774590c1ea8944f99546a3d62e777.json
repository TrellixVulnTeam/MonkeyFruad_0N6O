{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\monkeyfruad\\\\frontend\\\\src\\\\user\\\\components\\\\listcomment.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from \"react\";\nimport Axios from \"axios\";\nimport usercontext from \"../context/usercontext\";\nimport \"./listcomment.css\";\nimport * as moment from \"moment\";\nimport \"moment/locale/th\";\nimport _ from \"lodash\";\nimport ClipLoaderComent from \"./clipLoaderComent\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Modalimage from \"./Modalimage\";\nimport Modaldelete from \"./Modaldelete\";\n\nconst Listcomment = ({\n  commentmore,\n  handledeletetorerender,\n  handleedittorerender,\n  setIsActiveFromPost,\n  isActiveFromPost\n}) => {\n  _s();\n\n  const [imagesFile, setImagesFile] = useState(); //สร้าง State เพื่อเก็บไฟล์ที่อัพโหลด\n\n  const [imagecomment, Setimagecomment] = useState();\n  const [files, Setfiles] = useState();\n  const [error, Seterror] = useState();\n  const [item, Setitem] = useState([]);\n  const [checkedittext, Setcheckedittext] = useState(false);\n  const [textcomment, Settextcomment] = useState();\n  const [edittextcomment, Setedittextcomment] = useState(\"\");\n  const [imagecomment2, Setimagecomment2] = useState();\n  const [fuck, Setfuck] = useState([]);\n  const [isopen, Setisopen] = useState(false);\n  const [imagemodal, Setimagemodal] = useState();\n  const [loading, Setloading] = useState();\n  const [isActive, setIsActive] = useState(false);\n  const [modalcommentid, Setmodalcommentid] = useState();\n  const [modalcommentmore, Setmodalcommentmore] = useState();\n  const [isOpenModalDelete, SetisOpenModalDelete] = useState(false);\n  let {\n    user,\n    setUser\n  } = useContext(usercontext);\n\n  const handleopenmodal = async () => {\n    Setisopen(true);\n  };\n\n  const handleclosemodal = async () => {\n    Setisopen(false);\n  };\n\n  const handlemodalopen = async () => {\n    SetisOpenModalDelete(true);\n  };\n\n  const handlemodalclose = async () => {\n    SetisOpenModalDelete(false);\n  };\n\n  const handleOption = () => {\n    if (isActiveFromPost == false) {\n      setIsActiveFromPost();\n    }\n  };\n\n  const FileUpload = event => {\n    event.preventDefault(); // ใส่ไว้ไม่ให้ refresh หน้าเว็บ\n\n    setImagesFile([]);\n    var myfuck = [];\n    var files = [];\n    let date = new Date();\n\n    if (imagecomment) {\n      imagecomment.map(async doc => {\n        const response = await Axios({\n          method: \"get\",\n          url: doc.url,\n          responseType: \"blob\"\n        });\n        await myfuck.push(new File([response.data], `filename${uuidv4()}.png`, {\n          type: response.data.type,\n          lastModified: date\n        }));\n      });\n    }\n\n    setTimeout(() => {\n      if (myfuck) {\n        myfuck.forEach(doc => {\n          files.push(doc);\n        });\n      }\n\n      let filesnew = [...files, ...fuck, ...event.target.files];\n      Setfiles([...files, ...fuck, ...event.target.files]);\n      Setfuck(prevState => [...prevState, ...event.target.files]);\n      Seterror();\n\n      for (var i = 0; i < filesnew.length; i++) {\n        let reader = new FileReader(); //ใช้ Class  FileReader เป็นตัวอ่านไฟล์\n\n        reader.readAsDataURL(filesnew[i]); //เป็นคำสั่งสำหรับการแปลง url มาเป็น file\n\n        reader.onloadend = () => {\n          // ใส่ข้อมูลเข้าไปยัง state ผาน  setimagesPreviewUrls\n          setImagesFile(prevState => [...prevState, reader.result]); //  PrevState เป็น Parameter ในการเรียก State ก่อนหน้ามาแล้วรวม Array กับ fileที่อัพโหลดเข้ามา\n        };\n      }\n    }, 50);\n  };\n\n  const handledeleteimage = async index => {\n    try {\n      if (imagecomment) {\n        imagecomment.splice(index, 1);\n        Setimagecomment([...imagecomment]);\n      }\n\n      if (imagecomment && imagecomment.length === 0) {\n        Setimagecomment();\n      }\n\n      if (imagesFile) {\n        imagesFile.splice(index, 1);\n        setImagesFile([...imagesFile]);\n      }\n\n      if (imagesFile && imagesFile.length === 0) {\n        setImagesFile();\n      }\n\n      if (fuck) {\n        fuck.splice(index, 1);\n        Setfuck([...fuck]);\n      }\n\n      let date = new Date();\n      var myFile = [];\n\n      if (imagecomment) {\n        imagecomment.forEach(async doc => {\n          const response = await fetch(doc.url);\n          const data = await response.blob();\n          myFile.push(new File([data], `filename${uuidv4()}.png`, {\n            type: \"image/png\",\n            lastModified: date\n          }));\n        });\n        Setfiles(myFile);\n      }\n\n      if (files) {\n        files.splice(index, 1);\n        Setfiles([...files]);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const edit = async () => {\n    Setcheckedittext(true);\n    setIsActive(false);\n    var myfuck = [];\n    let date = new Date();\n\n    if (imagecomment) {\n      imagecomment.map(async doc => {\n        const response = await Axios({\n          method: \"get\",\n          url: doc.url,\n          responseType: \"blob\"\n        });\n        await myfuck.push(new File([response.data], `filename${uuidv4()}.png`, {\n          type: response.data.type,\n          lastModified: date\n        }));\n      });\n    }\n\n    setTimeout(() => {\n      Setfiles([...myfuck]);\n    }, 50);\n  };\n\n  const handleedit = async commentid => {\n    try {\n      let formdata = new FormData();\n\n      _.forEach(files, file => {\n        formdata.append(\"photocomment\", file);\n      });\n\n      formdata.append(\"edittextcomment\", edittextcomment);\n      formdata.append(\"photocomment\", imagecomment);\n      Setloading(true);\n      const editcomment = await Axios.post(`https://monkeyfruad01.herokuapp.com/post/edit/comment/${commentid}`, formdata);\n      handleedittorerender();\n      Setfuck([]);\n      setImagesFile();\n      Setfiles();\n      Setcheckedittext(false);\n      Setloading(false);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const gg = async () => {\n    try {\n      if (commentmore) {\n        Setedittextcomment(commentmore.textcomment);\n        Setimagecomment(commentmore.photocomment);\n      }\n\n      if (isActiveFromPost == true) {\n        console.log(\"Gu loop 1\");\n        setIsActive(false);\n      }\n\n      if (isActive == true) {\n        console.log(\"Gu loop 2\");\n        setIsActiveFromPost(true);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    gg();\n  }, [commentmore, isActiveFromPost]);\n  console.log(\"isActiveFromPost\", isActiveFromPost);\n  console.log(\"isActive\", isActive);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: commentmore ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"postcommentrows\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"vl\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-comment-img1\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-post-comment\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-profilecomment-img1\",\n            children: commentmore.photoURL ? /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"img-circle profile-listcomment1\",\n              src: `${commentmore.photoURL.url}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"img-circle profile-listcomment1\",\n              src: \"/img/profile.png\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-comment-name1\",\n            children: [commentmore ? \"@\" : null, commentmore.username, /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"post-comment-time1\",\n              children: [\" \", moment(new Date(commentmore.datetime.seconds * 1000)).startOf().fromNow(), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 15\n          }, this), user && commentmore.userid == user.uid ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"menu-containerpostcommentsetting\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                onClick: () => setIsActive(!isActive),\n                className: \"postcommentbuttonsetting\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"postcommentimg-setting\",\n                  src: \"/img/setting.png\",\n                  alt: \"avatar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `postcommentmenusetting ${isActive ? \"active\" : \"inactive\"}`,\n                children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: \"ul-postcommentmenusetting\",\n                  children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                    className: \"li-postcommentmenusetting\",\n                    children: /*#__PURE__*/_jsxDEV(\"a\", {\n                      className: \"a-postcommentmenusetting\",\n                      onClick: () => edit(commentmore.commentid),\n                      children: \"\\u0E41\\u0E01\\u0E49\\u0E44\\u0E02\\u0E04\\u0E2D\\u0E21\\u0E40\\u0E21\\u0E19\\u0E15\\u0E4C\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 277,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 276,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: \"li-postcommentmenusetting\",\n                    children: /*#__PURE__*/_jsxDEV(\"a\", {\n                      className: \"a-postcommentmenusetting\",\n                      onClick: () => (Setmodalcommentid(commentmore.commentid), Setmodalcommentmore(commentmore), setIsActive(false), handlemodalopen()),\n                      children: [\" \", \"\\u0E25\\u0E1A\\u0E04\\u0E2D\\u0E21\\u0E40\\u0E21\\u0E19\\u0E15\\u0E4C\", \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 285,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 284,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Modaldelete, {\n              text: \"deletecomment\",\n              openmodal: isOpenModalDelete,\n              handlemodalclose: handlemodalclose,\n              modalcommentid: modalcommentid,\n              modalcommentmore: modalcommentmore,\n              setIsActive: setIsActive,\n              Setfuck: Setfuck,\n              setImagesFile: setImagesFile,\n              Setfiles: Setfiles,\n              handledeletetorerender: handledeletetorerender\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 17\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 13\n        }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(ClipLoaderComent, {\n            loading: loading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 15\n        }, this) : checkedittext ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"commentbox\",\n            children: [!imagecomment && !imagesFile ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"container-img-holder-imgpreview1\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"uploadprovepost1\",\n                  src: \"/img/addimg.png\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 328,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"FileInput\",\n                  className: \"uploadspostcomment\",\n                  type: \"file\",\n                  onChange: FileUpload,\n                  multiple: true,\n                  accept: \"image/png, image/jpeg , image/jpg\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 332,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"post-writecommemt\",\n              controlId: \"exampleForm.ControlTextarea1\",\n              children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n                rows: \"3\",\n                cols: \"15\",\n                className: \"inputlistcomment1\",\n                placeholder: \"\\u0E40\\u0E02\\u0E35\\u0E22\\u0E19\\u0E04\\u0E27\\u0E32\\u0E21\\u0E04\\u0E34\\u0E14\\u0E40\\u0E2B\\u0E47\\u0E19...\",\n                value: edittextcomment,\n                onChange: e => {\n                  Setedittextcomment(e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"buttoncommentpostsave1\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"buttoncommentpostsave2\",\n                onClick: () => handleedit(commentmore.commentid),\n                children: \"\\u0E1A\\u0E31\\u0E19\\u0E17\\u0E36\\u0E01\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"imgcommentitempost\",\n              children: [imagesFile ? imagesFile.map((imagePreviewUrl, index) => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"postdelete\",\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    className: \"imgpreviewpost1\",\n                    alt: \"previewImg\",\n                    src: imagePreviewUrl\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 378,\n                    columnNumber: 31\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"deleteimgposts1\",\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      className: \"deleteimgposts2\",\n                      src: \"/img/delete2.png\",\n                      onClick: () => handledeleteimage(index)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 385,\n                      columnNumber: 33\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 384,\n                    columnNumber: 31\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 377,\n                  columnNumber: 29\n                }, this);\n              }) : imagecomment ? imagecomment ? imagecomment.map((doc, index) => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"postdelete\",\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    className: \"imgpreviewpost1\",\n                    src: `${doc.url}`,\n                    onClick: () => (Setimagemodal(doc.url), handleopenmodal())\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 399,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"deleteimgposts1\",\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      className: \"deleteimgposts2\",\n                      src: \"/img/delete2.png\",\n                      onClick: () => handledeleteimage(index)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 407,\n                      columnNumber: 35\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 406,\n                    columnNumber: 33\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 398,\n                  columnNumber: 31\n                }, this);\n              }) : null : null, imagecomment || imagesFile ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"uploadproveedits\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"uploadproveedits1\",\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    className: \"uploadproveedits2\",\n                    src: \"/img/last1.png\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 422,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    id: \"FileInput\",\n                    className: \"uploadspostcomment\",\n                    type: \"file\",\n                    onChange: FileUpload,\n                    multiple: true,\n                    accept: \"image/png, image/jpeg , image/jpg\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 426,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 421,\n                  columnNumber: 25\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 420,\n                columnNumber: 23\n              }, this) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-comment-comments2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"postcomment1\",\n            children: commentmore.textcomment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"imglistcomment\",\n            children: [imagecomment ? imagecomment ? imagecomment.map(doc => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"imglistcommentpost1\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"listcommentpost2\",\n                  src: `${doc.url}`,\n                  onClick: () => (Setimagemodal(doc.url), handleopenmodal())\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 450,\n                  columnNumber: 31\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 449,\n                columnNumber: 29\n              }, this);\n            }) : null : null, /*#__PURE__*/_jsxDEV(Modalimage, {\n              isopen: isopen,\n              handleopenmodal: handleopenmodal,\n              handleclosemodal: handleclosemodal,\n              imagemodal: imagemodal\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 462,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 9\n    }, this) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 227,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Listcomment, \"+pi75zWHXW45r5ehudaOyDBLOMk=\");\n\n_c = Listcomment;\nexport default Listcomment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Listcomment\");","map":{"version":3,"sources":["D:/monkeyfruad/frontend/src/user/components/listcomment.js"],"names":["React","useEffect","useState","useContext","Axios","usercontext","moment","_","ClipLoaderComent","v4","uuidv4","Modalimage","Modaldelete","Listcomment","commentmore","handledeletetorerender","handleedittorerender","setIsActiveFromPost","isActiveFromPost","imagesFile","setImagesFile","imagecomment","Setimagecomment","files","Setfiles","error","Seterror","item","Setitem","checkedittext","Setcheckedittext","textcomment","Settextcomment","edittextcomment","Setedittextcomment","imagecomment2","Setimagecomment2","fuck","Setfuck","isopen","Setisopen","imagemodal","Setimagemodal","loading","Setloading","isActive","setIsActive","modalcommentid","Setmodalcommentid","modalcommentmore","Setmodalcommentmore","isOpenModalDelete","SetisOpenModalDelete","user","setUser","handleopenmodal","handleclosemodal","handlemodalopen","handlemodalclose","handleOption","FileUpload","event","preventDefault","myfuck","date","Date","map","doc","response","method","url","responseType","push","File","data","type","lastModified","setTimeout","forEach","filesnew","target","prevState","i","length","reader","FileReader","readAsDataURL","onloadend","result","handledeleteimage","index","splice","myFile","fetch","blob","err","console","log","edit","handleedit","commentid","formdata","FormData","file","append","editcomment","post","gg","photocomment","photoURL","username","datetime","seconds","startOf","fromNow","userid","uid","e","value","imagePreviewUrl"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport Axios from \"axios\";\r\nimport usercontext from \"../context/usercontext\";\r\nimport \"./listcomment.css\";\r\nimport * as moment from \"moment\";\r\nimport \"moment/locale/th\";\r\nimport _ from \"lodash\";\r\nimport ClipLoaderComent from \"./clipLoaderComent\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport Modalimage from \"./Modalimage\";\r\nimport Modaldelete from \"./Modaldelete\";\r\nconst Listcomment = ({\r\n  commentmore,\r\n  handledeletetorerender,\r\n  handleedittorerender,\r\n  setIsActiveFromPost,\r\n  isActiveFromPost\r\n}) => {\r\n  const [imagesFile, setImagesFile] = useState(); //สร้าง State เพื่อเก็บไฟล์ที่อัพโหลด\r\n  const [imagecomment, Setimagecomment] = useState();\r\n\r\n  const [files, Setfiles] = useState();\r\n  const [error, Seterror] = useState();\r\n  const [item, Setitem] = useState([]);\r\n  const [checkedittext, Setcheckedittext] = useState(false);\r\n  const [textcomment, Settextcomment] = useState();\r\n  const [edittextcomment, Setedittextcomment] = useState(\"\");\r\n  const [imagecomment2, Setimagecomment2] = useState();\r\n  const [fuck, Setfuck] = useState([]);\r\n  const [isopen, Setisopen] = useState(false);\r\n  const [imagemodal, Setimagemodal] = useState();\r\n  const [loading, Setloading] = useState();\r\n  const [isActive, setIsActive] = useState(false);\r\n\r\n  const [modalcommentid, Setmodalcommentid] = useState();\r\n  const [modalcommentmore, Setmodalcommentmore] = useState();\r\n  const [isOpenModalDelete, SetisOpenModalDelete] = useState(false);\r\n\r\n  let { user, setUser } = useContext(usercontext);\r\n\r\n  const handleopenmodal = async () => {\r\n    Setisopen(true);\r\n  };\r\n  const handleclosemodal = async () => {\r\n    Setisopen(false);\r\n  };\r\n\r\n  const handlemodalopen = async () => {\r\n    SetisOpenModalDelete(true);\r\n  };\r\n  const handlemodalclose = async () => {\r\n    SetisOpenModalDelete(false);\r\n  };\r\n  const handleOption = () =>{\r\n    if(isActiveFromPost==false){\r\n      setIsActiveFromPost()\r\n    }\r\n  }\r\n  const FileUpload = (event) => {\r\n    event.preventDefault(); // ใส่ไว้ไม่ให้ refresh หน้าเว็บ\r\n\r\n    setImagesFile([]);\r\n    var myfuck = [];\r\n    var files = [];\r\n    let date = new Date();\r\n    if (imagecomment) {\r\n      imagecomment.map(async (doc) => {\r\n        const response = await Axios({\r\n          method: \"get\",\r\n          url: doc.url,\r\n          responseType: \"blob\",\r\n        });\r\n        await myfuck.push(\r\n          new File([response.data], `filename${uuidv4()}.png`, {\r\n            type: response.data.type,\r\n            lastModified: date,\r\n          })\r\n        );\r\n      });\r\n    }\r\n\r\n    setTimeout(() => {\r\n      if (myfuck) {\r\n        myfuck.forEach((doc) => {\r\n          files.push(doc);\r\n        });\r\n      }\r\n\r\n      let filesnew = [...files, ...fuck, ...event.target.files];\r\n\r\n      Setfiles([...files, ...fuck, ...event.target.files]);\r\n      Setfuck((prevState) => [...prevState, ...event.target.files]);\r\n      Seterror();\r\n\r\n      for (var i = 0; i < filesnew.length; i++) {\r\n        let reader = new FileReader(); //ใช้ Class  FileReader เป็นตัวอ่านไฟล์\r\n        reader.readAsDataURL(filesnew[i]); //เป็นคำสั่งสำหรับการแปลง url มาเป็น file\r\n        reader.onloadend = () => {\r\n          // ใส่ข้อมูลเข้าไปยัง state ผาน  setimagesPreviewUrls\r\n          setImagesFile((prevState) => [...prevState, reader.result]);\r\n          //  PrevState เป็น Parameter ในการเรียก State ก่อนหน้ามาแล้วรวม Array กับ fileที่อัพโหลดเข้ามา\r\n        };\r\n      }\r\n    }, 50);\r\n  };\r\n  const handledeleteimage = async (index) => {\r\n    try {\r\n      if (imagecomment) {\r\n        imagecomment.splice(index, 1);\r\n        Setimagecomment([...imagecomment]);\r\n      }\r\n      if (imagecomment && imagecomment.length === 0) {\r\n        Setimagecomment();\r\n      }\r\n      if (imagesFile) {\r\n        imagesFile.splice(index, 1);\r\n        setImagesFile([...imagesFile]);\r\n      }\r\n      if (imagesFile && imagesFile.length === 0) {\r\n        setImagesFile();\r\n      }\r\n\r\n      if (fuck) {\r\n        fuck.splice(index, 1);\r\n        Setfuck([...fuck]);\r\n      }\r\n\r\n      let date = new Date();\r\n      var myFile = [];\r\n      if (imagecomment) {\r\n        imagecomment.forEach(async (doc) => {\r\n          const response = await fetch(doc.url);\r\n          const data = await response.blob();\r\n          myFile.push(\r\n            new File([data], `filename${uuidv4()}.png`, {\r\n              type: \"image/png\",\r\n              lastModified: date,\r\n            })\r\n          );\r\n        });\r\n        Setfiles(myFile);\r\n      }\r\n      if (files) {\r\n        files.splice(index, 1);\r\n        Setfiles([...files]);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const edit = async () => {\r\n    Setcheckedittext(true);\r\n    setIsActive(false);\r\n    var myfuck = [];\r\n    let date = new Date();\r\n    if (imagecomment) {\r\n      imagecomment.map(async (doc) => {\r\n        const response = await Axios({\r\n          method: \"get\",\r\n          url: doc.url,\r\n          responseType: \"blob\",\r\n        });\r\n        await myfuck.push(\r\n          new File([response.data], `filename${uuidv4()}.png`, {\r\n            type: response.data.type,\r\n            lastModified: date,\r\n          })\r\n        );\r\n      });\r\n    }\r\n    setTimeout(() => {\r\n      Setfiles([...myfuck]);\r\n    }, 50);\r\n  };\r\n  const handleedit = async (commentid) => {\r\n    try {\r\n      let formdata = new FormData();\r\n      _.forEach(files, (file) => {\r\n        formdata.append(\"photocomment\", file);\r\n      });\r\n      formdata.append(\"edittextcomment\", edittextcomment);\r\n      formdata.append(\"photocomment\", imagecomment);\r\n\r\n      Setloading(true);\r\n      const editcomment = await Axios.post(\r\n        `https://monkeyfruad01.herokuapp.com/post/edit/comment/${commentid}`,\r\n        formdata\r\n      );\r\n\r\n      handleedittorerender();\r\n      Setfuck([]);\r\n      setImagesFile();\r\n      Setfiles();\r\n      Setcheckedittext(false);\r\n      Setloading(false);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const gg = async () => {\r\n    try {\r\n      if (commentmore) {\r\n        Setedittextcomment(commentmore.textcomment);\r\n        Setimagecomment(commentmore.photocomment);\r\n      }\r\n      if(isActiveFromPost == true){\r\n        console.log(\"Gu loop 1\")\r\n        setIsActive(false)\r\n      }\r\n      if(isActive == true){\r\n        console.log(\"Gu loop 2\")\r\n        setIsActiveFromPost(true)\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    gg();\r\n  }, [commentmore,isActiveFromPost]);\r\n\r\nconsole.log(\"isActiveFromPost\",isActiveFromPost)\r\nconsole.log(\"isActive\",isActive)\r\n  return (\r\n    <div>\r\n      {commentmore ? (\r\n        <div className=\"postcommentrows\">\r\n          <div class=\"vl\"></div>\r\n          <div className=\"post-comment-img1\">\r\n            <div className=\"header-post-comment\">\r\n              <div className=\"post-profilecomment-img1\">\r\n                {commentmore.photoURL ? (\r\n                  <img\r\n                    className=\"img-circle profile-listcomment1\"\r\n                    src={`${commentmore.photoURL.url}`}\r\n                  />\r\n                ) : (\r\n                  <img\r\n                    className=\"img-circle profile-listcomment1\"\r\n                    src=\"/img/profile.png\"\r\n                  />\r\n                )}\r\n              </div>\r\n              <div className=\"post-comment-name1\">\r\n                {commentmore ? \"@\" : null}\r\n                {commentmore.username}\r\n                <span className=\"post-comment-time1\">\r\n                  {\" \"}\r\n                  {moment(new Date(commentmore.datetime.seconds * 1000))\r\n                    .startOf()\r\n                    .fromNow()}{\" \"}\r\n                </span>\r\n              </div>\r\n              {user && commentmore.userid == user.uid ? (\r\n                <div>\r\n                  <div className=\"menu-containerpostcommentsetting\">\r\n                    <div\r\n                      onClick={() => setIsActive(!isActive)}\r\n                      className=\"postcommentbuttonsetting\"\r\n                    >\r\n                      <img\r\n                        className=\"postcommentimg-setting\"\r\n                        src=\"/img/setting.png\"\r\n                        alt=\"avatar\"\r\n                      />\r\n                    </div>\r\n\r\n                    <div\r\n                      className={`postcommentmenusetting ${\r\n                        isActive ? \"active\" : \"inactive\"\r\n                      }`}\r\n                    >\r\n                      <ul className=\"ul-postcommentmenusetting\">\r\n                        <li className=\"li-postcommentmenusetting\">\r\n                          <a\r\n                            className=\"a-postcommentmenusetting\"\r\n                            onClick={() => edit(commentmore.commentid)}\r\n                          >\r\n                            แก้ไขคอมเมนต์\r\n                          </a>\r\n                        </li>\r\n                        <li className=\"li-postcommentmenusetting\">\r\n                          <a\r\n                            className=\"a-postcommentmenusetting\"\r\n                            onClick={() => (\r\n                              Setmodalcommentid(commentmore.commentid),\r\n                              Setmodalcommentmore(commentmore),\r\n                              setIsActive(false),\r\n                              handlemodalopen()\r\n                            )}\r\n                          >\r\n                            {\" \"}\r\n                            ลบคอมเมนต์{\" \"}\r\n                          </a>\r\n                        </li>\r\n                      </ul>\r\n                    </div>\r\n                  </div>\r\n                  <Modaldelete\r\n                    text=\"deletecomment\"\r\n                    openmodal={isOpenModalDelete}\r\n                    handlemodalclose={handlemodalclose}\r\n                    modalcommentid={modalcommentid}\r\n                    modalcommentmore={modalcommentmore}\r\n                    setIsActive={setIsActive}\r\n                    Setfuck={Setfuck}\r\n                    setImagesFile={setImagesFile}\r\n                    Setfiles={Setfiles}\r\n                    handledeletetorerender={handledeletetorerender}\r\n                  />\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n\r\n            <br />\r\n            {loading ? (\r\n              <div>\r\n                <ClipLoaderComent loading={loading} />\r\n              </div>\r\n            ) : checkedittext ? (\r\n              <div className=\"comment\">\r\n                <div className=\"commentbox\">\r\n                  {!imagecomment && !imagesFile ? (\r\n                    <div className=\"container-img-holder-imgpreview1\">\r\n                      <label>\r\n                        <img\r\n                          className=\"uploadprovepost1\"\r\n                          src=\"/img/addimg.png\"\r\n                        />\r\n                        <input\r\n                          id=\"FileInput\"\r\n                          className=\"uploadspostcomment\"\r\n                          type=\"file\"\r\n                          onChange={FileUpload}\r\n                          multiple\r\n                          accept=\"image/png, image/jpeg , image/jpg\"\r\n                        />\r\n                      </label>\r\n                    </div>\r\n                  ) : (\r\n                    <div></div>\r\n                  )}\r\n\r\n                  <div\r\n                    className=\"post-writecommemt\"\r\n                    controlId=\"exampleForm.ControlTextarea1\"\r\n                  >\r\n                    <textarea\r\n                      rows=\"3\"\r\n                      cols=\"15\"\r\n                      className=\"inputlistcomment1\"\r\n                      placeholder=\"เขียนความคิดเห็น...\"\r\n                      value={edittextcomment}\r\n                      onChange={(e) => {\r\n                        Setedittextcomment(e.target.value);\r\n                      }}\r\n                    ></textarea>\r\n                  </div>\r\n\r\n                  <div className=\"buttoncommentpostsave1\">\r\n                    <button\r\n                      className=\"buttoncommentpostsave2\"\r\n                      onClick={() => handleedit(commentmore.commentid)}\r\n                    >\r\n                      บันทึก\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div className=\"imgcommentitempost\">\r\n                    {imagesFile\r\n                      ? imagesFile.map((imagePreviewUrl, index) => {\r\n                          return (\r\n                            <div className=\"postdelete\">\r\n                              <img\r\n                                key={index}\r\n                                className=\"imgpreviewpost1\"\r\n                                alt=\"previewImg\"\r\n                                src={imagePreviewUrl}\r\n                              />\r\n                              <span className=\"deleteimgposts1\">\r\n                                <img\r\n                                  className=\"deleteimgposts2\"\r\n                                  src=\"/img/delete2.png\"\r\n                                  onClick={() => handledeleteimage(index)}\r\n                                />\r\n                              </span>\r\n                            </div>\r\n                          );\r\n                        })\r\n                      : imagecomment\r\n                      ? imagecomment\r\n                        ? imagecomment.map((doc, index) => {\r\n                            return (\r\n                              <div className=\"postdelete\">\r\n                                <img\r\n                                  className=\"imgpreviewpost1\"\r\n                                  src={`${doc.url}`}\r\n                                  onClick={() => (\r\n                                    Setimagemodal(doc.url), handleopenmodal()\r\n                                  )}\r\n                                />\r\n                                <span className=\"deleteimgposts1\">\r\n                                  <img\r\n                                    className=\"deleteimgposts2\"\r\n                                    src=\"/img/delete2.png\"\r\n                                    onClick={() => handledeleteimage(index)}\r\n                                  />\r\n                                </span>\r\n                              </div>\r\n                            );\r\n                          })\r\n                        : null\r\n                      : null}\r\n\r\n                    {imagecomment || imagesFile ? (\r\n                      <div className=\"uploadproveedits\">\r\n                        <label className=\"uploadproveedits1\">\r\n                          <img\r\n                            className=\"uploadproveedits2\"\r\n                            src=\"/img/last1.png\"\r\n                          />\r\n                          <input\r\n                            id=\"FileInput\"\r\n                            className=\"uploadspostcomment\"\r\n                            type=\"file\"\r\n                            onChange={FileUpload}\r\n                            multiple\r\n                            accept=\"image/png, image/jpeg , image/jpg\"\r\n                          />\r\n                        </label>{\" \"}\r\n                      </div>\r\n                    ) : null}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <div className=\"post-comment-comments2\">\r\n                <div className=\"postcomment1\">{commentmore.textcomment}</div>\r\n                <div className=\"imglistcomment\">\r\n                  {/* {loading ? <ClipLoader /> : <div></div>} */}\r\n                  {imagecomment\r\n                    ? imagecomment\r\n                      ? imagecomment.map((doc) => {\r\n                          return (\r\n                            <div className=\"imglistcommentpost1\">\r\n                              <img\r\n                                className=\"listcommentpost2\"\r\n                                src={`${doc.url}`}\r\n                                onClick={() => (\r\n                                  Setimagemodal(doc.url), handleopenmodal()\r\n                                )}\r\n                              />\r\n                            </div>\r\n                          );\r\n                        })\r\n                      : null\r\n                    : null}\r\n                  <Modalimage\r\n                    isopen={isopen}\r\n                    handleopenmodal={handleopenmodal}\r\n                    handleclosemodal={handleclosemodal}\r\n                    imagemodal={imagemodal}\r\n                  />\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\nexport default Listcomment;\r\n"]},"metadata":{},"sourceType":"module"}