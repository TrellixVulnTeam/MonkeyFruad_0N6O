{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\praew\\\\OneDrive\\\\\\u0E40\\u0E14\\u0E2A\\u0E01\\u0E4C\\u0E17\\u0E47\\u0E2D\\u0E1B\\\\new\\\\MonkeyFruad\\\\frontend\\\\src\\\\user\\\\components\\\\listcomment.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from \"react\";\nimport Axios from \"axios\";\nimport usercontext from \"../context/usercontext\";\nimport \"./listcomment.css\";\nimport * as moment from \"moment\";\nimport \"moment/locale/th\";\nimport _ from \"lodash\";\nimport ClipLoader from \"./clipLoader\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Modalimage from \"./Modalimage\";\n\nconst Listcomment = ({\n  commentmore,\n  handledeletetorerender,\n  handleedittorerender\n}) => {\n  _s();\n\n  const [imagesFile, setImagesFile] = useState(); //สร้าง State เพื่อเก็บไฟล์ที่อัพโหลด\n\n  const [imagecomment, Setimagecomment] = useState();\n  const [files, Setfiles] = useState();\n  const [error, Seterror] = useState();\n  const [item, Setitem] = useState([]);\n  const [checkedittext, Setcheckedittext] = useState(false);\n  const [textcomment, Settextcomment] = useState();\n  const [edittextcomment, Setedittextcomment] = useState(\"\");\n  const [imagecomment2, Setimagecomment2] = useState();\n  const [fuck, Setfuck] = useState([]);\n  const [isopen, Setisopen] = useState(false);\n  const [imagemodal, Setimagemodal] = useState();\n  const [loading, Setloading] = useState();\n  const [isActive, setIsActive] = useState(false);\n  let {\n    user,\n    setUser\n  } = useContext(usercontext);\n\n  const handleopenmodal = async () => {\n    Setisopen(true);\n  };\n\n  const handleclosemodal = async () => {\n    Setisopen(false);\n  };\n\n  const FileUpload = event => {\n    event.preventDefault(); // ใส่ไว้ไม่ให้ refresh หน้าเว็บ\n\n    setImagesFile([]);\n    var myfuck = [];\n    var files = [];\n    let date = new Date();\n\n    if (imagecomment) {\n      imagecomment.map(async doc => {\n        const response = await Axios({\n          method: \"get\",\n          url: doc.url,\n          responseType: \"blob\"\n        });\n        await myfuck.push(new File([response.data], `filename${uuidv4()}.png`, {\n          type: response.data.type,\n          lastModified: date\n        }));\n      });\n    }\n\n    setTimeout(() => {\n      if (myfuck) {\n        myfuck.forEach(doc => {\n          files.push(doc);\n        });\n      }\n\n      console.log(files);\n      let filesnew = [...files, ...fuck, ...event.target.files];\n      Setfiles([...files, ...fuck, ...event.target.files]);\n      Setfuck(prevState => [...prevState, ...event.target.files]);\n      Seterror();\n\n      for (var i = 0; i < filesnew.length; i++) {\n        let reader = new FileReader(); //ใช้ Class  FileReader เป็นตัวอ่านไฟล์\n\n        reader.readAsDataURL(filesnew[i]); //เป็นคำสั่งสำหรับการแปลง url มาเป็น file\n\n        reader.onloadend = () => {\n          // ใส่ข้อมูลเข้าไปยัง state ผาน  setimagesPreviewUrls\n          setImagesFile(prevState => [...prevState, reader.result]); //  PrevState เป็น Parameter ในการเรียก State ก่อนหน้ามาแล้วรวม Array กับ fileที่อัพโหลดเข้ามา\n        };\n      }\n    }, 50);\n  }; // console.log(fuck);\n  // console.log(imagesFile);\n  // console.log(files);\n  // console.log(imagecomment)\n\n\n  console.log(imagesFile);\n\n  const handledeleteimage = async index => {\n    try {\n      if (imagecomment) {\n        console.log(\"a\");\n        imagecomment.splice(index, 1);\n        Setimagecomment([...imagecomment]);\n      }\n\n      if (imagecomment && imagecomment.length === 0) {\n        Setimagecomment();\n      }\n\n      if (imagesFile) {\n        console.log(\"b\");\n        imagesFile.splice(index, 1);\n        setImagesFile([...imagesFile]);\n      }\n\n      if (imagesFile && imagesFile.length === 0) {\n        setImagesFile();\n      }\n\n      if (fuck) {\n        console.log(\"c\");\n        fuck.splice(index, 1);\n        Setfuck([...fuck]);\n      }\n\n      let date = new Date();\n      var myFile = [];\n\n      if (imagecomment) {\n        imagecomment.forEach(async doc => {\n          const response = await fetch(doc.url);\n          const data = await response.blob();\n          myFile.push(new File([data], `filename${uuidv4()}.png`, {\n            type: \"image/png\",\n            lastModified: date\n          }));\n        });\n        Setfiles(myFile);\n      }\n\n      if (files) {\n        console.log(\"d\");\n        files.splice(index, 1);\n        Setfiles([...files]);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  if (commentmore && commentmore.photocomment) {\n    console.log(commentmore.photocomment);\n  }\n\n  const deleted = async (commentid, commentmore) => {\n    console.log(commentmore);\n    const postdelete = await Axios.post(`http://localhost:7000/post/delete/comment/${commentid}`, commentmore);\n    setIsActive(false);\n    Setfuck([]);\n    setImagesFile();\n    Setfiles();\n    handledeletetorerender();\n  };\n\n  const edit = async () => {\n    Setcheckedittext(true);\n    setIsActive(false);\n    var myfuck = [];\n    let date = new Date();\n\n    if (imagecomment) {\n      imagecomment.map(async doc => {\n        const response = await Axios({\n          method: \"get\",\n          url: doc.url,\n          responseType: \"blob\"\n        });\n        await myfuck.push(new File([response.data], `filename${uuidv4()}.png`, {\n          type: response.data.type,\n          lastModified: date\n        }));\n      });\n    }\n\n    setTimeout(() => {\n      Setfiles([...myfuck]);\n    }, 50);\n  };\n\n  const handleedit = async commentid => {\n    try {\n      let formdata = new FormData();\n\n      _.forEach(files, file => {\n        formdata.append(\"photocomment\", file);\n      });\n\n      formdata.append(\"edittextcomment\", edittextcomment);\n      formdata.append(\"photocomment\", imagecomment);\n      Setloading(true);\n      const editcomment = await Axios.post(`http://localhost:7000/post/edit/comment/${commentid}`, formdata);\n      handleedittorerender();\n      Setfuck([]);\n      setImagesFile();\n      Setfiles();\n      Setcheckedittext(false);\n      Setloading(false);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const gg = async () => {\n    try {\n      if (commentmore) {\n        Setedittextcomment(commentmore.textcomment);\n        Setimagecomment(commentmore.photocomment);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    gg();\n  }, [commentmore]); // console.log(imagesFile)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: commentmore ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"line-posts1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"postcommentrows\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-comment-img1\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header-post-comment\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"post-profilecomment-img1\",\n              children: commentmore.photoURL ? /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"img-circle\",\n                src: `${commentmore.photoURL.url}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"img-circle\",\n                src: \"/img/profile.png\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"post-comment-name1\",\n              children: [commentmore ? \"@\" : null, commentmore.username, /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"post-comment-time1\",\n                children: [\" \", moment(new Date(commentmore.datetime.seconds * 1000)).format(\"LTS\"), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 17\n            }, this), user && commentmore.userid == user.uid ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"menu-containerpostcommentsetting\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  onClick: () => setIsActive(!isActive),\n                  className: \"postcommentbuttonsetting\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    className: \"postcommentimg-setting\",\n                    src: \"/img/setting.png\",\n                    alt: \"avatar\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 261,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `postcommentmenusetting ${isActive ? \"active\" : \"inactive\"}`,\n                  children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                    className: \"ul-postcommentmenusetting\",\n                    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                      className: \"li-postcommentmenusetting\",\n                      children: /*#__PURE__*/_jsxDEV(\"a\", {\n                        className: \"a-postcommentmenusetting\",\n                        onClick: () => edit(commentmore.commentid),\n                        children: \"\\u0E41\\u0E01\\u0E49\\u0E44\\u0E02\\u0E04\\u0E2D\\u0E21\\u0E40\\u0E21\\u0E19\\u0E15\\u0E4C\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 275,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 274,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                      className: \"li-postcommentmenusetting\",\n                      children: /*#__PURE__*/_jsxDEV(\"a\", {\n                        className: \"a-postcommentmenusetting\",\n                        onClick: () => deleted(commentmore.commentid, commentmore),\n                        children: [\" \", \"\\u0E25\\u0E1A\\u0E04\\u0E2D\\u0E21\\u0E40\\u0E21\\u0E19\\u0E15\\u0E4C\", \" \"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 283,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 282,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 273,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 19\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 15\n          }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-lg-10 col-4\",\n            children: /*#__PURE__*/_jsxDEV(ClipLoader, {\n              loading: loading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 17\n          }, this) : checkedittext ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"commentbox\",\n              children: [!imagecomment && !imagesFile ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"container-img-holder-imgpreview1\",\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    className: \"uploadprovepost1\",\n                    src: \"/img/addimg.png\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 311,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    id: \"FileInput\",\n                    className: \"uploadspostcomment\",\n                    type: \"file\",\n                    onChange: FileUpload,\n                    multiple: true,\n                    accept: \"image/png, image/jpeg , image/jpg\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 315,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 310,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"post-writecommemt\",\n                controlId: \"exampleForm.ControlTextarea1\",\n                children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  rows: \"3\",\n                  cols: \"15\",\n                  className: \"inputcomment1\",\n                  placeholder: \"\\u0E40\\u0E02\\u0E35\\u0E22\\u0E19\\u0E04\\u0E27\\u0E32\\u0E21\\u0E04\\u0E34\\u0E14\\u0E40\\u0E2B\\u0E47\\u0E19...\",\n                  value: edittextcomment,\n                  onChange: e => {\n                    Setedittextcomment(e.target.value);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 333,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"buttoncommentpostsave1\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"buttoncommentpostsave2\",\n                  onClick: () => handleedit(commentmore.commentid),\n                  children: \"\\u0E1A\\u0E31\\u0E19\\u0E17\\u0E36\\u0E01\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 346,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"imgcommentitempost\",\n                children: [imagesFile ? imagesFile.map((imagePreviewUrl, index) => {\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"postdelete\",\n                    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                      className: \"imgpreviewpost1\",\n                      alt: \"previewImg\",\n                      src: imagePreviewUrl\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 361,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"deleteimgposts1\",\n                      children: /*#__PURE__*/_jsxDEV(\"img\", {\n                        className: \"deleteimgposts2\",\n                        src: \"/img/delete2.png\",\n                        onClick: () => handledeleteimage(index)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 368,\n                        columnNumber: 35\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 367,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 360,\n                    columnNumber: 31\n                  }, this);\n                }) : imagecomment ? imagecomment ? imagecomment.map((doc, index) => {\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"postdelete\",\n                    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                      className: \"imgpreviewpost1\",\n                      src: `${doc.url}`,\n                      onClick: () => (Setimagemodal(doc.url), handleopenmodal())\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 382,\n                      columnNumber: 35\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"deleteimgposts1\",\n                      children: /*#__PURE__*/_jsxDEV(\"img\", {\n                        className: \"deleteimgposts2\",\n                        src: \"/img/delete2.png\",\n                        onClick: () => handledeleteimage(index)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 390,\n                        columnNumber: 37\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 389,\n                      columnNumber: 35\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 381,\n                    columnNumber: 33\n                  }, this);\n                }) : null : null, imagecomment || imagesFile ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"uploadproveedits\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"uploadproveedits1\",\n                    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                      className: \"uploadproveedits2\",\n                      src: \"/img/last1.png\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 405,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      id: \"FileInput\",\n                      className: \"uploadspostcomment\",\n                      type: \"file\",\n                      onChange: FileUpload,\n                      multiple: true,\n                      accept: \"image/png, image/jpeg , image/jpg\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 409,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 404,\n                    columnNumber: 27\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 403,\n                  columnNumber: 25\n                }, this) : null]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-comment-comments2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"postcomment1\",\n              children: commentmore.textcomment\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"imglistcomment\",\n              children: [imagecomment ? imagecomment ? imagecomment.map(doc => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"imglistcommentpost1\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    className: \"listcommentpost2\",\n                    src: `${doc.url}`,\n                    onClick: () => (Setimagemodal(doc.url), handleopenmodal())\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 433,\n                    columnNumber: 33\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 432,\n                  columnNumber: 31\n                }, this);\n              }) : null : null, /*#__PURE__*/_jsxDEV(Modalimage, {\n                isopen: isopen,\n                handleopenmodal: handleopenmodal,\n                handleclosemodal: handleclosemodal,\n                imagemodal: imagemodal\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 445,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 9\n    }, this) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 226,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Listcomment, \"Igb1Pfy/g03EKYr8MNYt6UfpoKo=\");\n\n_c = Listcomment;\nexport default Listcomment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Listcomment\");","map":{"version":3,"sources":["C:/Users/praew/OneDrive/เดสก์ท็อป/new/MonkeyFruad/frontend/src/user/components/listcomment.js"],"names":["React","useEffect","useState","useContext","Axios","usercontext","moment","_","ClipLoader","v4","uuidv4","Modalimage","Listcomment","commentmore","handledeletetorerender","handleedittorerender","imagesFile","setImagesFile","imagecomment","Setimagecomment","files","Setfiles","error","Seterror","item","Setitem","checkedittext","Setcheckedittext","textcomment","Settextcomment","edittextcomment","Setedittextcomment","imagecomment2","Setimagecomment2","fuck","Setfuck","isopen","Setisopen","imagemodal","Setimagemodal","loading","Setloading","isActive","setIsActive","user","setUser","handleopenmodal","handleclosemodal","FileUpload","event","preventDefault","myfuck","date","Date","map","doc","response","method","url","responseType","push","File","data","type","lastModified","setTimeout","forEach","console","log","filesnew","target","prevState","i","length","reader","FileReader","readAsDataURL","onloadend","result","handledeleteimage","index","splice","myFile","fetch","blob","err","photocomment","deleted","commentid","postdelete","post","edit","handleedit","formdata","FormData","file","append","editcomment","gg","photoURL","username","datetime","seconds","format","userid","uid","e","value","imagePreviewUrl"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport Axios from \"axios\";\r\nimport usercontext from \"../context/usercontext\";\r\nimport \"./listcomment.css\";\r\nimport * as moment from \"moment\";\r\nimport \"moment/locale/th\";\r\nimport _ from \"lodash\";\r\nimport ClipLoader from \"./clipLoader\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport Modalimage from \"./Modalimage\";\r\n\r\nconst Listcomment = ({\r\n  commentmore,\r\n  handledeletetorerender,\r\n  handleedittorerender,\r\n}) => {\r\n  const [imagesFile, setImagesFile] = useState(); //สร้าง State เพื่อเก็บไฟล์ที่อัพโหลด\r\n  const [imagecomment, Setimagecomment] = useState();\r\n\r\n  const [files, Setfiles] = useState();\r\n  const [error, Seterror] = useState();\r\n  const [item, Setitem] = useState([]);\r\n  const [checkedittext, Setcheckedittext] = useState(false);\r\n  const [textcomment, Settextcomment] = useState();\r\n  const [edittextcomment, Setedittextcomment] = useState(\"\");\r\n  const [imagecomment2, Setimagecomment2] = useState();\r\n  const [fuck, Setfuck] = useState([]);\r\n  const [isopen, Setisopen] = useState(false);\r\n  const [imagemodal, Setimagemodal] = useState();\r\n  const [loading, Setloading] = useState();\r\n  const [isActive, setIsActive] = useState(false);\r\n  let { user, setUser } = useContext(usercontext);\r\n\r\n  const handleopenmodal = async () => {\r\n    Setisopen(true);\r\n  };\r\n  const handleclosemodal = async () => {\r\n    Setisopen(false);\r\n  };\r\n\r\n  const FileUpload = (event) => {\r\n    event.preventDefault(); // ใส่ไว้ไม่ให้ refresh หน้าเว็บ\r\n\r\n    setImagesFile([]);\r\n    var myfuck = [];\r\n    var files = [];\r\n    let date = new Date();\r\n    if (imagecomment) {\r\n      imagecomment.map(async (doc) => {\r\n        const response = await Axios({\r\n          method: \"get\",\r\n          url: doc.url,\r\n          responseType: \"blob\",\r\n        });\r\n        await myfuck.push(\r\n          new File([response.data], `filename${uuidv4()}.png`, {\r\n            type: response.data.type,\r\n            lastModified: date,\r\n          })\r\n        );\r\n      });\r\n    }\r\n\r\n    setTimeout(() => {\r\n      if (myfuck) {\r\n        myfuck.forEach((doc) => {\r\n          files.push(doc);\r\n        });\r\n      }\r\n      console.log(files);\r\n\r\n      let filesnew = [...files, ...fuck, ...event.target.files];\r\n\r\n      Setfiles([...files, ...fuck, ...event.target.files]);\r\n      Setfuck((prevState) => [...prevState, ...event.target.files]);\r\n      Seterror();\r\n\r\n      for (var i = 0; i < filesnew.length; i++) {\r\n        let reader = new FileReader(); //ใช้ Class  FileReader เป็นตัวอ่านไฟล์\r\n        reader.readAsDataURL(filesnew[i]); //เป็นคำสั่งสำหรับการแปลง url มาเป็น file\r\n        reader.onloadend = () => {\r\n          // ใส่ข้อมูลเข้าไปยัง state ผาน  setimagesPreviewUrls\r\n          setImagesFile((prevState) => [...prevState, reader.result]);\r\n          //  PrevState เป็น Parameter ในการเรียก State ก่อนหน้ามาแล้วรวม Array กับ fileที่อัพโหลดเข้ามา\r\n        };\r\n      }\r\n    }, 50);\r\n  };\r\n  // console.log(fuck);\r\n  // console.log(imagesFile);\r\n  // console.log(files);\r\n  // console.log(imagecomment)\r\n  console.log(imagesFile);\r\n\r\n  const handledeleteimage = async (index) => {\r\n    try {\r\n      if (imagecomment) {\r\n        console.log(\"a\");\r\n        imagecomment.splice(index, 1);\r\n        Setimagecomment([...imagecomment]);\r\n      }\r\n      if (imagecomment && imagecomment.length === 0) {\r\n        Setimagecomment();\r\n      }\r\n      if (imagesFile) {\r\n        console.log(\"b\");\r\n        imagesFile.splice(index, 1);\r\n        setImagesFile([...imagesFile]);\r\n      }\r\n      if (imagesFile && imagesFile.length === 0) {\r\n        setImagesFile();\r\n      }\r\n\r\n      if (fuck) {\r\n        console.log(\"c\");\r\n        fuck.splice(index, 1);\r\n        Setfuck([...fuck]);\r\n      }\r\n\r\n      let date = new Date();\r\n      var myFile = [];\r\n      if (imagecomment) {\r\n        imagecomment.forEach(async (doc) => {\r\n          const response = await fetch(doc.url);\r\n          const data = await response.blob();\r\n          myFile.push(\r\n            new File([data], `filename${uuidv4()}.png`, {\r\n              type: \"image/png\",\r\n              lastModified: date,\r\n            })\r\n          );\r\n        });\r\n        Setfiles(myFile);\r\n      }\r\n      if (files) {\r\n        console.log(\"d\");\r\n        files.splice(index, 1);\r\n        Setfiles([...files]);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  if (commentmore && commentmore.photocomment) {\r\n    console.log(commentmore.photocomment);\r\n  }\r\n  const deleted = async (commentid, commentmore) => {\r\n    console.log(commentmore);\r\n    const postdelete = await Axios.post(\r\n      `http://localhost:7000/post/delete/comment/${commentid}`,\r\n      commentmore\r\n    );\r\n    setIsActive(false);\r\n    Setfuck([]);\r\n    setImagesFile();\r\n    Setfiles();\r\n    handledeletetorerender();\r\n  };\r\n\r\n  const edit = async () => {\r\n    Setcheckedittext(true);\r\n    setIsActive(false);\r\n    var myfuck = [];\r\n    let date = new Date();\r\n    if (imagecomment) {\r\n      imagecomment.map(async (doc) => {\r\n        const response = await Axios({\r\n          method: \"get\",\r\n          url: doc.url,\r\n          responseType: \"blob\",\r\n        });\r\n        await myfuck.push(\r\n          new File([response.data], `filename${uuidv4()}.png`, {\r\n            type: response.data.type,\r\n            lastModified: date,\r\n          })\r\n        );\r\n      });\r\n    }\r\n    setTimeout(() => {\r\n      Setfiles([...myfuck]);\r\n    }, 50);\r\n  };\r\n  const handleedit = async (commentid) => {\r\n    try {\r\n      let formdata = new FormData();\r\n      _.forEach(files, (file) => {\r\n        formdata.append(\"photocomment\", file);\r\n      });\r\n      formdata.append(\"edittextcomment\", edittextcomment);\r\n      formdata.append(\"photocomment\", imagecomment);\r\n\r\n      Setloading(true);\r\n      const editcomment = await Axios.post(\r\n        `http://localhost:7000/post/edit/comment/${commentid}`,\r\n        formdata\r\n      );\r\n\r\n      handleedittorerender();\r\n      Setfuck([]);\r\n      setImagesFile();\r\n      Setfiles();\r\n      Setcheckedittext(false);\r\n      Setloading(false);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const gg = async () => {\r\n    try {\r\n      if (commentmore) {\r\n        Setedittextcomment(commentmore.textcomment);\r\n        Setimagecomment(commentmore.photocomment);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    gg();\r\n  }, [commentmore]);\r\n\r\n  // console.log(imagesFile)\r\n  return (\r\n    <div>\r\n      {commentmore ? (\r\n        <div>\r\n          <div className=\"line-posts1\"></div>\r\n          <div className=\"postcommentrows\">\r\n            {/* <div class=\"vl\"></div> */}\r\n            <div className=\"post-comment-img1\">\r\n              <div className=\"header-post-comment\">\r\n                <div className=\"post-profilecomment-img1\">\r\n                  {commentmore.photoURL ? (\r\n                    <img\r\n                      className=\"img-circle\"\r\n                      src={`${commentmore.photoURL.url}`}\r\n                    />\r\n                  ) : (\r\n                    <img className=\"img-circle\" src=\"/img/profile.png\" />\r\n                  )}\r\n                </div>\r\n                <div className=\"post-comment-name1\">\r\n                  {commentmore ? \"@\" : null}\r\n                  {commentmore.username}\r\n                  <span className=\"post-comment-time1\">\r\n                    {\" \"}\r\n                    {moment(\r\n                      new Date(commentmore.datetime.seconds * 1000)\r\n                    ).format(\"LTS\")}{\" \"}\r\n                  </span>\r\n                </div>\r\n                {user && commentmore.userid == user.uid ? (\r\n                  <div>\r\n                    <div className=\"menu-containerpostcommentsetting\">\r\n                      <div\r\n                        onClick={() => setIsActive(!isActive)}\r\n                        className=\"postcommentbuttonsetting\"\r\n                      >\r\n                        <img\r\n                          className=\"postcommentimg-setting\"\r\n                          src=\"/img/setting.png\"\r\n                          alt=\"avatar\"\r\n                        />\r\n                      </div>\r\n\r\n                      <div\r\n                        className={`postcommentmenusetting ${\r\n                          isActive ? \"active\" : \"inactive\"\r\n                        }`}\r\n                      >\r\n                        <ul className=\"ul-postcommentmenusetting\">\r\n                          <li className=\"li-postcommentmenusetting\">\r\n                            <a\r\n                              className=\"a-postcommentmenusetting\"\r\n                              onClick={() => edit(commentmore.commentid)}\r\n                            >\r\n                              แก้ไขคอมเมนต์\r\n                            </a>\r\n                          </li>\r\n                          <li className=\"li-postcommentmenusetting\">\r\n                            <a\r\n                              className=\"a-postcommentmenusetting\"\r\n                              onClick={() =>\r\n                                deleted(commentmore.commentid, commentmore)\r\n                              }\r\n                            >\r\n                              {\" \"}\r\n                              ลบคอมเมนต์{\" \"}\r\n                            </a>\r\n                          </li>\r\n                        </ul>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ) : null}\r\n              </div>\r\n\r\n              <br />\r\n              {loading ? (\r\n                <div className=\"col-lg-10 col-4\">\r\n                  <ClipLoader loading={loading} />\r\n                </div>\r\n              ) : checkedittext ? (\r\n                <div className=\"comment\">\r\n                  <div className=\"commentbox\">\r\n                    {!imagecomment && !imagesFile ? (\r\n                      <div className=\"container-img-holder-imgpreview1\">\r\n                        <label>\r\n                          <img\r\n                            className=\"uploadprovepost1\"\r\n                            src=\"/img/addimg.png\"\r\n                          />\r\n                          <input\r\n                            id=\"FileInput\"\r\n                            className=\"uploadspostcomment\"\r\n                            type=\"file\"\r\n                            onChange={FileUpload}\r\n                            multiple\r\n                            accept=\"image/png, image/jpeg , image/jpg\"\r\n                          />\r\n                        </label>\r\n                      </div>\r\n                    ) : (\r\n                      <div></div>\r\n                    )}\r\n\r\n                    <div\r\n                      className=\"post-writecommemt\"\r\n                      controlId=\"exampleForm.ControlTextarea1\"\r\n                    >\r\n                      <textarea\r\n                        rows=\"3\"\r\n                        cols=\"15\"\r\n                        className=\"inputcomment1\"\r\n                        placeholder=\"เขียนความคิดเห็น...\"\r\n                        value={edittextcomment}\r\n                        onChange={(e) => {\r\n                          Setedittextcomment(e.target.value);\r\n                        }}\r\n                      ></textarea>\r\n                    </div>\r\n\r\n                    <div className=\"buttoncommentpostsave1\">\r\n                      <button\r\n                        className=\"buttoncommentpostsave2\"\r\n                        onClick={() => handleedit(commentmore.commentid)}\r\n                      >\r\n                        บันทึก\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div>\r\n                    <div className=\"imgcommentitempost\">\r\n                      {imagesFile\r\n                        ? imagesFile.map((imagePreviewUrl, index) => {\r\n                            return (\r\n                              <div className=\"postdelete\">\r\n                                <img\r\n                                  key={index}\r\n                                  className=\"imgpreviewpost1\"\r\n                                  alt=\"previewImg\"\r\n                                  src={imagePreviewUrl}\r\n                                />\r\n                                <span className=\"deleteimgposts1\">\r\n                                  <img\r\n                                    className=\"deleteimgposts2\"\r\n                                    src=\"/img/delete2.png\"\r\n                                    onClick={() => handledeleteimage(index)}\r\n                                  />\r\n                                </span>\r\n                              </div>\r\n                            );\r\n                          })\r\n                        : imagecomment\r\n                        ? imagecomment\r\n                          ? imagecomment.map((doc, index) => {\r\n                              return (\r\n                                <div className=\"postdelete\">\r\n                                  <img\r\n                                    className=\"imgpreviewpost1\"\r\n                                    src={`${doc.url}`}\r\n                                    onClick={() => (\r\n                                      Setimagemodal(doc.url), handleopenmodal()\r\n                                    )}\r\n                                  />\r\n                                  <span className=\"deleteimgposts1\">\r\n                                    <img\r\n                                      className=\"deleteimgposts2\"\r\n                                      src=\"/img/delete2.png\"\r\n                                      onClick={() => handledeleteimage(index)}\r\n                                    />\r\n                                  </span>\r\n                                </div>\r\n                              );\r\n                            })\r\n                          : null\r\n                        : null}\r\n\r\n                      {imagecomment || imagesFile ? (\r\n                        <div className=\"uploadproveedits\">\r\n                          <label className=\"uploadproveedits1\">\r\n                            <img\r\n                              className=\"uploadproveedits2\"\r\n                              src=\"/img/last1.png\"\r\n                            />\r\n                            <input\r\n                              id=\"FileInput\"\r\n                              className=\"uploadspostcomment\"\r\n                              type=\"file\"\r\n                              onChange={FileUpload}\r\n                              multiple\r\n                              accept=\"image/png, image/jpeg , image/jpg\"\r\n                            />\r\n                          </label>{\" \"}\r\n                        </div>\r\n                      ) : null}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <div className=\"post-comment-comments2\">\r\n                  <div className=\"postcomment1\">{commentmore.textcomment}</div>\r\n                  <div className=\"imglistcomment\">\r\n                    {/* {loading ? <ClipLoader /> : <div></div>} */}\r\n                    {imagecomment\r\n                      ? imagecomment\r\n                        ? imagecomment.map((doc) => {\r\n                            return (\r\n                              <div className=\"imglistcommentpost1\">\r\n                                <img\r\n                                  className=\"listcommentpost2\"\r\n                                  src={`${doc.url}`}\r\n                                  onClick={() => (\r\n                                    Setimagemodal(doc.url), handleopenmodal()\r\n                                  )}\r\n                                />\r\n                              </div>\r\n                            );\r\n                          })\r\n                        : null\r\n                      : null}\r\n                    <Modalimage\r\n                      isopen={isopen}\r\n                      handleopenmodal={handleopenmodal}\r\n                      handleclosemodal={handleclosemodal}\r\n                      imagemodal={imagemodal}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\nexport default Listcomment;\r\n"]},"metadata":{},"sourceType":"module"}