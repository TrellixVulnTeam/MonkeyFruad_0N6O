{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\PROJECT ALL\\\\MonkeyFruad\\\\Frontend\\\\src\\\\user\\\\components\\\\listcomment.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from \"react\";\nimport Axios from \"axios\";\nimport usercontext from \"../context/usercontext\";\nimport \"./listcomment.css\";\nimport * as moment from \"moment\";\nimport \"moment/locale/th\";\nimport _ from \"lodash\";\nimport ClipLoader from \"./clipLoader\";\nimport { v4 as uuidv4 } from 'uuid';\n\nconst Listcomment = ({\n  commentmore,\n  handledeletetorerender,\n  handleedittorerender\n}) => {\n  _s();\n\n  const [imagesFile, setImagesFile] = useState(); //สร้าง State เพื่อเก็บไฟล์ที่อัพโหลด\n\n  const [files, Setfiles] = useState();\n  const [error, Seterror] = useState();\n  const [isActive, setIsActive] = useState(false);\n  const [item, Setitem] = useState([]);\n  const [checkedittext, Setcheckedittext] = useState(false);\n  const [textcomment, Settextcomment] = useState();\n  const [edittextcomment, Setedittextcomment] = useState(\"\");\n  const [imagecomment, Setimagecomment] = useState();\n  const [imagecomment2, Setimagecomment2] = useState();\n  const [secret, Setsecret] = useState();\n  const [loading, Setloading] = useState();\n  let {\n    user,\n    setUser\n  } = useContext(usercontext);\n\n  const FileUpload = event => {\n    event.preventDefault(); // ใส่ไว้ไม่ให้ refresh หน้าเว็บ\n\n    let date = new Date();\n    var myFile = [];\n    var files = [];\n\n    if (imagecomment) {\n      if (imagecomment.photocomment) {\n        imagecomment.photocomment.forEach(async doc => {\n          const response = await fetch(doc.url);\n          const data = await response.blob();\n          myFile.push(new File([data], `filename${uuidv4()}.png`, {\n            type: \"image/png\",\n            lastModified: date\n          }));\n        });\n        Setsecret(myFile);\n        console.log(secret);\n        console.log(myFile);\n        setImagesFile([]); // reset state รูป เพื่อกันในกรณีที่กดเลือกไฟล์ซ้ำแล้วรูปต่อกันจากอันเดิม\n\n        secret && secret.forEach(gg => {\n          files.push(gg, ...event.target.files); //ใช้เพื่อแสดงไฟลทั้งหมดที่กดเลือกไฟล\n        });\n        Setfiles([...files]);\n        Seterror();\n      }\n    } // ทำการวนข้อมูลภายใน Array\n\n\n    for (var i = 0; i < files.length; i++) {\n      console.log(\"gg\");\n      let reader = new FileReader(); //ใช้ Class  FileReader เป็นตัวอ่านไฟล์\n\n      reader.readAsDataURL(files[i]); //เป็นคำสั่งสำหรับการแปลง url มาเป็น file \n\n      reader.onloadend = () => {\n        // ใส่ข้อมูลเข้าไปยัง state ผาน  setimagesPreviewUrls\n        setImagesFile(prevState => [...prevState, reader.result]); //  PrevState เป็น Parameter ในการเรียก State ก่อนหน้ามาแล้วรวม Array กับ fileที่อัพโหลดเข้ามา\n      };\n    }\n  };\n\n  console.log(files);\n  console.log(imagesFile);\n\n  const handledeleteimage = async index => {\n    try {\n      imagesFile.splice(index, 1);\n      setImagesFile([...imagesFile]);\n      files.splice(index, 1);\n      Setfiles([...files]);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const deleted = async commentid => {\n    const postdelete = await Axios.post(`http://localhost:7000/post/delete/comment/${commentid}`);\n    setIsActive(false);\n    handledeletetorerender();\n  };\n\n  const edit = async () => {\n    Setcheckedittext(true);\n    setIsActive(false);\n    Setimagecomment2(imagecomment);\n  };\n\n  const handleedit = async commentid => {\n    try {\n      let formdata = new FormData();\n\n      _.forEach(files, file => {\n        formdata.append(\"photocomment\", file);\n      });\n\n      formdata.append(\"edittextcomment\", edittextcomment);\n      formdata.append(\"photocomment\", commentmore.photocomment);\n      Setloading(true);\n      const editcomment = await Axios.post(`http://localhost:7000/post/edit/comment/${commentid}`, formdata);\n      handleedittorerender();\n      setImagesFile();\n      Setfiles();\n      Setcheckedittext(false);\n      Setloading(false);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const gg = async () => {\n    try {\n      if (commentmore) {\n        Setedittextcomment(commentmore.textcomment);\n        Setimagecomment(commentmore);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    gg();\n  }, [commentmore]); // console.log(imagesFile)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: commentmore ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row postcommentrow\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column1 postcommentrow1\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"vl\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-comment-img1\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-profilecomment-img1\",\n            children: commentmore.photoURL ? /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"img-circle\",\n              src: `${commentmore.photoURL.url}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"img-circle\",\n              src: \"/img/profile.png\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-comment-name1\",\n            children: [commentmore ? \"@\" : null, commentmore.username, /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"post-comment-time1\",\n              children: [\" \", moment(new Date(commentmore.datetime.seconds * 1000)).format(\"LTS\"), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-lg-10 col-4\",\n            children: /*#__PURE__*/_jsxDEV(ClipLoader, {\n              loading: loading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 17\n          }, this) : checkedittext ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row comment\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"commenttextareapost\",\n              children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n                value: edittextcomment,\n                onChange: e => {\n                  Setedittextcomment(e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"buttoncommentpostsave1\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"buttoncommentpostsave2\",\n                onClick: () => handleedit(commentmore.commentid),\n                children: \"\\u0E1A\\u0E31\\u0E19\\u0E17\\u0E36\\u0E01\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"container-img-holder-imgpreview1\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"uploadprovepost1\",\n                  src: \"/img/addphoto.png\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"FileInput\",\n                  className: \"uploadspostcomment\",\n                  type: \"file\",\n                  onChange: FileUpload,\n                  multiple: true,\n                  accept: \"image/png, image/jpeg , image/jpg\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row imgcommentitem\",\n              children: imagesFile ? imagesFile.map((imagePreviewUrl, index) => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  clsssName: \"imagecomment1 col-6\",\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    className: \"imgpreviewpost1\",\n                    alt: \"previewImg\",\n                    src: imagePreviewUrl,\n                    style: {\n                      overflow: \"hidden\"\n                    },\n                    onMouseOver: e => e.currentTarget.style = {\n                      transform: \"scale(1.25)\",\n                      overflow: \"hidden\"\n                    },\n                    onMouseOut: e => e.currentTarget.style = {\n                      transform: \"scale(1)\",\n                      overflow: \"hidden\"\n                    }\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 216,\n                    columnNumber: 31\n                  }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                    className: \"deleteimgpost2\",\n                    src: \"/img/delete.png\",\n                    onClick: () => handledeleteimage(index)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 235,\n                    columnNumber: 31\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 29\n                }, this);\n              }) : imagecomment ? imagecomment.photocomment ? imagecomment.photocomment.map((doc, index) => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    className: \"imgpreviewpost1\",\n                    src: `${doc.url}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 247,\n                    columnNumber: 31\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 37\n                }, this);\n              }) : null : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-comment-comments1\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"postcomment1\",\n              children: commentmore.textcomment\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row imglistcomment\",\n              children: imagecomment ? imagecomment.photocomment ? imagecomment.photocomment.map(doc => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"imglistcomment1 col-6\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    className: \"listcomment2\",\n                    src: `${doc.url}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 273,\n                    columnNumber: 31\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 29\n                }, this);\n              }) : null : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this), user && commentmore.userid == user.uid ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column2 postcommentrow2\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"menu-containerpostcommentsetting\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => setIsActive(!isActive),\n            className: \"postcommentbuttonsetting\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"postcommentimg-setting\",\n              src: \"/img/setting.png\",\n              alt: \"avatar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `postcommentmenusetting ${isActive ? \"active\" : \"inactive\"}`,\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"ul-postcommentmenusetting\",\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"li-postcommentmenusetting\",\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  className: \"a-postcommentmenusetting\",\n                  onClick: () => edit(commentmore.commentid),\n                  children: \"\\u0E41\\u0E01\\u0E49\\u0E44\\u0E02\\u0E04\\u0E2D\\u0E21\\u0E40\\u0E21\\u0E19\\u0E15\\u0E4C\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 308,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"li-postcommentmenusetting\",\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  className: \"a-postcommentmenusetting\",\n                  onClick: () => deleted(commentmore.commentid),\n                  children: [\" \", \"\\u0E25\\u0E1A\\u0E04\\u0E2D\\u0E21\\u0E40\\u0E21\\u0E19\\u0E15\\u0E4C\", \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 316,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 13\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }, this) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Listcomment, \"s7mNdAmjMF6YPsNX2mD9jkIBKtw=\");\n\n_c = Listcomment;\nexport default Listcomment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Listcomment\");","map":{"version":3,"sources":["D:/PROJECT ALL/MonkeyFruad/Frontend/src/user/components/listcomment.js"],"names":["React","useEffect","useState","useContext","Axios","usercontext","moment","_","ClipLoader","v4","uuidv4","Listcomment","commentmore","handledeletetorerender","handleedittorerender","imagesFile","setImagesFile","files","Setfiles","error","Seterror","isActive","setIsActive","item","Setitem","checkedittext","Setcheckedittext","textcomment","Settextcomment","edittextcomment","Setedittextcomment","imagecomment","Setimagecomment","imagecomment2","Setimagecomment2","secret","Setsecret","loading","Setloading","user","setUser","FileUpload","event","preventDefault","date","Date","myFile","photocomment","forEach","doc","response","fetch","url","data","blob","push","File","type","lastModified","console","log","gg","target","i","length","reader","FileReader","readAsDataURL","onloadend","prevState","result","handledeleteimage","index","splice","err","deleted","commentid","postdelete","post","edit","handleedit","formdata","FormData","file","append","editcomment","photoURL","username","datetime","seconds","format","e","value","map","imagePreviewUrl","overflow","currentTarget","style","transform","userid","uid"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport Axios from \"axios\";\r\nimport usercontext from \"../context/usercontext\";\r\nimport \"./listcomment.css\";\r\nimport * as moment from \"moment\";\r\nimport \"moment/locale/th\";\r\nimport _ from \"lodash\";\r\nimport ClipLoader from \"./clipLoader\";\r\nimport { v4 as uuidv4 } from 'uuid'\r\n\r\nconst Listcomment = ({\r\n  commentmore,\r\n  handledeletetorerender,\r\n  handleedittorerender,\r\n}) => {\r\n  const [imagesFile, setImagesFile] = useState(); //สร้าง State เพื่อเก็บไฟล์ที่อัพโหลด\r\n  const [files, Setfiles] = useState();\r\n  const [error, Seterror] = useState();\r\n  const [isActive, setIsActive] = useState(false);\r\n  const [item, Setitem] = useState([]);\r\n  const [checkedittext, Setcheckedittext] = useState(false);\r\n  const [textcomment, Settextcomment] = useState();\r\n  const [edittextcomment, Setedittextcomment] = useState(\"\");\r\n  const [imagecomment, Setimagecomment] = useState();\r\n  const [imagecomment2, Setimagecomment2] = useState();\r\n  const [secret, Setsecret] = useState();\r\n  const [loading, Setloading] = useState();\r\n  let { user, setUser } = useContext(usercontext);\r\n\r\n  const FileUpload = (event) => {\r\n    event.preventDefault(); // ใส่ไว้ไม่ให้ refresh หน้าเว็บ\r\n    let date = new Date()\r\n    var myFile = []\r\n    var files = []\r\n    if(imagecomment){\r\n      if(imagecomment.photocomment){\r\n        imagecomment.photocomment.forEach(async doc => {\r\n          const response = await fetch(doc.url);\r\n          const data = await response.blob();\r\n          myFile.push(new File([data], `filename${uuidv4()}.png`, {type: \"image/png\" ,lastModified: date}))\r\n        })\r\n        \r\n        Setsecret(myFile)\r\n        console.log(secret)\r\n        console.log(myFile)\r\n  \r\n    setImagesFile([]); // reset state รูป เพื่อกันในกรณีที่กดเลือกไฟล์ซ้ำแล้วรูปต่อกันจากอันเดิม\r\n \r\n    secret && secret.forEach(gg => {\r\n       files.push(gg ,...event.target.files); //ใช้เพื่อแสดงไฟลทั้งหมดที่กดเลือกไฟล\r\n    })\r\n    Setfiles([...files]);\r\n    Seterror();\r\n\r\n      }\r\n    }\r\n\r\n    \r\n\r\n    // ทำการวนข้อมูลภายใน Array\r\n    for (var i = 0; i < files.length; i++) {\r\n      console.log(\"gg\")\r\n      let reader = new FileReader(); //ใช้ Class  FileReader เป็นตัวอ่านไฟล์\r\n      reader.readAsDataURL(files[i]); //เป็นคำสั่งสำหรับการแปลง url มาเป็น file \r\n      reader.onloadend = () => {\r\n        // ใส่ข้อมูลเข้าไปยัง state ผาน  setimagesPreviewUrls\r\n        setImagesFile((prevState) => [ ...prevState, reader.result]);\r\n        //  PrevState เป็น Parameter ในการเรียก State ก่อนหน้ามาแล้วรวม Array กับ fileที่อัพโหลดเข้ามา\r\n      };\r\n    }\r\n  };\r\n\r\n  console.log(files)\r\n  console.log(imagesFile)\r\n  const handledeleteimage = async (index) => {\r\n    try {\r\n     \r\n     \r\n      imagesFile.splice(index, 1);\r\n      setImagesFile([...imagesFile]);\r\n      \r\n      files.splice(index, 1);\r\n      Setfiles([...files]);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const deleted = async (commentid) => {\r\n    const postdelete = await Axios.post(\r\n      `http://localhost:7000/post/delete/comment/${commentid}`\r\n    );\r\n    setIsActive(false);\r\n    handledeletetorerender();\r\n  };\r\n\r\n  const edit = async () => {\r\n    Setcheckedittext(true);\r\n    setIsActive(false);\r\n    Setimagecomment2(imagecomment)\r\n  };\r\n  const handleedit = async (commentid) => {\r\n    try {\r\n        let formdata = new FormData();\r\n        _.forEach(files, (file) => {\r\n          formdata.append(\"photocomment\", file);\r\n        });\r\n        formdata.append(\"edittextcomment\", edittextcomment);\r\n        formdata.append(\"photocomment\", commentmore.photocomment);\r\n  \r\n        Setloading(true);\r\n        const editcomment = await Axios.post(\r\n          `http://localhost:7000/post/edit/comment/${commentid}`,\r\n          formdata\r\n        );\r\n\r\n      handleedittorerender();\r\n      setImagesFile();\r\n      Setfiles();\r\n      Setcheckedittext(false);\r\n      Setloading(false);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n \r\n\r\n\r\n  const gg = async () => {\r\n    try {\r\n      if (commentmore) {\r\n        Setedittextcomment(commentmore.textcomment);\r\n        Setimagecomment(commentmore)\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    gg();\r\n  }, [commentmore]);\r\n \r\n// console.log(imagesFile)\r\n  return (\r\n    <div>\r\n      {commentmore ? (\r\n        <div className=\"row postcommentrow\">\r\n          <div className=\"column1 postcommentrow1\">\r\n            <div class=\"vl\"></div>\r\n            <div className=\"post-comment-img1\">\r\n              <div className=\"post-profilecomment-img1\">\r\n                {commentmore.photoURL ? (\r\n                  <img\r\n                    className=\"img-circle\"\r\n                    src={`${commentmore.photoURL.url}`}\r\n                  />\r\n                ) : (\r\n                  <img className=\"img-circle\" src=\"/img/profile.png\" />\r\n                )}\r\n              </div>\r\n              <div className=\"post-comment-name1\">\r\n                {commentmore ? \"@\" : null}\r\n                {commentmore.username}\r\n                <span className=\"post-comment-time1\">\r\n                  {\" \"}\r\n                  {moment(new Date(commentmore.datetime.seconds * 1000)).format(\r\n                    \"LTS\"\r\n                  )}{\" \"}\r\n                </span>\r\n              </div>\r\n              <br />\r\n              {loading ? (\r\n                <div className=\"col-lg-10 col-4\">\r\n                  <ClipLoader loading={loading} />\r\n                </div>\r\n              ) : checkedittext ? (\r\n                <div className=\"row comment\">\r\n                  <div className=\"commenttextareapost\">\r\n                    <textarea\r\n                      value={edittextcomment}\r\n                      onChange={(e) => {\r\n                        Setedittextcomment(e.target.value);\r\n                      }}\r\n                    ></textarea>\r\n                  </div>\r\n                  <div className=\"buttoncommentpostsave1\">\r\n                    <button\r\n                      className=\"buttoncommentpostsave2\"\r\n                      onClick={() => handleedit(commentmore.commentid)}\r\n                    >\r\n                      บันทึก\r\n                    </button>\r\n                  </div>\r\n\r\n                  <div className=\"container-img-holder-imgpreview1\">\r\n                    <label>\r\n                      <img\r\n                        className=\"uploadprovepost1\"\r\n                        src=\"/img/addphoto.png\"\r\n                      />\r\n                      <input\r\n                        id=\"FileInput\"\r\n                        className=\"uploadspostcomment\"\r\n                        type=\"file\"\r\n                        onChange={FileUpload}\r\n                        multiple\r\n                        accept=\"image/png, image/jpeg , image/jpg\"\r\n                      />\r\n                    </label>\r\n                  </div>\r\n                    <div className=\"row imgcommentitem\">\r\n                    {imagesFile\r\n                      ? imagesFile.map((imagePreviewUrl, index) => {\r\n                          return (\r\n                            <div clsssName=\"imagecomment1 col-6\">\r\n                              <img\r\n                                key={index}\r\n                                className=\"imgpreviewpost1\"\r\n                                alt=\"previewImg\"\r\n                                src={imagePreviewUrl}\r\n                                style={{ overflow: \"hidden\" }}\r\n                                onMouseOver={(e) =>\r\n                                  (e.currentTarget.style = {\r\n                                    transform: \"scale(1.25)\",\r\n                                    overflow: \"hidden\",\r\n                                  })\r\n                                }\r\n                                onMouseOut={(e) =>\r\n                                  (e.currentTarget.style = {\r\n                                    transform: \"scale(1)\",\r\n                                    overflow: \"hidden\",\r\n                                  })\r\n                                }\r\n                              />\r\n                              <img\r\n                                className=\"deleteimgpost2\"\r\n                                src=\"/img/delete.png\"\r\n                                onClick={() => handledeleteimage(index)}\r\n                              />\r\n                            </div>\r\n                          );\r\n                        })\r\n                      : imagecomment\r\n                      ? imagecomment.photocomment\r\n                        ? imagecomment.photocomment.map((doc ,index) => {\r\n                            return (<div>\r\n                              <img\r\n                                className=\"imgpreviewpost1\"\r\n                                src={`${doc.url}`}\r\n                              />\r\n                                {/* <img\r\n                                className=\"deleteimgpost2\"\r\n                                src=\"/img/delete.png\"\r\n                                onClick={() => handledeleteimage(index)}\r\n                              /> */}\r\n                              </div>\r\n                            );\r\n                          })\r\n                        : null\r\n                      : null}\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <div className=\"post-comment-comments1\">\r\n                  <div className=\"postcomment1\">{commentmore.textcomment}</div>\r\n                  <div className=\"row imglistcomment\">\r\n                    {/* {loading ? <ClipLoader /> : <div></div>} */}\r\n                    {imagecomment\r\n                      ? imagecomment.photocomment \r\n                      ? imagecomment.photocomment.map((doc) => {\r\n                          return (\r\n                            <div className=\"imglistcomment1 col-6\">\r\n                              <img\r\n                                className=\"listcomment2\"\r\n                                src={`${doc.url}`}\r\n                              />\r\n                            </div>\r\n                          );\r\n                        })\r\n                      : null\r\n                    :null}\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          {user && commentmore.userid == user.uid ? (\r\n            <div className=\"column2 postcommentrow2\">\r\n              <div className=\"menu-containerpostcommentsetting\">\r\n                <div\r\n                  onClick={() => setIsActive(!isActive)}\r\n                  className=\"postcommentbuttonsetting\"\r\n                >\r\n                  <img\r\n                    className=\"postcommentimg-setting\"\r\n                    src=\"/img/setting.png\"\r\n                    alt=\"avatar\"\r\n                  ></img>\r\n                </div>\r\n\r\n                <div\r\n                  className={`postcommentmenusetting ${\r\n                    isActive ? \"active\" : \"inactive\"\r\n                  }`}\r\n                >\r\n                  <ul className=\"ul-postcommentmenusetting\">\r\n                    <li className=\"li-postcommentmenusetting\">\r\n                      <a\r\n                        className=\"a-postcommentmenusetting\"\r\n                        onClick={() => edit(commentmore.commentid)}\r\n                      >\r\n                        แก้ไขคอมเมนต์\r\n                      </a>\r\n                    </li>\r\n                    <li className=\"li-postcommentmenusetting\">\r\n                      <a\r\n                        className=\"a-postcommentmenusetting\"\r\n                        onClick={() => deleted(commentmore.commentid)}\r\n                      >\r\n                        {\" \"}\r\n                        ลบคอมเมนต์{\" \"}\r\n                      </a>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\nexport default Listcomment;\r\n"]},"metadata":{},"sourceType":"module"}