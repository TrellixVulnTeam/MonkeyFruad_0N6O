{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\praew\\\\OneDrive\\\\\\u0E40\\u0E14\\u0E2A\\u0E01\\u0E4C\\u0E17\\u0E47\\u0E2D\\u0E1B\\\\new\\\\MonkeyFruad\\\\frontend\\\\src\\\\user\\\\components\\\\Listcomment2.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from \"react\";\nimport Axios from \"axios\";\nimport usercontext from \"../context/usercontext\";\nimport \"./Listcomment2.css\";\nimport * as moment from \"moment\";\nimport \"moment/locale/th\";\nimport _ from \"lodash\";\nimport ClipLoader from \"./clipLoader\";\n\nconst Listcomment2 = ({\n  commentmore,\n  handledeletetorerender,\n  handleedittorerender\n}) => {\n  _s();\n\n  const [imagesFile, setImagesFile] = useState(); //สร้าง State เพื่อเก็บไฟล์ที่อัพโหลด\n\n  const [files, Setfiles] = useState();\n  const [error, Seterror] = useState();\n  const [isActive, setIsActive] = useState(false);\n\n  const onClick = () => setIsActive(!isActive);\n\n  const [item, Setitem] = useState([]);\n  const [checkedittext, Setcheckedittext] = useState(false);\n  const [textcomment, Settextcomment] = useState();\n  const [edittextcomment, Setedittextcomment] = useState();\n  const [imagecomment, Setimagecomment] = useState();\n  const [loading, Setloading] = useState();\n  let {\n    user,\n    setUser\n  } = useContext(usercontext);\n\n  const FileUpload = event => {\n    event.preventDefault(); // ใส่ไว้ไม่ให้ refresh หน้าเว็บ\n\n    setImagesFile([]); // reset state รูป เพื่อกันในกรณีที่กดเลือกไฟล์ซ้ำแล้วรูปต่อกันจากอันเดิม\n\n    let files = event.target.files; //ใช้เพื่อแสดงไฟลทั้งหมดที่กดเลือกไฟล\n\n    Setfiles([...files]);\n    Seterror(); //ทำการวนข้อมูลภายใน Array\n\n    for (var i = 0; i < files.length; i++) {\n      let reader = new FileReader(); //ใช้ Class  FileReader เป็นตัวอ่านไฟล์\n\n      reader.readAsDataURL(files[i]); //เป็นคำสั่งสำหรับการแปลง url มาเป็น file\n\n      reader.onloadend = () => {\n        // ใส่ข้อมูลเข้าไปยัง state ผาน  setimagesPreviewUrls\n        setImagesFile(prevState => [...prevState, reader.result]); //  PrevState เป็น Parameter ในการเรียก State ก่อนหน้ามาแล้วรวม Array กับ fileที่อัพโหลดเข้ามา\n      };\n    }\n  };\n\n  const handledeleteimage = async index => {\n    try {\n      imagesFile.splice(index, 1);\n      setImagesFile([...imagesFile]);\n      files.splice(index, 1);\n      Setfiles([...files]);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const deleted = async commentid => {\n    const postdelete = await Axios.post(`http://localhost:7000/post/delete/comment/${commentid}`);\n    setIsActive(false);\n    handledeletetorerender();\n  };\n\n  const edit = async () => {\n    Setcheckedittext(true);\n    setIsActive(false);\n  };\n\n  const handleedit = async commentid => {\n    try {\n      let formdata = new FormData();\n\n      _.forEach(files, file => {\n        formdata.append(\"photocomment\", file);\n      });\n\n      formdata.append(\"edittextcomment\", edittextcomment);\n      formdata.append(\"photocomment\", commentmore.photocomment);\n      Setloading(true);\n      const editcomment = await Axios.post(`http://localhost:7000/post/edit/comment/${commentid}`, formdata);\n      handleedittorerender();\n      setImagesFile();\n      Setfiles();\n      Setcheckedittext(false);\n      Setloading(false);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  console.log(imagecomment);\n\n  const gg = async () => {\n    try {\n      if (commentmore) {\n        Setedittextcomment(commentmore.textcomment);\n        Setimagecomment(commentmore.photocomment);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    gg();\n  }, [commentmore]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: commentmore ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row mypostcommentrow\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column1 mypostcommentrow1\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"vl\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mypost-comment-img1\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mypost-profilecomment-img1\",\n            children: commentmore.photoURL ? /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"img-circle\",\n              src: `${commentmore.photoURL.url}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"img-circle\",\n              src: \"/img/profile.png\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mypost-comment-name1\",\n            children: [commentmore ? \"@\" : null, commentmore.username, /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"mypost-comment-time1\",\n              children: [\" \", moment(new Date(commentmore.datetime.seconds * 1000)).format(\"LTS\"), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-lg-10 col-4\",\n            children: /*#__PURE__*/_jsxDEV(ClipLoader, {\n              loading: loading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 17\n          }, this) : checkedittext ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row commentmypost\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"commenttextareamypost\",\n              children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n                value: edittextcomment,\n                onChange: e => {\n                  Setedittextcomment(e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"buttoncommentmypostsave1\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"buttoncommentmypostsave2\",\n                onClick: () => handleedit(commentmore.commentid),\n                children: \"\\u0E1A\\u0E31\\u0E19\\u0E17\\u0E36\\u0E01\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"container-img-holder-imgpreview1\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"uploadprovemypost1\",\n                  src: \"/img/addphoto.png\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"FileInput\",\n                  className: \"uploadsmypostcomment\",\n                  type: \"file\",\n                  onChange: FileUpload,\n                  multiple: true,\n                  accept: \"image/png, image/jpeg , image/jpg\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row imgcommentitemmypost\",\n              children: imagesFile ? imagesFile.map((imagePreviewUrl, index) => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  clsssName: \"imagecomment1 col-6\",\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    className: \"imgpreviewmypost1\",\n                    alt: \"previewImg\",\n                    src: imagePreviewUrl,\n                    style: {\n                      overflow: \"hidden\"\n                    },\n                    onMouseOver: e => e.currentTarget.style = {\n                      transform: \"scale(1.25)\",\n                      overflow: \"hidden\"\n                    },\n                    onMouseOut: e => e.currentTarget.style = {\n                      transform: \"scale(1)\",\n                      overflow: \"hidden\"\n                    }\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 181,\n                    columnNumber: 31\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"deleteimgpost1\",\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      className: \"deleteimgpost2\",\n                      src: \"/img/delete2.png\",\n                      onClick: () => handledeleteimage(index)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 201,\n                      columnNumber: 33\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 200,\n                    columnNumber: 31\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 29\n                }, this);\n              }) : commentmore ? commentmore.photocomment ? commentmore.photocomment.map(doc => {\n                return /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"imgpreviewmypost1\",\n                  src: doc.url\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 31\n                }, this);\n              }) : null : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mypost-comment-comments1\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mypostcomment1\",\n              children: commentmore.textcomment\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row imglistcomment\",\n              children: commentmore.photocomment ? commentmore.photocomment.map(doc => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"imglistcomment1 col-6\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    className: \"listcomment2\",\n                    src: `${doc.url}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 235,\n                    columnNumber: 31\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 29\n                }, this);\n              }) : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this), user && commentmore.userid == user.uid ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column2 mypostcommentrow2\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"menu-containermypostcommentsetting\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: onClick,\n            className: \"mypostcommentbuttonsetting\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"mypostcommentimg-setting\",\n              src: \"/img/setting.png\",\n              alt: \"avatar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `mypostcommentmenusetting ${isActive ? \"active\" : \"inactive\"}`,\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"ul-mypostcommentmenusetting\",\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"li-mypostcommentmenusetting\",\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  className: \"a-mypostcommentmenusetting\",\n                  onClick: () => edit(commentmore.commentid),\n                  children: \"\\u0E41\\u0E01\\u0E49\\u0E44\\u0E02\\u0E04\\u0E2D\\u0E21\\u0E40\\u0E21\\u0E19\\u0E15\\u0E4C\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"li-mypostcommentmenusetting\",\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  className: \"a-mypostcommentmenusetting\",\n                  onClick: () => deleted(commentmore.commentid),\n                  children: [\" \", \"\\u0E25\\u0E1A\\u0E04\\u0E2D\\u0E21\\u0E40\\u0E21\\u0E19\\u0E15\\u0E4C\", \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 13\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Listcomment2, \"OdvwGIJAhLS3vFpmiCnJ136i2bQ=\");\n\n_c = Listcomment2;\nexport default Listcomment2;\n\nvar _c;\n\n$RefreshReg$(_c, \"Listcomment2\");","map":{"version":3,"sources":["C:/Users/praew/OneDrive/เดสก์ท็อป/new/MonkeyFruad/frontend/src/user/components/Listcomment2.js"],"names":["React","useEffect","useState","useContext","Axios","usercontext","moment","_","ClipLoader","Listcomment2","commentmore","handledeletetorerender","handleedittorerender","imagesFile","setImagesFile","files","Setfiles","error","Seterror","isActive","setIsActive","onClick","item","Setitem","checkedittext","Setcheckedittext","textcomment","Settextcomment","edittextcomment","Setedittextcomment","imagecomment","Setimagecomment","loading","Setloading","user","setUser","FileUpload","event","preventDefault","target","i","length","reader","FileReader","readAsDataURL","onloadend","prevState","result","handledeleteimage","index","splice","err","console","log","deleted","commentid","postdelete","post","edit","handleedit","formdata","FormData","forEach","file","append","photocomment","editcomment","gg","photoURL","url","username","Date","datetime","seconds","format","e","value","map","imagePreviewUrl","overflow","currentTarget","style","transform","doc","userid","uid"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport Axios from \"axios\";\r\nimport usercontext from \"../context/usercontext\";\r\nimport \"./Listcomment2.css\";\r\nimport * as moment from \"moment\";\r\nimport \"moment/locale/th\";\r\nimport _ from \"lodash\";\r\nimport ClipLoader from \"./clipLoader\";\r\nconst Listcomment2 = ({\r\n  commentmore,\r\n  handledeletetorerender,\r\n  handleedittorerender,\r\n}) => {\r\n  const [imagesFile, setImagesFile] = useState(); //สร้าง State เพื่อเก็บไฟล์ที่อัพโหลด\r\n  const [files, Setfiles] = useState();\r\n  const [error, Seterror] = useState();\r\n  const [isActive, setIsActive] = useState(false);\r\n  const onClick = () => setIsActive(!isActive);\r\n  const [item, Setitem] = useState([]);\r\n  const [checkedittext, Setcheckedittext] = useState(false);\r\n  const [textcomment, Settextcomment] = useState();\r\n  const [edittextcomment, Setedittextcomment] = useState();\r\n  const [imagecomment, Setimagecomment] = useState();\r\n  const [loading, Setloading] = useState();\r\n\r\n  let { user, setUser } = useContext(usercontext);\r\n\r\n  const FileUpload = (event) => {\r\n    event.preventDefault(); // ใส่ไว้ไม่ให้ refresh หน้าเว็บ\r\n    setImagesFile([]); // reset state รูป เพื่อกันในกรณีที่กดเลือกไฟล์ซ้ำแล้วรูปต่อกันจากอันเดิม\r\n    let files = event.target.files; //ใช้เพื่อแสดงไฟลทั้งหมดที่กดเลือกไฟล\r\n    Setfiles([...files]);\r\n    Seterror();\r\n\r\n    //ทำการวนข้อมูลภายใน Array\r\n    for (var i = 0; i < files.length; i++) {\r\n      let reader = new FileReader(); //ใช้ Class  FileReader เป็นตัวอ่านไฟล์\r\n      reader.readAsDataURL(files[i]); //เป็นคำสั่งสำหรับการแปลง url มาเป็น file\r\n      reader.onloadend = () => {\r\n        // ใส่ข้อมูลเข้าไปยัง state ผาน  setimagesPreviewUrls\r\n        setImagesFile((prevState) => [...prevState, reader.result]);\r\n        //  PrevState เป็น Parameter ในการเรียก State ก่อนหน้ามาแล้วรวม Array กับ fileที่อัพโหลดเข้ามา\r\n      };\r\n    }\r\n  };\r\n\r\n  const handledeleteimage = async (index) => {\r\n    try {\r\n      imagesFile.splice(index, 1);\r\n      setImagesFile([...imagesFile]);\r\n\r\n      files.splice(index, 1);\r\n      Setfiles([...files]);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const deleted = async (commentid) => {\r\n    const postdelete = await Axios.post(\r\n      `http://localhost:7000/post/delete/comment/${commentid}`\r\n    );\r\n    setIsActive(false);\r\n    handledeletetorerender();\r\n  };\r\n\r\n  const edit = async () => {\r\n    Setcheckedittext(true);\r\n    setIsActive(false);\r\n  };\r\n  const handleedit = async (commentid) => {\r\n    try {\r\n      let formdata = new FormData();\r\n      _.forEach(files, (file) => {\r\n        formdata.append(\"photocomment\", file);\r\n      });\r\n      formdata.append(\"edittextcomment\", edittextcomment);\r\n      formdata.append(\"photocomment\", commentmore.photocomment);\r\n      Setloading(true);\r\n      const editcomment = await Axios.post(\r\n        `http://localhost:7000/post/edit/comment/${commentid}`,\r\n        formdata\r\n      );\r\n      handleedittorerender();\r\n      setImagesFile();\r\n      Setfiles();\r\n      Setcheckedittext(false);\r\n      Setloading(false);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  console.log(imagecomment);\r\n  const gg = async () => {\r\n    try {\r\n      if (commentmore) {\r\n        Setedittextcomment(commentmore.textcomment);\r\n        Setimagecomment(commentmore.photocomment);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    gg();\r\n  }, [commentmore]);\r\n\r\n  return (\r\n    <div>\r\n      {commentmore ? (\r\n        <div className=\"row mypostcommentrow\">\r\n          <div className=\"column1 mypostcommentrow1\">\r\n            <div class=\"vl\"></div>\r\n            <div className=\"mypost-comment-img1\">\r\n              <div className=\"mypost-profilecomment-img1\">\r\n                {commentmore.photoURL ? (\r\n                  <img\r\n                    className=\"img-circle\"\r\n                    src={`${commentmore.photoURL.url}`}\r\n                  />\r\n                ) : (\r\n                  <img className=\"img-circle\" src=\"/img/profile.png\" />\r\n                )}\r\n              </div>\r\n              <div className=\"mypost-comment-name1\">\r\n                {commentmore ? \"@\" : null}\r\n                {commentmore.username}\r\n                <span className=\"mypost-comment-time1\">\r\n                  {\" \"}\r\n                  {moment(new Date(commentmore.datetime.seconds * 1000)).format(\r\n                    \"LTS\"\r\n                  )}{\" \"}\r\n                </span>\r\n              </div>\r\n              <br />\r\n              {loading ? (\r\n                <div className=\"col-lg-10 col-4\">\r\n                  <ClipLoader loading={loading} />\r\n                </div>\r\n              ) : checkedittext ? (\r\n                <div className=\"row commentmypost\">\r\n                  <div className=\"commenttextareamypost\">\r\n                    <textarea\r\n                      value={edittextcomment}\r\n                      onChange={(e) => {\r\n                        Setedittextcomment(e.target.value);\r\n                      }}\r\n                    ></textarea>\r\n                  </div>\r\n                  <div className=\"buttoncommentmypostsave1\">\r\n                    <button\r\n                      className=\"buttoncommentmypostsave2\"\r\n                      onClick={() => handleedit(commentmore.commentid)}\r\n                    >\r\n                      บันทึก\r\n                    </button>\r\n                  </div>\r\n\r\n                  <div className=\"container-img-holder-imgpreview1\">\r\n                    <label>\r\n                      <img\r\n                        className=\"uploadprovemypost1\"\r\n                        src=\"/img/addphoto.png\"\r\n                      />\r\n                      <input\r\n                        id=\"FileInput\"\r\n                        className=\"uploadsmypostcomment\"\r\n                        type=\"file\"\r\n                        onChange={FileUpload}\r\n                        multiple\r\n                        accept=\"image/png, image/jpeg , image/jpg\"\r\n                      />\r\n                    </label>\r\n                  </div>\r\n                  <div className=\"row imgcommentitemmypost\">\r\n                    {imagesFile\r\n                      ? imagesFile.map((imagePreviewUrl, index) => {\r\n                          return (\r\n                            <div clsssName=\"imagecomment1 col-6\">\r\n                              <img\r\n                                key={index}\r\n                                className=\"imgpreviewmypost1\"\r\n                                alt=\"previewImg\"\r\n                                src={imagePreviewUrl}\r\n                                style={{ overflow: \"hidden\" }}\r\n                                onMouseOver={(e) =>\r\n                                  (e.currentTarget.style = {\r\n                                    transform: \"scale(1.25)\",\r\n                                    overflow: \"hidden\",\r\n                                  })\r\n                                }\r\n                                onMouseOut={(e) =>\r\n                                  (e.currentTarget.style = {\r\n                                    transform: \"scale(1)\",\r\n                                    overflow: \"hidden\",\r\n                                  })\r\n                                }\r\n                              />\r\n                              <div className=\"deleteimgpost1\">\r\n                                <img\r\n                                  className=\"deleteimgpost2\"\r\n                                  src=\"/img/delete2.png\"\r\n                                  onClick={() => handledeleteimage(index)}\r\n                                />\r\n                              </div>\r\n                            </div>\r\n                          );\r\n                        })\r\n                      : commentmore\r\n                      ? commentmore.photocomment\r\n                        ? commentmore.photocomment.map((doc) => {\r\n                            return (\r\n                              <img\r\n                                className=\"imgpreviewmypost1\"\r\n                                src={doc.url}\r\n                              ></img>\r\n                            );\r\n                          })\r\n                        : null\r\n                      : null}\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <div className=\"mypost-comment-comments1\">\r\n                  <div className=\"mypostcomment1\">\r\n                    {commentmore.textcomment}\r\n                  </div>\r\n\r\n                  <div className=\"row imglistcomment\">\r\n                    {commentmore.photocomment\r\n                      ? commentmore.photocomment.map((doc) => {\r\n                          return (\r\n                            <div className=\"imglistcomment1 col-6\">\r\n                              <img\r\n                                className=\"listcomment2\"\r\n                                src={`${doc.url}`}\r\n                              />\r\n                            </div>\r\n                          );\r\n                        })\r\n                      : null}\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          {user && commentmore.userid == user.uid ? (\r\n            <div className=\"column2 mypostcommentrow2\">\r\n              <div className=\"menu-containermypostcommentsetting\">\r\n                <div onClick={onClick} className=\"mypostcommentbuttonsetting\">\r\n                  <img\r\n                    className=\"mypostcommentimg-setting\"\r\n                    src=\"/img/setting.png\"\r\n                    alt=\"avatar\"\r\n                  />\r\n                </div>\r\n\r\n                <div\r\n                  className={`mypostcommentmenusetting ${\r\n                    isActive ? \"active\" : \"inactive\"\r\n                  }`}\r\n                >\r\n                  <ul className=\"ul-mypostcommentmenusetting\">\r\n                    <li className=\"li-mypostcommentmenusetting\">\r\n                      <a\r\n                        className=\"a-mypostcommentmenusetting\"\r\n                        onClick={() => edit(commentmore.commentid)}\r\n                      >\r\n                        แก้ไขคอมเมนต์\r\n                      </a>\r\n                    </li>\r\n                    <li className=\"li-mypostcommentmenusetting\">\r\n                      <a\r\n                        className=\"a-mypostcommentmenusetting\"\r\n                        onClick={() => deleted(commentmore.commentid)}\r\n                      >\r\n                        {\" \"}\r\n                        ลบคอมเมนต์{\" \"}\r\n                      </a>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\nexport default Listcomment2;\r\n"]},"metadata":{},"sourceType":"module"}