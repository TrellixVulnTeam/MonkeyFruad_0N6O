{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\PROJECT ALL\\\\MonkeyFruad\\\\Frontend\\\\src\\\\user\\\\components\\\\commentitem.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { Form, Col, FormControl, Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport Axios from \"axios\";\nimport \"./commentitem.css\";\nimport usercontext from \"../context/usercontext\";\nimport Listcomment from \"./listcomment\";\nimport _ from \"lodash\";\n\nconst Commentitem = ({\n  postid\n}) => {\n  _s();\n\n  const [isActive, setIsActive] = useState(false);\n\n  const onClick = () => setIsActive(!isActive);\n\n  let {\n    user,\n    setUser\n  } = useContext(usercontext);\n  const [commentid, Setcommentid] = useState();\n  const [item, Setitem] = useState([]);\n  const [checkedittext, Setcheckedittext] = useState(false); // const [edittextcomment , Setedittextcomment] = useState()\n\n  const [textcomment, Settextcomment] = useState();\n\n  const deleted = async commentid => {\n    const postdelete = await Axios.post(`http://localhost:7000/post/delete/comment/${commentid}`); // const getcomment = await Axios.get(`http://localhost:7000/post/comment/${uid}`)\n    // console.log( getcomment.data.item);\n    // Setallcomment( getcomment.data.item);\n\n    window.location.reload(false);\n  };\n\n  const edit = async () => {\n    Setcheckedittext(true);\n  };\n\n  const handleedit = async commentid => {\n    const editcomment = await Axios.post(`http://localhost:7000/post/edit/comment/${commentid}`, {\n      textcomment\n    });\n  };\n\n  const gg = async () => {\n    try {\n      // Settextcomment(commentid.textcomment)\n      // Setcomment(commentid)\n      const editcomment = await Axios.get(`http://localhost:7000/post/comment/${postid}`);\n      Setcommentid(editcomment.data.item);\n      const getcomment = await Axios.get(`http://localhost:7000/post/comment/${postid}`);\n      Setcommentid(editcomment.data.item);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    gg();\n  }, []);\n  console.log(commentid);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: commentid ? commentid.map(commentid => {\n      return /*#__PURE__*/_jsxDEV(Listcomment, {\n        commentid: commentid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 18\n      }, this);\n    }) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Commentitem, \"5i6ihv1OZCmpa5eFOAruQTb8/pM=\");\n\n_c = Commentitem;\nexport default Commentitem;\n\nvar _c;\n\n$RefreshReg$(_c, \"Commentitem\");","map":{"version":3,"sources":["D:/PROJECT ALL/MonkeyFruad/Frontend/src/user/components/commentitem.js"],"names":["React","useEffect","useState","useContext","Form","Col","FormControl","Button","Link","Axios","usercontext","Listcomment","_","Commentitem","postid","isActive","setIsActive","onClick","user","setUser","commentid","Setcommentid","item","Setitem","checkedittext","Setcheckedittext","textcomment","Settextcomment","deleted","postdelete","post","window","location","reload","edit","handleedit","editcomment","gg","get","data","getcomment","err","console","log","map"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,WAApB,EAAiCC,MAAjC,QAA+C,iBAA/C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,mBAAP;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,CAAP,MAAc,QAAd;;AAIA,MAAMC,WAAW,GAAG,CAAC;AAAIC,EAAAA;AAAJ,CAAD,KAAiB;AAAA;;AAEnC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,KAAD,CAAxC;;AACA,QAAMe,OAAO,GAAG,MAAMD,WAAW,CAAC,CAACD,QAAF,CAAjC;;AACA,MAAI;AAAEG,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBhB,UAAU,CAACO,WAAD,CAAlC;AACA,QAAM,CAACU,SAAD,EAAaC,YAAb,IAA6BnB,QAAQ,EAA3C;AACA,QAAM,CAACoB,IAAD,EAAQC,OAAR,IAAmBrB,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAM,CAACsB,aAAD,EAAiBC,gBAAjB,IAAqCvB,QAAQ,CAAC,KAAD,CAAnD,CAPmC,CAQnC;;AACA,QAAM,CAACwB,WAAD,EAAeC,cAAf,IAAiCzB,QAAQ,EAA/C;;AAIA,QAAM0B,OAAO,GAAG,MAAOR,SAAP,IAAqB;AACjC,UAAMS,UAAU,GAAG,MAAMpB,KAAK,CAACqB,IAAN,CAAY,6CAA4CV,SAAU,EAAlE,CAAzB,CADiC,CAEjC;AACA;AACA;;AACAW,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,KAAvB;AACH,GAND;;AAOA,QAAMC,IAAI,GAAG,YAAW;AACtBT,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACD,GAFD;;AAGA,QAAMU,UAAU,GAAG,MAAOf,SAAP,IAAoB;AAEvC,UAAMgB,WAAW,GAAG,MAAM3B,KAAK,CAACqB,IAAN,CAAY,2CAA0CV,SAAU,EAAhE,EAAoE;AAACM,MAAAA;AAAD,KAApE,CAA1B;AAEC,GAJD;;AAMA,QAAMW,EAAE,GAAG,YAAY;AACrB,QAAI;AACF;AACA;AAEA,YAAMD,WAAW,GAAG,MAAM3B,KAAK,CAAC6B,GAAN,CAAW,sCAAqCxB,MAAO,EAAvD,CAA1B;AACAO,MAAAA,YAAY,CAACe,WAAW,CAACG,IAAZ,CAAiBjB,IAAlB,CAAZ;AAEA,YAAMkB,UAAU,GAAG,MAAM/B,KAAK,CAAC6B,GAAN,CAAW,sCAAqCxB,MAAO,EAAvD,CAAzB;AACAO,MAAAA,YAAY,CAACe,WAAW,CAACG,IAAZ,CAAiBjB,IAAlB,CAAZ;AACD,KATD,CASE,OAAOmB,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AAEF,GAdD;;AAeAxC,EAAAA,SAAS,CAAC,MAAM;AACdoC,IAAAA,EAAE;AACH,GAFQ,EAEN,EAFM,CAAT;AAGDK,EAAAA,OAAO,CAACC,GAAR,CAAYvB,SAAZ;AAEC,sBACI;AAAA,cACCA,SAAS,GAAGA,SAAS,CAACwB,GAAV,CAAcxB,SAAS,IAAG;AAEnC,0BACO,QAAC,WAAD;AAAc,QAAA,SAAS,EAAEA;AAAzB;AAAA;AAAA;AAAA;AAAA,cADP;AAIH,KANY,CAAH,GAMN;AAPJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAeD,CAhED;;GAAMP,W;;KAAAA,W;AAkEN,eAAeA,WAAf","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport { Form, Col, FormControl, Button } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\nimport \"./commentitem.css\";\r\nimport usercontext from \"../context/usercontext\";\r\nimport Listcomment from \"./listcomment\"\r\nimport _ from \"lodash\"\r\n\r\n\r\n\r\nconst Commentitem = ({   postid}) => {\r\n\r\n  const [isActive, setIsActive] = useState(false);\r\n  const onClick = () => setIsActive(!isActive);\r\n  let { user, setUser } = useContext(usercontext);\r\n  const [commentid , Setcommentid] = useState()\r\n  const [item , Setitem] = useState([])\r\n  const [checkedittext , Setcheckedittext] = useState(false)\r\n  // const [edittextcomment , Setedittextcomment] = useState()\r\n  const [textcomment , Settextcomment] = useState()\r\n\r\n    \r\n\r\n  const deleted = async (commentid) => {\r\n      const postdelete = await Axios.post(`http://localhost:7000/post/delete/comment/${commentid}`);\r\n      // const getcomment = await Axios.get(`http://localhost:7000/post/comment/${uid}`)\r\n      // console.log( getcomment.data.item);\r\n      // Setallcomment( getcomment.data.item);\r\n      window.location.reload(false);\r\n  };\r\n  const edit = async () =>{\r\n    Setcheckedittext(true)\r\n  }\r\n  const handleedit = async (commentid) =>{\r\n  \r\n  const editcomment = await Axios.post(`http://localhost:7000/post/edit/comment/${commentid}`,  {textcomment} )\r\n  \r\n  }\r\n\r\n  const gg = async () => {\r\n    try {\r\n      // Settextcomment(commentid.textcomment)\r\n      // Setcomment(commentid)\r\n\r\n      const editcomment = await Axios.get(`http://localhost:7000/post/comment/${postid}` )\r\n      Setcommentid(editcomment.data.item)\r\n\r\n      const getcomment = await Axios.get(`http://localhost:7000/post/comment/${postid}` )\r\n      Setcommentid(editcomment.data.item)\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n\r\n  };\r\n  useEffect(() => {\r\n    gg();\r\n  }, []);\r\n console.log(commentid)\r\n  \r\n  return (\r\n      <div>\r\n      {commentid ? commentid.map(commentid =>{\r\n\r\n          return (\r\n                 <Listcomment  commentid={commentid}/> \r\n            \r\n          )\r\n      }): null}\r\n      \r\n    </div> \r\n\r\n\r\n  \r\n  );\r\n};\r\n\r\nexport default Commentitem;\r\n\r\n\r\n "]},"metadata":{},"sourceType":"module"}