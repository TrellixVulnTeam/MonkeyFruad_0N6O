{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\PROJECT ALL\\\\MonkeyFruad\\\\Frontend\\\\src\\\\user\\\\components\\\\Listcomment2.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from \"react\";\nimport Axios from \"axios\";\nimport usercontext from \"../context/usercontext\";\nimport \"./Listcomment2.css\";\nimport * as moment from \"moment\";\nimport \"moment/locale/th\";\nimport _ from \"lodash\";\nimport ClipLoaderEdit from \"./clipLoaderEdit\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Modalimage from \"./Modalimage\";\nimport Modaldelete from \"./Modaldelete\";\n\nconst Listcomment2 = ({\n  commentmore,\n  handledeletetorerender,\n  handleedittorerender\n}) => {\n  _s();\n\n  const [imagesFile, setImagesFile] = useState(); //สร้าง State เพื่อเก็บไฟล์ที่อัพโหลด\n\n  const [files, Setfiles] = useState();\n  const [error, Seterror] = useState();\n  const [isActive, setIsActive] = useState(false);\n\n  const onClick = () => setIsActive(!isActive);\n\n  const [item, Setitem] = useState([]);\n  const [checkedittext, Setcheckedittext] = useState(false);\n  const [textcomment, Settextcomment] = useState();\n  const [edittextcomment, Setedittextcomment] = useState();\n  const [imagecomment, Setimagecomment] = useState();\n  const [loading, Setloading] = useState();\n  const [fuck, Setfuck] = useState([]);\n  const [isopen, Setisopen] = useState(false);\n  const [imagemodal, Setimagemodal] = useState();\n  const [openmodal, Setopenmodal] = useState(false);\n  const [modalcommentid, Setmodalcommentid] = useState();\n  const [modalcommentmore, Setmodalcommentmore] = useState();\n  let {\n    user,\n    setUser\n  } = useContext(usercontext);\n\n  const handleopenmodal = async () => {\n    Setisopen(true);\n  };\n\n  const handleclosemodal = async () => {\n    Setisopen(false);\n  };\n\n  const handlemodalopen = async () => {\n    Setopenmodal(true);\n  };\n\n  const handlemodalclose = async () => {\n    Setopenmodal(false);\n  };\n\n  const FileUpload = event => {\n    event.preventDefault(); // ใส่ไว้ไม่ให้ refresh หน้าเว็บ\n\n    setImagesFile([]);\n    var myfuck = [];\n    var files = [];\n    let date = new Date();\n\n    if (imagecomment) {\n      imagecomment.map(async doc => {\n        const response = await Axios({\n          method: \"get\",\n          url: doc.url,\n          responseType: \"blob\"\n        });\n        await myfuck.push(new File([response.data], `filename${uuidv4()}.png`, {\n          type: response.data.type,\n          lastModified: date\n        }));\n      });\n    }\n\n    setTimeout(() => {\n      if (myfuck) {\n        myfuck.forEach(doc => {\n          files.push(doc);\n        });\n      }\n\n      console.log(files);\n      let filesnew = [...files, ...fuck, ...event.target.files];\n      Setfiles([...files, ...fuck, ...event.target.files]);\n      Setfuck(prevState => [...prevState, ...event.target.files]);\n      Seterror();\n\n      for (var i = 0; i < filesnew.length; i++) {\n        let reader = new FileReader(); //ใช้ Class  FileReader เป็นตัวอ่านไฟล์\n\n        reader.readAsDataURL(filesnew[i]); //เป็นคำสั่งสำหรับการแปลง url มาเป็น file\n\n        reader.onloadend = () => {\n          // ใส่ข้อมูลเข้าไปยัง state ผาน  setimagesPreviewUrls\n          setImagesFile(prevState => [...prevState, reader.result]); //  PrevState เป็น Parameter ในการเรียก State ก่อนหน้ามาแล้วรวม Array กับ fileที่อัพโหลดเข้ามา\n        };\n      }\n    }, 50);\n  };\n\n  const handledeleteimage = async index => {\n    try {\n      if (imagecomment) {\n        console.log(\"a\");\n        imagecomment.splice(index, 1);\n        Setimagecomment([...imagecomment]);\n      }\n\n      if (imagecomment && imagecomment.length === 0) {\n        Setimagecomment();\n      }\n\n      if (imagesFile) {\n        console.log(\"b\");\n        imagesFile.splice(index, 1);\n        setImagesFile([...imagesFile]);\n      }\n\n      if (imagesFile && imagesFile.length === 0) {\n        setImagesFile();\n      }\n\n      if (fuck) {\n        console.log(\"c\");\n        fuck.splice(index, 1);\n        Setfuck([...fuck]);\n      }\n\n      let date = new Date();\n      var myFile = [];\n\n      if (imagecomment) {\n        imagecomment.forEach(async doc => {\n          const response = await fetch(doc.url);\n          const data = await response.blob();\n          myFile.push(new File([data], `filename${uuidv4()}.png`, {\n            type: \"image/png\",\n            lastModified: date\n          }));\n        });\n        Setfiles(myFile);\n      }\n\n      console.log(myFile);\n\n      if (files) {\n        console.log(\"d\");\n        files.splice(index, 1);\n        Setfiles([...files]);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const deleted = async (commentid, commentmore) => {\n    const postdelete = await Axios.post(`http://localhost:7000/post/delete/comment/${commentid}`, commentmore);\n    setIsActive(false);\n    Setfuck([]);\n    setImagesFile();\n    Setfiles();\n    handledeletetorerender();\n  };\n\n  const edit = async () => {\n    Setcheckedittext(true);\n    setIsActive(false);\n    var myfuck = [];\n    let date = new Date();\n\n    if (imagecomment) {\n      imagecomment.map(async doc => {\n        const response = await Axios({\n          method: \"get\",\n          url: doc.url,\n          responseType: \"blob\"\n        });\n        await myfuck.push(new File([response.data], `filename${uuidv4()}.png`, {\n          type: response.data.type,\n          lastModified: date\n        }));\n      });\n    }\n\n    setTimeout(() => {\n      Setfiles([...myfuck]);\n    }, 50);\n  };\n\n  const handleedit = async commentid => {\n    try {\n      let formdata = new FormData();\n\n      _.forEach(files, file => {\n        formdata.append(\"photocomment\", file);\n      });\n\n      formdata.append(\"edittextcomment\", edittextcomment);\n      formdata.append(\"photocomment\", imagecomment);\n      Setloading(true);\n      const editcomment = await Axios.post(`http://localhost:7000/post/edit/comment/${commentid}`, formdata);\n      handleedittorerender();\n      Setfuck([]);\n      setImagesFile();\n      Setfiles();\n      Setcheckedittext(false);\n      Setloading(false);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const gg = async () => {\n    try {\n      if (commentmore) {\n        Setedittextcomment(commentmore.textcomment);\n        Setimagecomment(commentmore.photocomment);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    gg();\n  }, [commentmore]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: commentmore ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mypostcommentrow\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"vl\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mypost-comment-img1\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-mypost-comment\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mypost-profilecomment-img1\",\n            children: commentmore.photoURL ? /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"img-circle\",\n              src: `${commentmore.photoURL.url}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"img-circle\",\n              src: \"/img/profile.png\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mypost-comment-name1\",\n            children: [commentmore ? \"@\" : null, commentmore.username, /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"mypost-comment-time1\",\n              children: [\" \", moment(new Date(commentmore.datetime.seconds * 1000)).startOf().fromNow(), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 15\n          }, this), user && commentmore.userid == user.uid ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"menu-containermypostcommentsetting\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                onClick: onClick,\n                className: \"mypostcommentbuttonsetting\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"mypostcommentimg-setting\",\n                  src: \"/img/setting.png\",\n                  alt: \"avatar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `mypostcommentmenusetting ${isActive ? \"active\" : \"inactive\"}`,\n                children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: \"ul-mypostcommentmenusetting\",\n                  children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                    className: \"li-mypostcommentmenusetting\",\n                    children: /*#__PURE__*/_jsxDEV(\"a\", {\n                      className: \"a-mypostcommentmenusetting\",\n                      onClick: () => edit(commentmore.commentid),\n                      children: \"\\u0E41\\u0E01\\u0E49\\u0E44\\u0E02\\u0E04\\u0E2D\\u0E21\\u0E40\\u0E21\\u0E19\\u0E15\\u0E4C\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 278,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 277,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: \"li-mypostcommentmenusetting\",\n                    children: /*#__PURE__*/_jsxDEV(\"a\", {\n                      className: \"a-mypostcommentmenusetting\",\n                      onClick: () => (Setmodalcommentid(commentmore.commentid), Setmodalcommentmore(commentmore), setIsActive(false), handlemodalopen()),\n                      children: [\" \", \"\\u0E25\\u0E1A\\u0E04\\u0E2D\\u0E21\\u0E40\\u0E21\\u0E19\\u0E15\\u0E4C\", \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 286,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 285,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 17\n          }, this) : null, /*#__PURE__*/_jsxDEV(Modaldelete, {\n            text: \"deletecomment\",\n            openmodal: openmodal,\n            handlemodalopen: handlemodalopen,\n            handlemodalclose: handlemodalclose,\n            modalcommentid: modalcommentid,\n            modalcommentmore: modalcommentmore,\n            setIsActive: setIsActive,\n            Setfuck: Setfuck,\n            setImagesFile: setImagesFile,\n            Setfiles: Setfiles,\n            handledeletetorerender: handledeletetorerender\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 13\n        }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(ClipLoaderEdit, {\n            loading: loading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 15\n        }, this) : checkedittext ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"commentmypost\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"commentboxmypost\",\n            children: [!imagecomment && !imagesFile ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"container-img-holder-imgpreview1\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"uploadprovemypost1\",\n                  src: \"/img/addimg.png\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 327,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"FileInput\",\n                  className: \"uploadspostcomment\",\n                  type: \"file\",\n                  onChange: FileUpload,\n                  multiple: true,\n                  accept: \"image/png, image/jpeg , image/jpg\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 331,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mypost-writecommemt\",\n              controlId: \"exampleForm.ControlTextarea1\",\n              children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n                rows: \"3\",\n                cols: \"15\",\n                className: \"inputcommentmypost2\",\n                placeholder: \"\\u0E40\\u0E02\\u0E35\\u0E22\\u0E19\\u0E04\\u0E27\\u0E32\\u0E21\\u0E04\\u0E34\\u0E14\\u0E40\\u0E2B\\u0E47\\u0E19...\",\n                value: edittextcomment,\n                onChange: e => {\n                  Setedittextcomment(e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"buttoncommentmypostsave1\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"buttoncommentmypostsave2\",\n                onClick: () => handleedit(commentmore.commentid),\n                children: \"\\u0E1A\\u0E31\\u0E19\\u0E17\\u0E36\\u0E01\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"imgcommentitemmypost\",\n              children: [imagesFile ? imagesFile.map((imagePreviewUrl, index) => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"postdeletemypost\",\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    className: \"imgpreviewmypost1\",\n                    alt: \"previewImg\",\n                    src: imagePreviewUrl\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 377,\n                    columnNumber: 31\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"deleteimgmyposts1\",\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      className: \"deleteimgmyposts2\",\n                      src: \"/img/delete2.png\",\n                      onClick: () => handledeleteimage(index)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 384,\n                      columnNumber: 33\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 383,\n                    columnNumber: 31\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 376,\n                  columnNumber: 29\n                }, this);\n              }) : imagecomment ? imagecomment ? imagecomment.map((doc, index) => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"postdeletemypost\",\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    className: \"imgpreviewmypost1\",\n                    src: doc.url,\n                    onClick: () => (Setimagemodal(doc.url), handleopenmodal())\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 398,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"deleteimgmyposts1\",\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      className: \"deleteimgmyposts2\",\n                      src: \"/img/delete2.png\",\n                      onClick: () => handledeleteimage(index)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 406,\n                      columnNumber: 35\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 405,\n                    columnNumber: 33\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 397,\n                  columnNumber: 31\n                }, this);\n              }) : null : null, imagecomment || imagesFile ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"uploadproveeditmyposts\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"uploadproveeditmyposts1\",\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    className: \"uploadproveeditmyposts2\",\n                    src: \"/img/last1.png\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 421,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    id: \"FileInput\",\n                    className: \"uploadspostcomment\",\n                    type: \"file\",\n                    onChange: FileUpload,\n                    multiple: true,\n                    accept: \"image/png, image/jpeg , image/jpg\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 426,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 420,\n                  columnNumber: 25\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 419,\n                columnNumber: 23\n              }, this) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mypost-comment-comments2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mypostcomment1\",\n            children: commentmore.textcomment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"imglistcommentmypost\",\n            children: [imagecomment ? imagecomment.map(doc => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"imglistcommentmypost1\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"listcommentmypost2\",\n                  src: `${doc.url}`,\n                  onClick: () => (Setimagemodal(doc.url), handleopenmodal())\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 448,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 447,\n                columnNumber: 27\n              }, this);\n            }) : null, /*#__PURE__*/_jsxDEV(Modalimage, {\n              isopen: isopen,\n              handleopenmodal: handleopenmodal,\n              handleclosemodal: handleclosemodal,\n              imagemodal: imagemodal\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 459,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 9\n    }, this) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 231,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Listcomment2, \"1vbcY/KBBKPlLHBbcR+gBW2DAOY=\");\n\n_c = Listcomment2;\nexport default Listcomment2;\n\nvar _c;\n\n$RefreshReg$(_c, \"Listcomment2\");","map":{"version":3,"sources":["D:/PROJECT ALL/MonkeyFruad/Frontend/src/user/components/Listcomment2.js"],"names":["React","useEffect","useState","useContext","Axios","usercontext","moment","_","ClipLoaderEdit","v4","uuidv4","Modalimage","Modaldelete","Listcomment2","commentmore","handledeletetorerender","handleedittorerender","imagesFile","setImagesFile","files","Setfiles","error","Seterror","isActive","setIsActive","onClick","item","Setitem","checkedittext","Setcheckedittext","textcomment","Settextcomment","edittextcomment","Setedittextcomment","imagecomment","Setimagecomment","loading","Setloading","fuck","Setfuck","isopen","Setisopen","imagemodal","Setimagemodal","openmodal","Setopenmodal","modalcommentid","Setmodalcommentid","modalcommentmore","Setmodalcommentmore","user","setUser","handleopenmodal","handleclosemodal","handlemodalopen","handlemodalclose","FileUpload","event","preventDefault","myfuck","date","Date","map","doc","response","method","url","responseType","push","File","data","type","lastModified","setTimeout","forEach","console","log","filesnew","target","prevState","i","length","reader","FileReader","readAsDataURL","onloadend","result","handledeleteimage","index","splice","myFile","fetch","blob","err","deleted","commentid","postdelete","post","edit","handleedit","formdata","FormData","file","append","editcomment","gg","photocomment","photoURL","username","datetime","seconds","startOf","fromNow","userid","uid","e","value","imagePreviewUrl"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport Axios from \"axios\";\r\nimport usercontext from \"../context/usercontext\";\r\nimport \"./Listcomment2.css\";\r\nimport * as moment from \"moment\";\r\nimport \"moment/locale/th\";\r\nimport _ from \"lodash\";\r\nimport ClipLoaderEdit from \"./clipLoaderEdit\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport Modalimage from \"./Modalimage\";\r\nimport Modaldelete from \"./Modaldelete\";\r\n\r\n\r\nconst Listcomment2 = ({\r\n  commentmore,\r\n  handledeletetorerender,\r\n  handleedittorerender,\r\n}) => {\r\n  const [imagesFile, setImagesFile] = useState(); //สร้าง State เพื่อเก็บไฟล์ที่อัพโหลด\r\n  const [files, Setfiles] = useState();\r\n  const [error, Seterror] = useState();\r\n  const [isActive, setIsActive] = useState(false);\r\n  const onClick = () => setIsActive(!isActive);\r\n  const [item, Setitem] = useState([]);\r\n  const [checkedittext, Setcheckedittext] = useState(false);\r\n  const [textcomment, Settextcomment] = useState();\r\n  const [edittextcomment, Setedittextcomment] = useState();\r\n  const [imagecomment, Setimagecomment] = useState();\r\n  const [loading, Setloading] = useState();\r\n  const [fuck, Setfuck] = useState([]);\r\n  const [isopen, Setisopen] = useState(false);\r\n  const [imagemodal, Setimagemodal] = useState();\r\n  const [openmodal, Setopenmodal] = useState(false);\r\n  const [modalcommentid, Setmodalcommentid] = useState();\r\n  const [modalcommentmore, Setmodalcommentmore] = useState();\r\n\r\n  let { user, setUser } = useContext(usercontext);\r\n\r\n  const handleopenmodal = async () => {\r\n    Setisopen(true);\r\n  };\r\n  const handleclosemodal = async () => {\r\n    Setisopen(false);\r\n  };\r\n  const handlemodalopen = async () => {\r\n    Setopenmodal(true)\r\n  };\r\n  const handlemodalclose = async () => {\r\n    Setopenmodal(false) \r\n   };\r\n\r\n\r\n  const FileUpload = (event) => {\r\n    event.preventDefault(); // ใส่ไว้ไม่ให้ refresh หน้าเว็บ\r\n\r\n    setImagesFile([]);\r\n    var myfuck = [];\r\n    var files = [];\r\n    let date = new Date();\r\n    if (imagecomment) {\r\n      imagecomment.map(async (doc) => {\r\n        const response = await Axios({\r\n          method: \"get\",\r\n          url: doc.url,\r\n          responseType: \"blob\",\r\n        });\r\n        await myfuck.push(\r\n          new File([response.data], `filename${uuidv4()}.png`, {\r\n            type: response.data.type,\r\n            lastModified: date,\r\n          })\r\n        );\r\n      });\r\n    }\r\n\r\n    setTimeout(() => {\r\n      if (myfuck) {\r\n        myfuck.forEach((doc) => {\r\n          files.push(doc);\r\n        });\r\n      }\r\n      console.log(files);\r\n\r\n      let filesnew = [...files, ...fuck, ...event.target.files];\r\n\r\n      Setfiles([...files, ...fuck, ...event.target.files]);\r\n      Setfuck((prevState) => [...prevState, ...event.target.files]);\r\n      Seterror();\r\n\r\n      for (var i = 0; i < filesnew.length; i++) {\r\n        let reader = new FileReader(); //ใช้ Class  FileReader เป็นตัวอ่านไฟล์\r\n        reader.readAsDataURL(filesnew[i]); //เป็นคำสั่งสำหรับการแปลง url มาเป็น file\r\n        reader.onloadend = () => {\r\n          // ใส่ข้อมูลเข้าไปยัง state ผาน  setimagesPreviewUrls\r\n          setImagesFile((prevState) => [...prevState, reader.result]);\r\n          //  PrevState เป็น Parameter ในการเรียก State ก่อนหน้ามาแล้วรวม Array กับ fileที่อัพโหลดเข้ามา\r\n        };\r\n      }\r\n    }, 50);\r\n  };\r\n\r\n  const handledeleteimage = async (index) => {\r\n    try {\r\n      if (imagecomment) {\r\n        console.log(\"a\");\r\n        imagecomment.splice(index, 1);\r\n        Setimagecomment([...imagecomment]);\r\n      }\r\n      if (imagecomment && imagecomment.length === 0) {\r\n        Setimagecomment();\r\n      }\r\n      if (imagesFile) {\r\n        console.log(\"b\");\r\n        imagesFile.splice(index, 1);\r\n        setImagesFile([...imagesFile]);\r\n      }\r\n      if (imagesFile && imagesFile.length === 0) {\r\n        setImagesFile();\r\n      }\r\n\r\n      if (fuck) {\r\n        console.log(\"c\");\r\n        fuck.splice(index, 1);\r\n        Setfuck([...fuck]);\r\n      }\r\n\r\n      let date = new Date();\r\n      var myFile = [];\r\n      if (imagecomment) {\r\n        imagecomment.forEach(async (doc) => {\r\n          const response = await fetch(doc.url);\r\n          const data = await response.blob();\r\n          myFile.push(\r\n            new File([data], `filename${uuidv4()}.png`, {\r\n              type: \"image/png\",\r\n              lastModified: date,\r\n            })\r\n          );\r\n        });\r\n        Setfiles(myFile);\r\n      }\r\n      console.log(myFile);\r\n      if (files) {\r\n        console.log(\"d\");\r\n        files.splice(index, 1);\r\n        Setfiles([...files]);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const deleted = async (commentid, commentmore) => {\r\n    const postdelete = await Axios.post(\r\n      `http://localhost:7000/post/delete/comment/${commentid}`,\r\n      commentmore\r\n    );\r\n    setIsActive(false);\r\n    Setfuck([]);\r\n    setImagesFile();\r\n    Setfiles();\r\n    handledeletetorerender();\r\n  };\r\n\r\n  const edit = async () => {\r\n    Setcheckedittext(true);\r\n    setIsActive(false);\r\n    var myfuck = [];\r\n    let date = new Date();\r\n    if (imagecomment) {\r\n      imagecomment.map(async (doc) => {\r\n        const response = await Axios({\r\n          method: \"get\",\r\n          url: doc.url,\r\n          responseType: \"blob\",\r\n        });\r\n        await myfuck.push(\r\n          new File([response.data], `filename${uuidv4()}.png`, {\r\n            type: response.data.type,\r\n            lastModified: date,\r\n          })\r\n        );\r\n      });\r\n    }\r\n    setTimeout(() => {\r\n      Setfiles([...myfuck]);\r\n    }, 50);\r\n  };\r\n\r\n  const handleedit = async (commentid) => {\r\n    try {\r\n      let formdata = new FormData();\r\n      _.forEach(files, (file) => {\r\n        formdata.append(\"photocomment\", file);\r\n      });\r\n      formdata.append(\"edittextcomment\", edittextcomment);\r\n      formdata.append(\"photocomment\", imagecomment);\r\n\r\n      Setloading(true);\r\n      const editcomment = await Axios.post(\r\n        `http://localhost:7000/post/edit/comment/${commentid}`,\r\n        formdata\r\n      );\r\n\r\n      handleedittorerender();\r\n      Setfuck([]);\r\n      setImagesFile();\r\n      Setfiles();\r\n      Setcheckedittext(false);\r\n      Setloading(false);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const gg = async () => {\r\n    try {\r\n      if (commentmore) {\r\n        Setedittextcomment(commentmore.textcomment);\r\n        Setimagecomment(commentmore.photocomment);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    gg();\r\n  }, [commentmore]);\r\n\r\n  return (\r\n    <div>\r\n      {commentmore ? (\r\n        <div className=\"mypostcommentrow\">\r\n          <div class=\"vl\"></div>\r\n          <div className=\"mypost-comment-img1\">\r\n            <div className=\"header-mypost-comment\">\r\n              <div className=\"mypost-profilecomment-img1\">\r\n                {commentmore.photoURL ? (\r\n                  <img\r\n                    className=\"img-circle\"\r\n                    src={`${commentmore.photoURL.url}`}\r\n                  />\r\n                ) : (\r\n                  <img className=\"img-circle\" src=\"/img/profile.png\" />\r\n                )}\r\n              </div>\r\n              <div className=\"mypost-comment-name1\">\r\n                {commentmore ? \"@\" : null}\r\n                {commentmore.username}\r\n                <span className=\"mypost-comment-time1\">\r\n                  {\" \"}\r\n                  {moment(new Date(commentmore.datetime.seconds * 1000))\r\n                    .startOf()\r\n                    .fromNow()}{\" \"}\r\n                </span>\r\n              </div>\r\n              {user && commentmore.userid == user.uid ? (\r\n                <div>\r\n                  <div className=\"menu-containermypostcommentsetting\">\r\n                    <div\r\n                      onClick={onClick}\r\n                      className=\"mypostcommentbuttonsetting\"\r\n                    >\r\n                      <img\r\n                        className=\"mypostcommentimg-setting\"\r\n                        src=\"/img/setting.png\"\r\n                        alt=\"avatar\"\r\n                      />\r\n                    </div>\r\n\r\n                    <div\r\n                      className={`mypostcommentmenusetting ${\r\n                        isActive ? \"active\" : \"inactive\"\r\n                      }`}\r\n                    >\r\n                      <ul className=\"ul-mypostcommentmenusetting\">\r\n                        <li className=\"li-mypostcommentmenusetting\">\r\n                          <a\r\n                            className=\"a-mypostcommentmenusetting\"\r\n                            onClick={() => edit(commentmore.commentid)}\r\n                          >\r\n                            แก้ไขคอมเมนต์\r\n                          </a>\r\n                        </li>\r\n                        <li className=\"li-mypostcommentmenusetting\">\r\n                          <a\r\n                            className=\"a-mypostcommentmenusetting\"\r\n                            onClick={() =>\r\n                              (Setmodalcommentid(commentmore.commentid),Setmodalcommentmore(commentmore),setIsActive(false),handlemodalopen())\r\n                            }\r\n                          >\r\n                            {\" \"}\r\n                            ลบคอมเมนต์{\" \"}\r\n                          </a>\r\n                        </li>\r\n                      </ul>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ) : null}\r\n                <Modaldelete\r\n                   text={\"deletecomment\"}\r\n                    openmodal={openmodal}\r\n                    handlemodalopen={handlemodalopen}\r\n                    handlemodalclose={handlemodalclose}\r\n                    modalcommentid={modalcommentid}\r\n                    modalcommentmore={modalcommentmore}\r\n                    setIsActive={setIsActive}\r\n                    Setfuck={Setfuck}\r\n                    setImagesFile={setImagesFile}\r\n                    Setfiles={Setfiles}\r\n                    handledeletetorerender={handledeletetorerender}\r\n                  />\r\n            </div>\r\n\r\n            <br />\r\n            {loading ? (\r\n              <div>\r\n                <ClipLoaderEdit loading={loading} />\r\n              </div>\r\n            ) : checkedittext ? (\r\n              <div className=\"commentmypost\">\r\n                <div className=\"commentboxmypost\">\r\n                  {!imagecomment && !imagesFile ? (\r\n                    <div className=\"container-img-holder-imgpreview1\">\r\n                      <label>\r\n                        <img\r\n                          className=\"uploadprovemypost1\"\r\n                          src=\"/img/addimg.png\"\r\n                        />\r\n                        <input\r\n                          id=\"FileInput\"\r\n                          className=\"uploadspostcomment\"\r\n                          type=\"file\"\r\n                          onChange={FileUpload}\r\n                          multiple\r\n                          accept=\"image/png, image/jpeg , image/jpg\"\r\n                        />\r\n                      </label>\r\n                    </div>\r\n                  ) : (\r\n                    <div></div>\r\n                  )}\r\n\r\n                  <div\r\n                    className=\"mypost-writecommemt\"\r\n                    controlId=\"exampleForm.ControlTextarea1\"\r\n                  >\r\n                    <textarea\r\n                      rows=\"3\"\r\n                      cols=\"15\"\r\n                      className=\"inputcommentmypost2\"\r\n                      placeholder=\"เขียนความคิดเห็น...\"\r\n                      value={edittextcomment}\r\n                      onChange={(e) => {\r\n                        Setedittextcomment(e.target.value);\r\n                      }}\r\n                    ></textarea>\r\n                  </div>\r\n\r\n                  <div className=\"buttoncommentmypostsave1\">\r\n                    <button\r\n                      className=\"buttoncommentmypostsave2\"\r\n                      onClick={() => handleedit(commentmore.commentid)}\r\n                    >\r\n                      บันทึก\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div className=\"imgcommentitemmypost\">\r\n                    {imagesFile\r\n                      ? imagesFile.map((imagePreviewUrl, index) => {\r\n                          return (\r\n                            <div className=\"postdeletemypost\">\r\n                              <img\r\n                                key={index}\r\n                                className=\"imgpreviewmypost1\"\r\n                                alt=\"previewImg\"\r\n                                src={imagePreviewUrl}\r\n                              />\r\n                              <span className=\"deleteimgmyposts1\">\r\n                                <img\r\n                                  className=\"deleteimgmyposts2\"\r\n                                  src=\"/img/delete2.png\"\r\n                                  onClick={() => handledeleteimage(index)}\r\n                                />\r\n                              </span>\r\n                            </div>\r\n                          );\r\n                        })\r\n                      : imagecomment\r\n                      ? imagecomment\r\n                        ? imagecomment.map((doc, index) => {\r\n                            return (\r\n                              <div className=\"postdeletemypost\">\r\n                                <img\r\n                                  className=\"imgpreviewmypost1\"\r\n                                  src={doc.url}\r\n                                  onClick={() => (\r\n                                    Setimagemodal(doc.url), handleopenmodal()\r\n                                  )}\r\n                                />\r\n                                <span className=\"deleteimgmyposts1\">\r\n                                  <img\r\n                                    className=\"deleteimgmyposts2\"\r\n                                    src=\"/img/delete2.png\"\r\n                                    onClick={() => handledeleteimage(index)}\r\n                                  />\r\n                                </span>\r\n                              </div>\r\n                            );\r\n                          })\r\n                        : null\r\n                      : null}\r\n\r\n                    {imagecomment || imagesFile ? (\r\n                      <div className=\"uploadproveeditmyposts\">\r\n                        <label className=\"uploadproveeditmyposts1\">\r\n                          <img\r\n                            className=\"uploadproveeditmyposts2\"\r\n                            src=\"/img/last1.png\"\r\n                          />\r\n\r\n                          <input\r\n                            id=\"FileInput\"\r\n                            className=\"uploadspostcomment\"\r\n                            type=\"file\"\r\n                            onChange={FileUpload}\r\n                            multiple\r\n                            accept=\"image/png, image/jpeg , image/jpg\"\r\n                          />\r\n                        </label>{\" \"}\r\n                      </div>\r\n                    ) : null}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <div className=\"mypost-comment-comments2\">\r\n                <div className=\"mypostcomment1\">{commentmore.textcomment}</div>\r\n                <div className=\"imglistcommentmypost\">\r\n                  {imagecomment\r\n                    ? imagecomment.map((doc) => {\r\n                        return (\r\n                          <div className=\"imglistcommentmypost1\">\r\n                            <img\r\n                              className=\"listcommentmypost2\"\r\n                              src={`${doc.url}`}\r\n                              onClick={() => (\r\n                                Setimagemodal(doc.url), handleopenmodal()\r\n                              )}\r\n                            />\r\n                          </div>\r\n                        );\r\n                      })\r\n                    : null}\r\n                  <Modalimage\r\n                    isopen={isopen}\r\n                    handleopenmodal={handleopenmodal}\r\n                    handleclosemodal={handleclosemodal}\r\n                    imagemodal={imagemodal}\r\n                  />\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\nexport default Listcomment2;\r\n"]},"metadata":{},"sourceType":"module"}