{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\PROJECT ALL\\\\MonkeyFruad\\\\Frontend\\\\src\\\\user\\\\components\\\\listcomment.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { Form, Col, FormControl, Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport Axios from \"axios\";\nimport usercontext from \"../context/usercontext\";\n\nconst Listcomment = ({\n  comment,\n  commentmore,\n  onclick\n}) => {\n  _s();\n\n  const [isActive, setIsActive] = useState(false);\n\n  const onClick = () => setIsActive(!isActive);\n\n  let {\n    user,\n    setUser\n  } = useContext(usercontext);\n  const [item, Setitem] = useState([]);\n  const [checkedittext, Setcheckedittext] = useState(false); // const [edittextcomment , Setedittextcomment] = useState()\n\n  const [textcomment, Settextcomment] = useState();\n  const [edittextcomment, Setedittextcomment] = useState();\n\n  const deleted = async commentid => {\n    const postdelete = await Axios.post(`http://localhost:7000/post/delete/comment/${commentid}`);\n    window.location.reload(false);\n  };\n\n  const edit = async () => {\n    Setcheckedittext(true);\n  };\n\n  const handleedit = async commentid => {\n    console.log(edittextcomment);\n    const editcomment = await Axios.post(`http://localhost:7000/post/edit/comment/${commentid}`, {\n      edittextcomment\n    });\n  };\n\n  const gg = async () => {\n    try {\n      Setedittextcomment(comment.textcomment);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    gg();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: commentmore ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row mypostcommentrow\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column1 mypostcommentrow1\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"vl\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mypost-comment-img1\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-profilecomment-img1\",\n            children: comment.photoURL ? /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"img-circle\",\n              src: `${comment.photoURL.url}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 39\n            }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"img-circle\",\n              src: \"/img/profile.png\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 105\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mypost-comment-name1\",\n            children: [comment ? \"@\" : null, comment.username, /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"mypost-comment-time1\",\n              children: [\" \", comment.datetime, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 11\n          }, this), checkedittext ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              value: edittextcomment,\n              onChange: e => {\n                Setedittextcomment(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 32\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleedit(comment.commentid),\n              children: \"\\u0E15\\u0E01\\u0E25\\u0E07\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 10\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 27\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mypost-comment-comments1\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mypostcomment1\",\n              children: comment.textcomment\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 10\n      }, this), user && comment.userid == user.uid ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column2 mypostcommentrow2\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"menu-containermypostcommentsetting\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: onClick,\n            className: \"mypostcommentbuttonsetting\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"mypostcommentimg-setting\",\n              src: \"/img/setting.png\",\n              alt: \"avatar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `mypostcommentmenusetting ${isActive ? \"active\" : \"inactive\"}`,\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"ul-mypostcommentmenusetting\",\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"li-mypostcommentmenusetting\",\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  className: \"a-mypostcommentmenusetting\",\n                  onClick: () => edit(comment.commentid),\n                  children: \"\\u0E41\\u0E01\\u0E49\\u0E44\\u0E02\\u0E04\\u0E2D\\u0E21\\u0E40\\u0E21\\u0E19\\u0E15\\u0E4C\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 12\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"li-mypostcommentmenusetting\",\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  className: \"a-mypostcommentmenusetting\",\n                  onClick: () => deleted(comment.commentid),\n                  children: [\" \", \"\\u0E25\\u0E1A\\u0E04\\u0E2D\\u0E21\\u0E40\\u0E21\\u0E19\\u0E15\\u0E4C\", \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 46\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 30\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \" \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 14\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Listcomment, \"DycR8KyYqmwpWtsWc0+oUmzcykc=\");\n\n_c = Listcomment;\nexport default Listcomment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Listcomment\");","map":{"version":3,"sources":["D:/PROJECT ALL/MonkeyFruad/Frontend/src/user/components/listcomment.js"],"names":["React","useEffect","useState","useContext","Form","Col","FormControl","Button","Link","Axios","usercontext","Listcomment","comment","commentmore","onclick","isActive","setIsActive","onClick","user","setUser","item","Setitem","checkedittext","Setcheckedittext","textcomment","Settextcomment","edittextcomment","Setedittextcomment","deleted","commentid","postdelete","post","window","location","reload","edit","handleedit","console","log","editcomment","gg","err","photoURL","url","username","datetime","e","target","value","userid","uid"],"mappings":"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","sourcesContent":["\r\nimport React, { useEffect, useState, useContext } from \"react\";\r\nimport { Form, Col, FormControl, Button } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\nimport usercontext from \"../context/usercontext\";\r\n\r\nconst  Listcomment = ( {comment , commentmore , onclick}) => {\r\n    const [isActive, setIsActive] = useState(false);\r\n    const onClick = () => setIsActive(!isActive);\r\n    let { user, setUser } = useContext(usercontext);\r\n    const [item , Setitem] = useState([])\r\n    const [checkedittext , Setcheckedittext] = useState(false)\r\n    // const [edittextcomment , Setedittextcomment] = useState()\r\n    const [textcomment , Settextcomment] = useState()\r\n    const [edittextcomment , Setedittextcomment] = useState()\r\n  \r\n  \r\n  \r\n    const deleted = async (commentid) => {\r\n        const postdelete = await Axios.post(`http://localhost:7000/post/delete/comment/${commentid}`);\r\n        window.location.reload(false);\r\n    };\r\n    const edit = async () =>{\r\n      Setcheckedittext(true)\r\n    }\r\n    const handleedit = async (commentid) =>{\r\n   console.log(edittextcomment)\r\n    const editcomment = await Axios.post(`http://localhost:7000/post/edit/comment/${commentid}`,  {edittextcomment} )\r\n  \r\n    }\r\n\r\n\r\n    const gg = async () => {\r\n        try {\r\n          Setedittextcomment(comment.textcomment)\r\n    \r\n        } catch (err) {\r\n          console.log(err);\r\n        }\r\n    \r\n      };\r\n      useEffect(() => {\r\n        gg();\r\n      }, []);\r\n  \r\n\r\n    return (\r\n        <div>\r\n            {commentmore ?   <div className=\"row mypostcommentrow\">\r\n         <div className=\"column1 mypostcommentrow1\">\r\n        <div class=\"vl\"></div>\r\n        <div className=\"mypost-comment-img1\">\r\n        <div className=\"post-profilecomment-img1\">\r\n                  {comment.photoURL ? <img className=\"img-circle\" src={`${comment.photoURL.url}`}  /> : <img className=\"img-circle\" src=\"/img/profile.png\" /> }\r\n             \r\n                </div>\r\n          <div className=\"mypost-comment-name1\">\r\n           {comment ? \"@\" : null}{comment.username}\r\n            <span className=\"mypost-comment-time1\"> {comment.datetime} </span>\r\n          </div>\r\n          <br />\r\n         {checkedittext ? <div><input value={edittextcomment} onChange={(e) =>{Setedittextcomment(e.target.value)}}></input> \r\n         <button onClick={() => handleedit(comment.commentid)}>ตกลง</button> \r\n         </div> : <div className=\"mypost-comment-comments1\">\r\n            <div className=\"mypostcomment1\">{comment.textcomment}</div> \r\n          </div>  \r\n         } \r\n        </div> \r\n       </div> \r\n       {user && comment.userid == user.uid ? <div className=\"column2 mypostcommentrow2\">\r\n        <div className=\"menu-containermypostcommentsetting\">\r\n          <div onClick={onClick} className=\"mypostcommentbuttonsetting\">\r\n            <img \r\n              className=\"mypostcommentimg-setting\"\r\n              src=\"/img/setting.png\"\r\n              alt=\"avatar\"\r\n            ></img> \r\n       </div>\r\n\r\n          <div\r\n            className={`mypostcommentmenusetting ${\r\n              isActive ? \"active\" : \"inactive\"\r\n            }`}\r\n          >\r\n            <ul className=\"ul-mypostcommentmenusetting\">\r\n           <li className=\"li-mypostcommentmenusetting\">\r\n                <a className=\"a-mypostcommentmenusetting\"\r\n                onClick={() => edit(comment.commentid)}\r\n                >\r\n                    แก้ไขคอมเมนต์\r\n                </a>\r\n              </li> \r\n              <li className=\"li-mypostcommentmenusetting\">\r\n                <a\r\n                  className=\"a-mypostcommentmenusetting\"\r\n                  onClick={() => deleted(comment.commentid)}\r\n                >\r\n                  {\" \"}\r\n                  ลบคอมเมนต์{\" \"}\r\n                </a>\r\n              </li> \r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div> : null }\r\n    </div> : <div> </div>}\r\n             \r\n    \r\n</div>\r\n    )\r\n}\r\nexport default Listcomment"]},"metadata":{},"sourceType":"module"}