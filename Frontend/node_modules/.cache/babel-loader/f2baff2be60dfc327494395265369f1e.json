{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\PROJECT ALL\\\\MonkeyFruad\\\\Frontend\\\\src\\\\admin\\\\components\\\\listcommentpost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from \"react\";\nimport Axios from \"axios\";\nimport \"../../user/components/listcomment.css\";\nimport * as moment from \"moment\";\nimport \"moment/locale/th\";\nimport _ from \"lodash\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Modalimage from \"../../user/components/Modalimage\";\n\nconst Listcommentpost = ({\n  commentmore,\n  handledeletetorerender,\n  handleedittorerender,\n  setIsActive,\n  isActive\n}) => {\n  _s();\n\n  const [imagesFile, setImagesFile] = useState(); //สร้าง State เพื่อเก็บไฟล์ที่อัพโหลด\n\n  const [imagecomment, Setimagecomment] = useState();\n  const [files, Setfiles] = useState();\n  const [error, Seterror] = useState();\n  const [item, Setitem] = useState([]);\n  const [checkedittext, Setcheckedittext] = useState(false);\n  const [textcomment, Settextcomment] = useState();\n  const [edittextcomment, Setedittextcomment] = useState(\"\");\n  const [imagecomment2, Setimagecomment2] = useState();\n  const [fuck, Setfuck] = useState([]);\n  const [isopen, Setisopen] = useState(false);\n  const [imagemodal, Setimagemodal] = useState();\n  const [loading, Setloading] = useState();\n\n  const handleopenmodal = async () => {\n    Setisopen(true);\n  };\n\n  const handleclosemodal = async () => {\n    Setisopen(false);\n  };\n\n  const FileUpload = event => {\n    event.preventDefault(); // ใส่ไว้ไม่ให้ refresh หน้าเว็บ\n\n    setImagesFile([]);\n    var myfuck = [];\n    var files = [];\n    let date = new Date();\n\n    if (imagecomment) {\n      imagecomment.map(async doc => {\n        const response = await Axios({\n          method: \"get\",\n          url: doc.url,\n          responseType: \"blob\"\n        });\n        await myfuck.push(new File([response.data], `filename${uuidv4()}.png`, {\n          type: response.data.type,\n          lastModified: date\n        }));\n      });\n    }\n\n    setTimeout(() => {\n      if (myfuck) {\n        myfuck.forEach(doc => {\n          files.push(doc);\n        });\n      }\n\n      console.log(files);\n      let filesnew = [...files, ...fuck, ...event.target.files];\n      Setfiles([...files, ...fuck, ...event.target.files]);\n      Setfuck(prevState => [...prevState, ...event.target.files]);\n      Seterror();\n\n      for (var i = 0; i < filesnew.length; i++) {\n        let reader = new FileReader(); //ใช้ Class  FileReader เป็นตัวอ่านไฟล์\n\n        reader.readAsDataURL(filesnew[i]); //เป็นคำสั่งสำหรับการแปลง url มาเป็น file\n\n        reader.onloadend = () => {\n          // ใส่ข้อมูลเข้าไปยัง state ผาน  setimagesPreviewUrls\n          setImagesFile(prevState => [...prevState, reader.result]); //  PrevState เป็น Parameter ในการเรียก State ก่อนหน้ามาแล้วรวม Array กับ fileที่อัพโหลดเข้ามา\n        };\n      }\n    }, 50);\n  }; // console.log(fuck);\n  // console.log(imagesFile);\n  // console.log(files);\n  // console.log(imagecomment)\n\n\n  console.log(imagesFile);\n\n  const handledeleteimage = async index => {\n    try {\n      if (imagecomment) {\n        console.log(\"a\");\n        imagecomment.splice(index, 1);\n        Setimagecomment([...imagecomment]);\n      }\n\n      if (imagesFile) {\n        console.log(\"b\");\n        imagesFile.splice(index, 1);\n        setImagesFile([...imagesFile]);\n      }\n\n      if (imagesFile && imagesFile.length === 0) {\n        setImagesFile();\n      }\n\n      if (fuck) {\n        console.log(\"c\");\n        fuck.splice(index, 1);\n        Setfuck([...fuck]);\n      }\n\n      let date = new Date();\n      var myFile = [];\n\n      if (imagecomment) {\n        imagecomment.forEach(async doc => {\n          const response = await fetch(doc.url);\n          const data = await response.blob();\n          myFile.push(new File([data], `filename${uuidv4()}.png`, {\n            type: \"image/png\",\n            lastModified: date\n          }));\n        });\n        Setfiles(myFile);\n      }\n\n      if (files) {\n        console.log(\"d\");\n        files.splice(index, 1);\n        Setfiles([...files]);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  if (commentmore && commentmore.photocomment) {\n    console.log(commentmore.photocomment);\n  }\n\n  const deleted = async (commentid, commentmore) => {\n    console.log(commentmore);\n    const postdelete = await Axios.post(`https://monkeyfruad01.herokuapp.com/post/delete/comment/${commentid}`, commentmore);\n    setIsActive(false);\n    Setfuck([]);\n    setImagesFile();\n    Setfiles();\n    handledeletetorerender();\n  };\n\n  const edit = async () => {\n    Setcheckedittext(true);\n    setIsActive(false);\n    var myfuck = [];\n    let date = new Date();\n\n    if (imagecomment) {\n      imagecomment.map(async doc => {\n        const response = await Axios({\n          method: \"get\",\n          url: doc.url,\n          responseType: \"blob\"\n        });\n        await myfuck.push(new File([response.data], `filename${uuidv4()}.png`, {\n          type: response.data.type,\n          lastModified: date\n        }));\n      });\n    }\n\n    setTimeout(() => {\n      Setfiles([...myfuck]);\n    }, 50);\n  };\n\n  const handleedit = async commentid => {\n    try {\n      let formdata = new FormData();\n\n      _.forEach(files, file => {\n        formdata.append(\"photocomment\", file);\n      });\n\n      formdata.append(\"edittextcomment\", edittextcomment);\n      formdata.append(\"photocomment\", imagecomment);\n      Setloading(true);\n      const editcomment = await Axios.post(`https://monkeyfruad01.herokuapp.com/post/edit/comment/${commentid}`, formdata);\n      handleedittorerender();\n      Setfuck([]);\n      setImagesFile();\n      Setfiles();\n      Setcheckedittext(false);\n      Setloading(false);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const gg = async () => {\n    try {\n      if (commentmore) {\n        Setedittextcomment(commentmore.textcomment);\n        Setimagecomment(commentmore.photocomment);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    gg();\n  }, [commentmore]); // console.log(imagesFile)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: commentmore ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"postcommentrows\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-comment-img1\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-post-comment\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-profilecomment-img1\",\n            children: commentmore.photoURL ? /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"img-circle profile-comment1\",\n              src: `${commentmore.photoURL.url}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"img-circle profile-comment1\",\n              src: \"/img/profile.png\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-comment-name1\",\n            children: [commentmore ? \"@\" : null, commentmore.username, /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"post-comment-time1\",\n              children: [\" \", moment(new Date(commentmore.datetime.seconds * 1000)).format(\"LTS\"), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-comment-comments2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"postcomment1\",\n            children: commentmore.textcomment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"imglistcomment\",\n            children: [imagecomment ? imagecomment ? imagecomment.map(doc => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"imglistcommentpost1\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"listcommentpost2\",\n                  src: `${doc.url}`,\n                  onClick: () => (Setimagemodal(doc.url), handleopenmodal())\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 27\n              }, this);\n            }) : null : null, /*#__PURE__*/_jsxDEV(Modalimage, {\n              isopen: isopen,\n              handleopenmodal: handleopenmodal,\n              handleclosemodal: handleclosemodal,\n              imagemodal: imagemodal\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 9\n    }, this) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 221,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Listcommentpost, \"rzoHOF5b/HkKSxt8F28SWuLgzes=\");\n\n_c = Listcommentpost;\nexport default Listcommentpost;\n\nvar _c;\n\n$RefreshReg$(_c, \"Listcommentpost\");","map":{"version":3,"sources":["D:/PROJECT ALL/MonkeyFruad/Frontend/src/admin/components/listcommentpost.js"],"names":["React","useEffect","useState","useContext","Axios","moment","_","v4","uuidv4","Modalimage","Listcommentpost","commentmore","handledeletetorerender","handleedittorerender","setIsActive","isActive","imagesFile","setImagesFile","imagecomment","Setimagecomment","files","Setfiles","error","Seterror","item","Setitem","checkedittext","Setcheckedittext","textcomment","Settextcomment","edittextcomment","Setedittextcomment","imagecomment2","Setimagecomment2","fuck","Setfuck","isopen","Setisopen","imagemodal","Setimagemodal","loading","Setloading","handleopenmodal","handleclosemodal","FileUpload","event","preventDefault","myfuck","date","Date","map","doc","response","method","url","responseType","push","File","data","type","lastModified","setTimeout","forEach","console","log","filesnew","target","prevState","i","length","reader","FileReader","readAsDataURL","onloadend","result","handledeleteimage","index","splice","myFile","fetch","blob","err","photocomment","deleted","commentid","postdelete","post","edit","handleedit","formdata","FormData","file","append","editcomment","gg","photoURL","username","datetime","seconds","format"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport Axios from \"axios\";\r\nimport \"../../user/components/listcomment.css\";\r\nimport * as moment from \"moment\";\r\nimport \"moment/locale/th\";\r\nimport _ from \"lodash\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport Modalimage from \"../../user/components/Modalimage\";\r\n\r\nconst Listcommentpost = ({\r\n  commentmore,\r\n  handledeletetorerender,\r\n  handleedittorerender,\r\n  setIsActive,\r\n  isActive,\r\n}) => {\r\n  const [imagesFile, setImagesFile] = useState(); //สร้าง State เพื่อเก็บไฟล์ที่อัพโหลด\r\n  const [imagecomment, Setimagecomment] = useState();\r\n\r\n  const [files, Setfiles] = useState();\r\n  const [error, Seterror] = useState();\r\n  const [item, Setitem] = useState([]);\r\n  const [checkedittext, Setcheckedittext] = useState(false);\r\n  const [textcomment, Settextcomment] = useState();\r\n  const [edittextcomment, Setedittextcomment] = useState(\"\");\r\n  const [imagecomment2, Setimagecomment2] = useState();\r\n  const [fuck, Setfuck] = useState([]);\r\n  const [isopen, Setisopen] = useState(false);\r\n  const [imagemodal, Setimagemodal] = useState();\r\n  const [loading, Setloading] = useState();\r\n\r\n  const handleopenmodal = async () => {\r\n    Setisopen(true);\r\n  };\r\n  const handleclosemodal = async () => {\r\n    Setisopen(false);\r\n  };\r\n\r\n  const FileUpload = (event) => {\r\n    event.preventDefault(); // ใส่ไว้ไม่ให้ refresh หน้าเว็บ\r\n\r\n    setImagesFile([]);\r\n    var myfuck = [];\r\n    var files = [];\r\n    let date = new Date();\r\n    if (imagecomment) {\r\n      imagecomment.map(async (doc) => {\r\n        const response = await Axios({\r\n          method: \"get\",\r\n          url: doc.url,\r\n          responseType: \"blob\",\r\n        });\r\n        await myfuck.push(\r\n          new File([response.data], `filename${uuidv4()}.png`, {\r\n            type: response.data.type,\r\n            lastModified: date,\r\n          })\r\n        );\r\n      });\r\n    }\r\n\r\n    setTimeout(() => {\r\n      if (myfuck) {\r\n        myfuck.forEach((doc) => {\r\n          files.push(doc);\r\n        });\r\n      }\r\n      console.log(files);\r\n\r\n      let filesnew = [...files, ...fuck, ...event.target.files];\r\n\r\n      Setfiles([...files, ...fuck, ...event.target.files]);\r\n      Setfuck((prevState) => [...prevState, ...event.target.files]);\r\n      Seterror();\r\n\r\n      for (var i = 0; i < filesnew.length; i++) {\r\n        let reader = new FileReader(); //ใช้ Class  FileReader เป็นตัวอ่านไฟล์\r\n        reader.readAsDataURL(filesnew[i]); //เป็นคำสั่งสำหรับการแปลง url มาเป็น file\r\n        reader.onloadend = () => {\r\n          // ใส่ข้อมูลเข้าไปยัง state ผาน  setimagesPreviewUrls\r\n          setImagesFile((prevState) => [...prevState, reader.result]);\r\n          //  PrevState เป็น Parameter ในการเรียก State ก่อนหน้ามาแล้วรวม Array กับ fileที่อัพโหลดเข้ามา\r\n        };\r\n      }\r\n    }, 50);\r\n  };\r\n  // console.log(fuck);\r\n  // console.log(imagesFile);\r\n  // console.log(files);\r\n  // console.log(imagecomment)\r\n  console.log(imagesFile);\r\n\r\n  const handledeleteimage = async (index) => {\r\n    try {\r\n      if (imagecomment) {\r\n        console.log(\"a\");\r\n        imagecomment.splice(index, 1);\r\n        Setimagecomment([...imagecomment]);\r\n      }\r\n      if (imagesFile) {\r\n        console.log(\"b\");\r\n        imagesFile.splice(index, 1);\r\n        setImagesFile([...imagesFile]);\r\n      }\r\n      if (imagesFile && imagesFile.length === 0) {\r\n        setImagesFile();\r\n      }\r\n\r\n      if (fuck) {\r\n        console.log(\"c\");\r\n        fuck.splice(index, 1);\r\n        Setfuck([...fuck]);\r\n      }\r\n\r\n      let date = new Date();\r\n      var myFile = [];\r\n      if (imagecomment) {\r\n        imagecomment.forEach(async (doc) => {\r\n          const response = await fetch(doc.url);\r\n          const data = await response.blob();\r\n          myFile.push(\r\n            new File([data], `filename${uuidv4()}.png`, {\r\n              type: \"image/png\",\r\n              lastModified: date,\r\n            })\r\n          );\r\n        });\r\n        Setfiles(myFile);\r\n      }\r\n      if (files) {\r\n        console.log(\"d\");\r\n        files.splice(index, 1);\r\n        Setfiles([...files]);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  if (commentmore && commentmore.photocomment) {\r\n    console.log(commentmore.photocomment);\r\n  }\r\n  const deleted = async (commentid, commentmore) => {\r\n    console.log(commentmore);\r\n    const postdelete = await Axios.post(\r\n      `https://monkeyfruad01.herokuapp.com/post/delete/comment/${commentid}`,\r\n      commentmore\r\n    );\r\n    setIsActive(false);\r\n    Setfuck([]);\r\n    setImagesFile();\r\n    Setfiles();\r\n    handledeletetorerender();\r\n  };\r\n\r\n  const edit = async () => {\r\n    Setcheckedittext(true);\r\n    setIsActive(false);\r\n    var myfuck = [];\r\n    let date = new Date();\r\n    if (imagecomment) {\r\n      imagecomment.map(async (doc) => {\r\n        const response = await Axios({\r\n          method: \"get\",\r\n          url: doc.url,\r\n          responseType: \"blob\",\r\n        });\r\n        await myfuck.push(\r\n          new File([response.data], `filename${uuidv4()}.png`, {\r\n            type: response.data.type,\r\n            lastModified: date,\r\n          })\r\n        );\r\n      });\r\n    }\r\n    setTimeout(() => {\r\n      Setfiles([...myfuck]);\r\n    }, 50);\r\n  };\r\n  const handleedit = async (commentid) => {\r\n    try {\r\n      let formdata = new FormData();\r\n      _.forEach(files, (file) => {\r\n        formdata.append(\"photocomment\", file);\r\n      });\r\n      formdata.append(\"edittextcomment\", edittextcomment);\r\n      formdata.append(\"photocomment\", imagecomment);\r\n\r\n      Setloading(true);\r\n      const editcomment = await Axios.post(\r\n        `https://monkeyfruad01.herokuapp.com/post/edit/comment/${commentid}`,\r\n        formdata\r\n      );\r\n\r\n      handleedittorerender();\r\n      Setfuck([]);\r\n      setImagesFile();\r\n      Setfiles();\r\n      Setcheckedittext(false);\r\n      Setloading(false);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const gg = async () => {\r\n    try {\r\n      if (commentmore) {\r\n        Setedittextcomment(commentmore.textcomment);\r\n        Setimagecomment(commentmore.photocomment);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    gg();\r\n  }, [commentmore]);\r\n\r\n  // console.log(imagesFile)\r\n  return (\r\n    <div>\r\n      {commentmore ? (\r\n        <div className=\"postcommentrows\">\r\n          {/* <div class=\"vl\"></div> */}\r\n          <div className=\"post-comment-img1\">\r\n            <div className=\"header-post-comment\">\r\n              <div className=\"post-profilecomment-img1\">\r\n                {commentmore.photoURL ? (\r\n                  <img\r\n                    className=\"img-circle profile-comment1\"\r\n                    src={`${commentmore.photoURL.url}`}\r\n                  />\r\n                ) : (\r\n                  <img\r\n                    className=\"img-circle profile-comment1\"\r\n                    src=\"/img/profile.png\"\r\n                  />\r\n                )}\r\n              </div>\r\n              <div className=\"post-comment-name1\">\r\n                {commentmore ? \"@\" : null}\r\n                {commentmore.username}\r\n                <span className=\"post-comment-time1\">\r\n                  {\" \"}\r\n                  {moment(new Date(commentmore.datetime.seconds * 1000)).format(\r\n                    \"LTS\"\r\n                  )}{\" \"}\r\n                </span>\r\n              </div>\r\n            </div>\r\n\r\n            <br />\r\n            <div className=\"post-comment-comments2\">\r\n              <div className=\"postcomment1\">{commentmore.textcomment}</div>\r\n              <div className=\"imglistcomment\">\r\n                {/* {loading ? <ClipLoader /> : <div></div>} */}\r\n                {imagecomment\r\n                  ? imagecomment\r\n                    ? imagecomment.map((doc) => {\r\n                        return (\r\n                          <div className=\"imglistcommentpost1\">\r\n                            <img\r\n                              className=\"listcommentpost2\"\r\n                              src={`${doc.url}`}\r\n                              onClick={() => (\r\n                                Setimagemodal(doc.url), handleopenmodal()\r\n                              )}\r\n                            />\r\n                          </div>\r\n                        );\r\n                      })\r\n                    : null\r\n                  : null}\r\n                <Modalimage\r\n                  isopen={isopen}\r\n                  handleopenmodal={handleopenmodal}\r\n                  handleclosemodal={handleclosemodal}\r\n                  imagemodal={imagemodal}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\nexport default Listcommentpost;\r\n"]},"metadata":{},"sourceType":"module"}